module: tb tb
net:   tb.irq_id_o [5] = xxxxx     // irq_id_o
net:   tb.irq_ack_o [1] = 0     // irq_ack_o
net:   tb.instr_req_o [1] = 0     // instr_req_o
net:   tb.instr_addr_o [32] = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx     // instr_addr_o
net:   tb.debug_rvalid_o [1] = 0     // debug_rvalid_o
net:   tb.debug_rdata_o [32] = 00000000000000000000000000000000     // debug_rdata_o
net:   tb.debug_halted_o [1] = 0     // debug_halted_o
net:   tb.debug_gnt_o [1] = 0     // debug_gnt_o
net:   tb.data_we_o [1] = 0     // data_we_o
net:   tb.data_wdata_o [32] = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx     // data_wdata_o
net:   tb.data_req_o [1] = 0     // data_req_o
net:   tb.data_be_o [4] = xxxx     // data_be_o
net:   tb.data_addr_o [32] = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx     // data_addr_o
net:   tb.core_busy_o [1] = 0     // core_busy_o
reg:   boot_addr_i [32] = 00000000000000000000000000000000 // boot_addr_i
reg:   clk [1] = 1 // clk
reg:   clock_en_i [1] = 1 // clock_en_i
reg:   cluster_id_i [6] = 000000 // cluster_id_i
reg:   core_id_i [4] = 0000 // core_id_i
reg:   corrects [32] = 00000000000000000000000000000000 // corrects
reg:   cycles [32] = 00000000000000000000000000011110 // cycles
reg:   data_err_i [1] = 0 // data_err_i
reg:   data_gnt_i [1] = 0 // data_gnt_i
reg:   data_rdata_i [32] = 00000000000000000000000000000000 // data_rdata_i
reg:   data_rvalid_i [1] = 0 // data_rvalid_i
reg:   debug_addr_i [15] = 000000000000000 // debug_addr_i
reg:   debug_halt_i [1] = 0 // debug_halt_i
reg:   debug_req_i [1] = 0 // debug_req_i
reg:   debug_resume_i [1] = 0 // debug_resume_i
reg:   debug_wdata_i [32] = 00000000000000000000000000000000 // debug_wdata_i
reg:   debug_we_i [1] = 0 // debug_we_i
reg:   errors [32] = 00000000000000000000000000000000 // errors
reg:   ext_perf_counters_i [2] = 00 // ext_perf_counters_i
reg:   fetch_enable_i [1] = 0 // fetch_enable_i
reg:   instr_gnt_i [1] = 0 // instr_gnt_i
reg:   instr_rdata_i [32] = 00000000000000000000000000000000 // instr_rdata_i
reg:   instr_rvalid_i [1] = 0 // instr_rvalid_i
reg:   irq_i [1] = 0 // irq_i
reg:   irq_id_i [5] = 00000 // irq_id_i
reg:   marker [32] = 00000000000000000000000000000000 // marker
reg:   panics [32] = 00000000000000000000000000000000 // panics
reg:   rst_n [1] = 1 // rst_n
reg:   rst_ni [1] = 0 // rst_ni
reg:   test_en_i [1] = 0 // test_en_i
reg:   wrongs [32] = 00000000000000000000000000000000 // wrongs
son:   tb.dut
module: zeroriscy_core tb.dut
net:   tb.dut.boot_addr_i [32] = 00000000000000000000000000000000     // boot_addr_i
net:   tb.dut.clk_i [1] = 1     // clk_i
net:   tb.dut.clock_en [1] = 1     // clock_en
net:   tb.dut.clock_en_i [1] = 1     // clock_en_i
net:   tb.dut.cluster_id_i [6] = 000000     // cluster_id_i
net:   tb.dut.core_id_i [4] = 0000     // core_id_i
net:   tb.dut.data_err_i [1] = 0     // data_err_i
net:   tb.dut.data_gnt_i [1] = 0     // data_gnt_i
net:   tb.dut.data_rdata_i [32] = 00000000000000000000000000000000     // data_rdata_i
net:   tb.dut.data_rvalid_i [1] = 0     // data_rvalid_i
net:   tb.dut.dbg_busy [1] = x     // dbg_busy
net:   tb.dut.debug_addr_i [15] = 000000000000000     // debug_addr_i
net:   tb.dut.debug_halt_i [1] = 0     // debug_halt_i
net:   tb.dut.debug_req_i [1] = 0     // debug_req_i
net:   tb.dut.debug_resume_i [1] = 0     // debug_resume_i
net:   tb.dut.debug_wdata_i [32] = 00000000000000000000000000000000     // debug_wdata_i
net:   tb.dut.debug_we_i [1] = 0     // debug_we_i
net:   tb.dut.ext_perf_counters_i [2] = 00     // ext_perf_counters_i
net:   tb.dut.fetch_enable_i [1] = 0     // fetch_enable_i
net:   tb.dut.instr_gnt_i [1] = 0     // instr_gnt_i
net:   tb.dut.instr_rdata_i [32] = 00000000000000000000000000000000     // instr_rdata_i
net:   tb.dut.instr_rvalid_i [1] = 0     // instr_rvalid_i
net:   tb.dut.irq_i [1] = 0     // irq_i
net:   tb.dut.irq_id_i [5] = 00000     // irq_id_i
net:   tb.dut.lsu_load_err [1] = 0     // lsu_load_err
net:   tb.dut.lsu_store_err [1] = 0     // lsu_store_err
net:   tb.dut.rst_ni [1] = 1     // rst_ni
net:   tb.dut.sleeping [1] = 1     // sleeping
net:   tb.dut.test_en_i [1] = 0     // test_en_i
net:   tb.dut.regfile_wdata_lsu [32] = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx     // regfile_wdata_lsu
net:   tb.dut.regfile_wdata_ex [32] = 0000000000000000000000000000000x     // regfile_wdata_ex
net:   tb.dut.perf_tbranch [1] = 0     // perf_tbranch
net:   tb.dut.perf_jump [1] = 0     // perf_jump
net:   tb.dut.perf_imiss [1] = x     // perf_imiss
net:   tb.dut.perf_branch [1] = 0     // perf_branch
net:   tb.dut.pc_set [1] = 0     // pc_set
net:   tb.dut.pc_mux_id [3] = 000     // pc_mux_id
net:   tb.dut.pc_if [32] = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx     // pc_if
net:   tb.dut.pc_id [32] = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx     // pc_id
net:   tb.dut.multdiv_signed_mode_ex [2] = 00     // multdiv_signed_mode_ex
net:   tb.dut.multdiv_operator_ex [2] = 00     // multdiv_operator_ex
net:   tb.dut.multdiv_operand_b_ex [32] = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx     // multdiv_operand_b_ex
net:   tb.dut.multdiv_operand_a_ex [32] = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx     // multdiv_operand_a_ex
net:   tb.dut.mult_en_ex [1] = 0     // mult_en_ex
net:   tb.dut.misaligned_addr [32] = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx     // misaligned_addr
net:   tb.dut.mepc [32] = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx     // mepc
net:   tb.dut.m_irq_enable [1] = x     // m_irq_enable
net:   tb.dut.lsu_busy [1] = 0     // lsu_busy
net:   tb.dut.jump_target_ex [32] = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx     // jump_target_ex
net:   tb.dut.is_decoding [1] = 0     // is_decoding
net:   tb.dut.is_compressed_id [1] = x     // is_compressed_id
net:   tb.dut.irq_id_o [5] = xxxxx     // irq_id_o
net:   tb.dut.irq_ack_o [1] = 0     // irq_ack_o
net:   tb.dut.instr_valid_id [1] = 0     // instr_valid_id
net:   tb.dut.instr_req_o [1] = 0     // instr_req_o
net:   tb.dut.instr_req_int [1] = 0     // instr_req_int
net:   tb.dut.instr_rdata_id [32] = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx     // instr_rdata_id
net:   tb.dut.instr_addr_o [32] = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx     // instr_addr_o
net:   tb.dut.illegal_c_insn_id [1] = x     // illegal_c_insn_id
net:   tb.dut.if_valid [1] = 0     // if_valid
net:   tb.dut.if_busy [1] = 0     // if_busy
net:   tb.dut.id_valid [1] = 1     // id_valid
net:   tb.dut.id_ready [1] = 1     // id_ready
net:   tb.dut.halt_if [1] = 0     // halt_if
net:   tb.dut.exc_pc_mux_id [2] = 11     // exc_pc_mux_id
net:   tb.dut.exc_cause [6] = 000000     // exc_cause
net:   tb.dut.ex_ready [1] = 1     // ex_ready
net:   tb.dut.div_en_ex [1] = 0     // div_en_ex
net:   tb.dut.debug_rvalid_o [1] = 0     // debug_rvalid_o
net:   tb.dut.debug_rdata_o [32] = 00000000000000000000000000000000     // debug_rdata_o
net:   tb.dut.debug_halted_o [1] = 0     // debug_halted_o
net:   tb.dut.debug_gnt_o [1] = 0     // debug_gnt_o
net:   tb.dut.dbg_trap [1] = 0     // dbg_trap
net:   tb.dut.dbg_stall [1] = 0     // dbg_stall
net:   tb.dut.dbg_settings [6] = xxxxxx     // dbg_settings
net:   tb.dut.dbg_req [1] = 0     // dbg_req
net:   tb.dut.dbg_reg_wreq [1] = 0     // dbg_reg_wreq
net:   tb.dut.dbg_reg_wdata [32] = 00000000000000000000000000000000     // dbg_reg_wdata
net:   tb.dut.dbg_reg_waddr [5] = 00000     // dbg_reg_waddr
net:   tb.dut.dbg_reg_rreq [1] = x     // dbg_reg_rreq
net:   tb.dut.dbg_reg_rdata [32] = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx     // dbg_reg_rdata
net:   tb.dut.dbg_reg_raddr [5] = xxxxx     // dbg_reg_raddr
net:   tb.dut.dbg_jump_req [1] = x     // dbg_jump_req
net:   tb.dut.dbg_jump_addr [32] = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx     // dbg_jump_addr
net:   tb.dut.dbg_csr_we [1] = 0     // dbg_csr_we
net:   tb.dut.dbg_csr_wdata [32] = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx     // dbg_csr_wdata
net:   tb.dut.dbg_csr_req [1] = x     // dbg_csr_req
net:   tb.dut.dbg_csr_addr [12] = xxxxxxxxxxxx     // dbg_csr_addr
net:   tb.dut.dbg_ack [1] = 0     // dbg_ack
net:   tb.dut.data_we_o [1] = 0     // data_we_o
net:   tb.dut.data_we_ex [1] = 0     // data_we_ex
net:   tb.dut.data_wdata_o [32] = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx     // data_wdata_o
net:   tb.dut.data_wdata_ex [32] = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx     // data_wdata_ex
net:   tb.dut.data_valid_lsu [1] = 0     // data_valid_lsu
net:   tb.dut.data_type_ex [2] = 00     // data_type_ex
net:   tb.dut.data_sign_ext_ex [1] = 0     // data_sign_ext_ex
net:   tb.dut.data_req_o [1] = 0     // data_req_o
net:   tb.dut.data_req_ex [1] = 0     // data_req_ex
net:   tb.dut.data_reg_offset_ex [2] = 00     // data_reg_offset_ex
net:   tb.dut.data_misaligned [1] = 0     // data_misaligned
net:   tb.dut.data_load_event_ex [1] = 0     // data_load_event_ex
net:   tb.dut.data_be_o [4] = xxxx     // data_be_o
net:   tb.dut.data_addr_o [32] = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx     // data_addr_o
net:   tb.dut.ctrl_busy [1] = 0     // ctrl_busy
net:   tb.dut.csr_wdata [32] = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx     // csr_wdata
net:   tb.dut.csr_save_if [1] = 0     // csr_save_if
net:   tb.dut.csr_save_id [1] = 0     // csr_save_id
net:   tb.dut.csr_save_cause [1] = 0     // csr_save_cause
net:   tb.dut.csr_restore_mret_id [1] = 0     // csr_restore_mret_id
net:   tb.dut.csr_rdata [32] = 00000000000000000000000000000000     // csr_rdata
net:   tb.dut.csr_op_ex [2] = 00     // csr_op_ex
net:   tb.dut.csr_op [2] = 00     // csr_op
net:   tb.dut.csr_cause [6] = 000000     // csr_cause
net:   tb.dut.csr_addr_int [12] = 000000000000     // csr_addr_int
net:   tb.dut.csr_addr [12] = xxxxxxxxxxxx     // csr_addr
net:   tb.dut.csr_access_ex [1] = 0     // csr_access_ex
net:   tb.dut.csr_access [1] = x     // csr_access
net:   tb.dut.core_ctrl_firstfetch [1] = 0     // core_ctrl_firstfetch
net:   tb.dut.core_busy_o [1] = 0     // core_busy_o
net:   tb.dut.core_busy_int [1] = 0     // core_busy_int
net:   tb.dut.clk [1] = 1     // clk
net:   tb.dut.clear_instr_valid [1] = 1     // clear_instr_valid
net:   tb.dut.branch_in_ex [1] = 0     // branch_in_ex
net:   tb.dut.branch_decision [1] = x     // branch_decision
net:   tb.dut.alu_operator_ex [6] = 000011     // alu_operator_ex
net:   tb.dut.alu_operand_b_ex [32] = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx     // alu_operand_b_ex
net:   tb.dut.alu_operand_a_ex [32] = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx     // alu_operand_a_ex
net:   tb.dut.alu_adder_result_ex [32] = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx     // alu_adder_result_ex
reg:   core_busy_q [1] = 0 // core_busy_q
son:   tb.dut.core_clock_gate_i
son:   tb.dut.cs_registers_i
son:   tb.dut.debug_unit_i
son:   tb.dut.ex_block_i
son:   tb.dut.id_stage_i
son:   tb.dut.if_stage_i
son:   tb.dut.load_store_unit_i
module: cluster_clock_gating tb.dut.core_clock_gate_i
net:   tb.dut.core_clock_gate_i.clk_i [1] = 1     // clk_i
net:   tb.dut.core_clock_gate_i.clk_o [1] = 1     // clk_o
net:   tb.dut.core_clock_gate_i.en_i [1] = 1     // en_i
net:   tb.dut.core_clock_gate_i.test_en_i [1] = 0     // test_en_i
reg:   clk_en [1] = 1 // clk_en
module: zeroriscy_cs_registers tb.dut.cs_registers_i
net:   tb.dut.cs_registers_i.boot_addr_i [24] = 000000000000000000000000     // boot_addr_i
net:   tb.dut.cs_registers_i.clk [1] = 1     // clk
net:   tb.dut.cs_registers_i.cluster_id_i [6] = 000000     // cluster_id_i
net:   tb.dut.cs_registers_i.core_id_i [4] = 0000     // core_id_i
net:   tb.dut.cs_registers_i.csr_access_i [1] = x     // csr_access_i
net:   tb.dut.cs_registers_i.csr_addr_i [12] = xxxxxxxxxxxx     // csr_addr_i
net:   tb.dut.cs_registers_i.csr_op_i [2] = 00     // csr_op_i
net:   tb.dut.cs_registers_i.csr_wdata_i [32] = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx     // csr_wdata_i
net:   tb.dut.cs_registers_i.ext_counters_i [2] = 00     // ext_counters_i
net:   tb.dut.cs_registers_i.mem_load_i [1] = 0     // mem_load_i
net:   tb.dut.cs_registers_i.mem_store_i [1] = 0     // mem_store_i
net:   tb.dut.cs_registers_i.mepc_o [32] = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx     // mepc_o
net:   tb.dut.cs_registers_i.rst_n [1] = 1     // rst_n
net:   tb.dut.cs_registers_i.pc_set_i [1] = 0     // pc_set_i
net:   tb.dut.cs_registers_i.pc_if_i [32] = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx     // pc_if_i
net:   tb.dut.cs_registers_i.pc_id_i [32] = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx     // pc_id_i
net:   tb.dut.cs_registers_i.m_irq_enable_o [1] = x     // m_irq_enable_o
net:   tb.dut.cs_registers_i.jump_i [1] = 0     // jump_i
net:   tb.dut.cs_registers_i.is_decoding_i [1] = 0     // is_decoding_i
net:   tb.dut.cs_registers_i.is_compressed_i [1] = x     // is_compressed_i
net:   tb.dut.cs_registers_i.imiss_i [1] = x     // imiss_i
net:   tb.dut.cs_registers_i.if_valid_i [1] = 0     // if_valid_i
net:   tb.dut.cs_registers_i.id_valid_i [1] = 1     // id_valid_i
net:   tb.dut.cs_registers_i.csr_save_if_i [1] = 0     // csr_save_if_i
net:   tb.dut.cs_registers_i.csr_save_id_i [1] = 0     // csr_save_id_i
net:   tb.dut.cs_registers_i.csr_save_cause_i [1] = 0     // csr_save_cause_i
net:   tb.dut.cs_registers_i.csr_restore_mret_i [1] = 0     // csr_restore_mret_i
net:   tb.dut.cs_registers_i.csr_cause_i [6] = 000000     // csr_cause_i
net:   tb.dut.cs_registers_i.branch_taken_i [1] = 0     // branch_taken_i
net:   tb.dut.cs_registers_i.branch_i [1] = 0     // branch_i
net:   tb.dut.cs_registers_i.PCCR_inc [11] = zzzzzzzzzzx     // PCCR_inc
net:   tb.dut.cs_registers_i.PCCR_in [11] = 000000x0001     // PCCR_in
reg:   PCCR_inc_q [11] = xxxxxxxxxxx // PCCR_inc_q
reg:   PCCR_n [32] = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx // PCCR_n
reg:   PCCR_q [32] = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx // PCCR_q
reg:   PCER_n [11] = xxxxxxxxxxx // PCER_n
reg:   PCER_q [11] = xxxxxxxxxxx // PCER_q
reg:   PCMR_n [2] = xx // PCMR_n
reg:   PCMR_q [2] = xx // PCMR_q
reg:   csr_rdata_int [32] = 00000000000000000000000000000000 // csr_rdata_int
reg:   csr_rdata_o [32] = 00000000000000000000000000000000 // csr_rdata_o
reg:   csr_wdata_int [32] = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx // csr_wdata_int
reg:   csr_we_int [1] = 0 // csr_we_int
reg:   i [32] = 00000000000000000000000000000001 // i
reg:   id_valid_q [1] = 1 // id_valid_q
reg:   is_pccr [1] = x // is_pccr
reg:   is_pcer [1] = x // is_pcer
reg:   is_pcmr [1] = x // is_pcmr
reg:   mcause_n [6] = xxxxxx // mcause_n
reg:   mcause_q [6] = xxxxxx // mcause_q
reg:   mepc_n [32] = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx // mepc_n
reg:   mepc_q [32] = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx // mepc_q
reg:   mstatus_n [4] = xx11 // mstatus_n
reg:   mstatus_q [4] = xx11 // mstatus_q
reg:   pccr_all_sel [1] = x // pccr_all_sel
reg:   pccr_index [5] = xxxxx // pccr_index
reg:   perf_rdata [32] = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx // perf_rdata
module: zeroriscy_debug_unit tb.dut.debug_unit_i
net:   tb.dut.debug_unit_i.clk [1] = 1     // clk
net:   tb.dut.debug_unit_i.csr_rdata_i [32] = 00000000000000000000000000000000     // csr_rdata_i
net:   tb.dut.debug_unit_i.csr_wdata_o [32] = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx     // csr_wdata_o
net:   tb.dut.debug_unit_i.debug_addr_i [15] = 000000000000000     // debug_addr_i
net:   tb.dut.debug_unit_i.debug_halt_i [1] = 0     // debug_halt_i
net:   tb.dut.debug_unit_i.debug_req_i [1] = 0     // debug_req_i
net:   tb.dut.debug_unit_i.debug_resume_i [1] = 0     // debug_resume_i
net:   tb.dut.debug_unit_i.debug_wdata_i [32] = 00000000000000000000000000000000     // debug_wdata_i
net:   tb.dut.debug_unit_i.debug_we_i [1] = 0     // debug_we_i
net:   tb.dut.debug_unit_i.jump_addr_o [32] = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx     // jump_addr_o
net:   tb.dut.debug_unit_i.npc_int [32] = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx     // npc_int
net:   tb.dut.debug_unit_i.ppc_int [32] = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx     // ppc_int
net:   tb.dut.debug_unit_i.regfile_wdata_o [32] = 00000000000000000000000000000000     // regfile_wdata_o
net:   tb.dut.debug_unit_i.regfile_wreq_o [1] = 0     // regfile_wreq_o
net:   tb.dut.debug_unit_i.rst_n [1] = 1     // rst_n
net:   tb.dut.debug_unit_i.settings_o [6] = xxxxxx     // settings_o
net:   tb.dut.debug_unit_i.sleeping_i [1] = 1     // sleeping_i
net:   tb.dut.debug_unit_i.trap_i [1] = 0     // trap_i
net:   tb.dut.debug_unit_i.regfile_waddr_o [5] = 00000     // regfile_waddr_o
net:   tb.dut.debug_unit_i.regfile_rreq_o [1] = x     // regfile_rreq_o
net:   tb.dut.debug_unit_i.regfile_rdata_i [32] = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx     // regfile_rdata_i
net:   tb.dut.debug_unit_i.regfile_raddr_o [5] = xxxxx     // regfile_raddr_o
net:   tb.dut.debug_unit_i.pc_if_i [32] = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx     // pc_if_i
net:   tb.dut.debug_unit_i.pc_id_i [32] = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx     // pc_id_i
net:   tb.dut.debug_unit_i.jump_req_o [1] = x     // jump_req_o
net:   tb.dut.debug_unit_i.instr_valid_id_i [1] = 0     // instr_valid_id_i
net:   tb.dut.debug_unit_i.exc_cause_i [6] = 000000     // exc_cause_i
net:   tb.dut.debug_unit_i.dbg_ack_i [1] = 0     // dbg_ack_i
net:   tb.dut.debug_unit_i.csr_req_o [1] = x     // csr_req_o
net:   tb.dut.debug_unit_i.csr_addr_o [12] = xxxxxxxxxxxx     // csr_addr_o
reg:   addr_q [15] = xxxxxxxxxxxxxxx // addr_q
reg:   csr_req_n [1] = 0 // csr_req_n
reg:   csr_req_q [1] = x // csr_req_q
reg:   csr_we_o [1] = 0 // csr_we_o
reg:   dbg_cause_n [6] = xxxxxx // dbg_cause_n
reg:   dbg_cause_q [6] = xxxxxx // dbg_cause_q
reg:   dbg_halt [1] = 0 // dbg_halt
reg:   dbg_rdata [32] = 00000000000000000000000000000000 // dbg_rdata
reg:   dbg_req_o [1] = 0 // dbg_req_o
reg:   dbg_resume [1] = 0 // dbg_resume
reg:   dbg_ssth_n [1] = x // dbg_ssth_n
reg:   dbg_ssth_q [1] = x // dbg_ssth_q
reg:   debug_gnt_o [1] = 0 // debug_gnt_o
reg:   debug_halted_o [1] = 0 // debug_halted_o
reg:   debug_rdata_o [32] = 00000000000000000000000000000000 // debug_rdata_o
reg:   debug_rvalid_o [1] = 0 // debug_rvalid_o
reg:   jump_req_n [1] = 0 // jump_req_n
reg:   jump_req_q [1] = x // jump_req_q
reg:   rdata_sel_n [3] = 000 // rdata_sel_n
reg:   rdata_sel_q [3] = xxx // rdata_sel_q
reg:   regfile_rreq_n [1] = 0 // regfile_rreq_n
reg:   regfile_rreq_q [1] = x // regfile_rreq_q
reg:   regfile_wreq [1] = 0 // regfile_wreq
reg:   settings_n [6] = xxxxxx // settings_n
reg:   settings_q [6] = xxxxxx // settings_q
reg:   ssth_clear [1] = 0 // ssth_clear
reg:   stall_cs [2] = xx // stall_cs
reg:   stall_ns [2] = xx // stall_ns
reg:   stall_o [1] = 0 // stall_o
reg:   state_n [1] = 0 // state_n
reg:   state_q [1] = x // state_q
reg:   wdata_q [32] = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx // wdata_q
module: zeroriscy_ex_block tb.dut.ex_block_i
net:   tb.dut.ex_block_i.branch_decision_o [1] = x     // branch_decision_o
net:   tb.dut.ex_block_i.clk [1] = 1     // clk
net:   tb.dut.ex_block_i.jump_target_o [32] = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx     // jump_target_o
net:   tb.dut.ex_block_i.rst_n [1] = 1     // rst_n
net:   tb.dut.ex_block_i.regfile_wdata_ex_o [32] = 0000000000000000000000000000000x     // regfile_wdata_ex_o
net:   tb.dut.ex_block_i.multdiv_signed_mode_i [2] = 00     // multdiv_signed_mode_i
net:   tb.dut.ex_block_i.multdiv_result [32] = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx     // multdiv_result
net:   tb.dut.ex_block_i.multdiv_ready [1] = x     // multdiv_ready
net:   tb.dut.ex_block_i.multdiv_operator_i [2] = 00     // multdiv_operator_i
net:   tb.dut.ex_block_i.multdiv_operand_b_i [32] = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx     // multdiv_operand_b_i
net:   tb.dut.ex_block_i.multdiv_operand_a_i [32] = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx     // multdiv_operand_a_i
net:   tb.dut.ex_block_i.multdiv_en_sel [1] = 0     // multdiv_en_sel
net:   tb.dut.ex_block_i.multdiv_en [1] = 0     // multdiv_en
net:   tb.dut.ex_block_i.multdiv_alu_operand_b [33] = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx1     // multdiv_alu_operand_b
net:   tb.dut.ex_block_i.multdiv_alu_operand_a [33] = 000000000000000000000000000000001     // multdiv_alu_operand_a
net:   tb.dut.ex_block_i.mult_en_i [1] = 0     // mult_en_i
net:   tb.dut.ex_block_i.lsu_ready_ex_i [1] = 0     // lsu_ready_ex_i
net:   tb.dut.ex_block_i.lsu_en_i [1] = 0     // lsu_en_i
net:   tb.dut.ex_block_i.div_en_i [1] = 0     // div_en_i
net:   tb.dut.ex_block_i.alu_result [32] = 0000000000000000000000000000000x     // alu_result
net:   tb.dut.ex_block_i.alu_operator_i [6] = 000011     // alu_operator_i
net:   tb.dut.ex_block_i.alu_operand_b_i [32] = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx     // alu_operand_b_i
net:   tb.dut.ex_block_i.alu_operand_a_i [32] = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx     // alu_operand_a_i
net:   tb.dut.ex_block_i.alu_is_equal_result [1] = x     // alu_is_equal_result
net:   tb.dut.ex_block_i.alu_cmp_result [1] = x     // alu_cmp_result
net:   tb.dut.ex_block_i.alu_adder_result_ext [34] = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx     // alu_adder_result_ext
net:   tb.dut.ex_block_i.alu_adder_result_ex_o [32] = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx     // alu_adder_result_ex_o
reg:   ex_ready_o [1] = 1 // ex_ready_o
son:   tb.dut.ex_block_i.alu_i
module: zeroriscy_alu tb.dut.ex_block_i.alu_i
net:   tb.dut.ex_block_i.alu_i.adder_result_o [32] = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx     // adder_result_o
net:   tb.dut.ex_block_i.alu_i.comparison_result_o [1] = x     // comparison_result_o
net:   tb.dut.ex_block_i.alu_i.is_equal_result_o [1] = x     // is_equal_result_o
net:   tb.dut.ex_block_i.alu_i.operand_b_neg [33] = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx1     // operand_b_neg
net:   tb.dut.ex_block_i.alu_i.shift_amt [32] = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx     // shift_amt
net:   tb.dut.ex_block_i.alu_i.shift_right_result [32] = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx     // shift_right_result
net:   tb.dut.ex_block_i.alu_i.shift_result [32] = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx     // shift_result
net:   tb.dut.ex_block_i.alu_i.shift_op_a_32 [33] = 0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx     // shift_op_a_32
net:   tb.dut.ex_block_i.alu_i.shift_op_a [32] = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx     // shift_op_a
net:   tb.dut.ex_block_i.alu_i.shift_left_result [32] = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx     // shift_left_result
net:   tb.dut.ex_block_i.alu_i.shift_left [1] = 0     // shift_left
net:   tb.dut.ex_block_i.alu_i.shift_arithmetic [1] = 0     // shift_arithmetic
net:   tb.dut.ex_block_i.alu_i.operator_i [6] = 000011     // operator_i
net:   tb.dut.ex_block_i.alu_i.operand_b_i [32] = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx     // operand_b_i
net:   tb.dut.ex_block_i.alu_i.operand_a_rev [32] = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx     // operand_a_rev
net:   tb.dut.ex_block_i.alu_i.operand_a_i [32] = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx     // operand_a_i
net:   tb.dut.ex_block_i.alu_i.multdiv_operand_b_i [33] = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx1     // multdiv_operand_b_i
net:   tb.dut.ex_block_i.alu_i.multdiv_operand_a_i [33] = 000000000000000000000000000000001     // multdiv_operand_a_i
net:   tb.dut.ex_block_i.alu_i.multdiv_en_i [1] = 0     // multdiv_en_i
net:   tb.dut.ex_block_i.alu_i.is_equal [1] = x     // is_equal
net:   tb.dut.ex_block_i.alu_i.adder_result_ext_o [34] = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx     // adder_result_ext_o
net:   tb.dut.ex_block_i.alu_i.adder_result [32] = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx     // adder_result
net:   tb.dut.ex_block_i.alu_i.adder_in_b [33] = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx1     // adder_in_b
net:   tb.dut.ex_block_i.alu_i.adder_in_a [33] = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx1     // adder_in_a
reg:   adder_op_b_negate [1] = 1 // adder_op_b_negate
reg:   cmp_result [1] = x // cmp_result
reg:   cmp_signed [1] = 0 // cmp_signed
reg:   is_greater_equal [1] = x // is_greater_equal
reg:   result_o [32] = 0000000000000000000000000000000x // result_o
module: zeroriscy_id_stage tb.dut.id_stage_i
net:   tb.dut.id_stage_i.alu_operand_a_ex_o [32] = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx     // alu_operand_a_ex_o
net:   tb.dut.id_stage_i.alu_operand_b_ex_o [32] = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx     // alu_operand_b_ex_o
net:   tb.dut.id_stage_i.alu_operator_ex_o [6] = 000011     // alu_operator_ex_o
net:   tb.dut.id_stage_i.branch_decision_i [1] = x     // branch_decision_i
net:   tb.dut.id_stage_i.branch_in_ex_o [1] = 0     // branch_in_ex_o
net:   tb.dut.id_stage_i.branch_taken_ex [1] = 0     // branch_taken_ex
net:   tb.dut.id_stage_i.clear_instr_valid_o [1] = 1     // clear_instr_valid_o
net:   tb.dut.id_stage_i.clk [1] = 1     // clk
net:   tb.dut.id_stage_i.csr_access_ex_o [1] = 0     // csr_access_ex_o
net:   tb.dut.id_stage_i.csr_op_ex_o [2] = 00     // csr_op_ex_o
net:   tb.dut.id_stage_i.csr_rdata_i [32] = 00000000000000000000000000000000     // csr_rdata_i
net:   tb.dut.id_stage_i.data_load_event_ex_o [1] = 0     // data_load_event_ex_o
net:   tb.dut.id_stage_i.data_reg_offset_ex_o [2] = 00     // data_reg_offset_ex_o
net:   tb.dut.id_stage_i.data_req_ex_o [1] = 0     // data_req_ex_o
net:   tb.dut.id_stage_i.data_sign_ext_ex_o [1] = 0     // data_sign_ext_ex_o
net:   tb.dut.id_stage_i.data_type_ex_o [2] = 00     // data_type_ex_o
net:   tb.dut.id_stage_i.data_wdata_ex_o [32] = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx     // data_wdata_ex_o
net:   tb.dut.id_stage_i.data_we_ex_o [1] = 0     // data_we_ex_o
net:   tb.dut.id_stage_i.dbg_jump_req_i [1] = x     // dbg_jump_req_i
net:   tb.dut.id_stage_i.dbg_reg_raddr_i [5] = xxxxx     // dbg_reg_raddr_i
net:   tb.dut.id_stage_i.dbg_reg_rdata_o [32] = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx     // dbg_reg_rdata_o
net:   tb.dut.id_stage_i.dbg_reg_rreq_i [1] = x     // dbg_reg_rreq_i
net:   tb.dut.id_stage_i.dbg_reg_waddr_i [5] = 00000     // dbg_reg_waddr_i
net:   tb.dut.id_stage_i.dbg_reg_wdata_i [32] = 00000000000000000000000000000000     // dbg_reg_wdata_i
net:   tb.dut.id_stage_i.dbg_reg_wreq_i [1] = 0     // dbg_reg_wreq_i
net:   tb.dut.id_stage_i.dbg_req_i [1] = 0     // dbg_req_i
net:   tb.dut.id_stage_i.dbg_settings_i [6] = xxxxxx     // dbg_settings_i
net:   tb.dut.id_stage_i.dbg_stall_i [1] = 0     // dbg_stall_i
net:   tb.dut.id_stage_i.div_en_ex_o [1] = 0     // div_en_ex_o
net:   tb.dut.id_stage_i.ex_ready_i [1] = 1     // ex_ready_i
net:   tb.dut.id_stage_i.fetch_enable_i [1] = 0     // fetch_enable_i
net:   tb.dut.id_stage_i.id_ready_o [1] = 1     // id_ready_o
net:   tb.dut.id_stage_i.id_valid_o [1] = 1     // id_valid_o
net:   tb.dut.id_stage_i.illegal_reg_rv32e [1] = 0     // illegal_reg_rv32e
net:   tb.dut.id_stage_i.instr [32] = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx     // instr
net:   tb.dut.id_stage_i.irq_i [1] = 0     // irq_i
net:   tb.dut.id_stage_i.irq_id_i [5] = 00000     // irq_id_i
net:   tb.dut.id_stage_i.lsu_load_err_i [1] = 0     // lsu_load_err_i
net:   tb.dut.id_stage_i.lsu_store_err_i [1] = 0     // lsu_store_err_i
net:   tb.dut.id_stage_i.m_irq_enable_i [1] = x     // m_irq_enable_i
net:   tb.dut.id_stage_i.mult_en_ex_o [1] = 0     // mult_en_ex_o
net:   tb.dut.id_stage_i.multdiv_int_en [1] = 0     // multdiv_int_en
net:   tb.dut.id_stage_i.multdiv_operand_a_ex_o [32] = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx     // multdiv_operand_a_ex_o
net:   tb.dut.id_stage_i.multdiv_operand_b_ex_o [32] = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx     // multdiv_operand_b_ex_o
net:   tb.dut.id_stage_i.multdiv_operator_ex_o [2] = 00     // multdiv_operator_ex_o
net:   tb.dut.id_stage_i.multdiv_signed_mode_ex_o [2] = 00     // multdiv_signed_mode_ex_o
net:   tb.dut.id_stage_i.operand_b_fw_id [32] = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx     // operand_b_fw_id
net:   tb.dut.id_stage_i.regfile_wdata_ex_i [32] = 0000000000000000000000000000000x     // regfile_wdata_ex_i
net:   tb.dut.id_stage_i.rst_n [1] = 1     // rst_n
net:   tb.dut.id_stage_i.test_en_i [1] = 0     // test_en_i
net:   tb.dut.id_stage_i.regfile_we_id [1] = 0     // regfile_we_id
net:   tb.dut.id_stage_i.regfile_wdata_lsu_i [32] = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx     // regfile_wdata_lsu_i
net:   tb.dut.id_stage_i.regfile_data_rb_id [32] = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx     // regfile_data_rb_id
net:   tb.dut.id_stage_i.regfile_data_ra_id [32] = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx     // regfile_data_ra_id
net:   tb.dut.id_stage_i.regfile_alu_waddr_id [5] = xxxxx     // regfile_alu_waddr_id
net:   tb.dut.id_stage_i.regfile_addr_rb_id [5] = xxxxx     // regfile_addr_rb_id
net:   tb.dut.id_stage_i.regfile_addr_ra_id [5] = xxxxx     // regfile_addr_ra_id
net:   tb.dut.id_stage_i.pipe_flush_dec [1] = 0     // pipe_flush_dec
net:   tb.dut.id_stage_i.perf_tbranch_o [1] = 0     // perf_tbranch_o
net:   tb.dut.id_stage_i.perf_jump_o [1] = 0     // perf_jump_o
net:   tb.dut.id_stage_i.pc_set_o [1] = 0     // pc_set_o
net:   tb.dut.id_stage_i.pc_mux_o [3] = 000     // pc_mux_o
net:   tb.dut.id_stage_i.pc_id_i [32] = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx     // pc_id_i
net:   tb.dut.id_stage_i.operand_a_fw_mux_sel [2] = 00     // operand_a_fw_mux_sel
net:   tb.dut.id_stage_i.multdiv_signed_mode [2] = 00     // multdiv_signed_mode
net:   tb.dut.id_stage_i.multdiv_operator [2] = 00     // multdiv_operator
net:   tb.dut.id_stage_i.mult_int_en [1] = 0     // mult_int_en
net:   tb.dut.id_stage_i.mret_insn_dec [1] = 0     // mret_insn_dec
net:   tb.dut.id_stage_i.misaligned_addr_i [32] = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx     // misaligned_addr_i
net:   tb.dut.id_stage_i.jump_in_id [1] = 0     // jump_in_id
net:   tb.dut.id_stage_i.is_decoding_o [1] = 0     // is_decoding_o
net:   tb.dut.id_stage_i.is_compressed_i [1] = x     // is_compressed_i
net:   tb.dut.id_stage_i.irq_req_ctrl [1] = x     // irq_req_ctrl
net:   tb.dut.id_stage_i.irq_id_o [5] = xxxxx     // irq_id_o
net:   tb.dut.id_stage_i.irq_id_ctrl [5] = xxxxx     // irq_id_ctrl
net:   tb.dut.id_stage_i.irq_ack_o [1] = 0     // irq_ack_o
net:   tb.dut.id_stage_i.instr_valid_i [1] = 0     // instr_valid_i
net:   tb.dut.id_stage_i.instr_req_o [1] = 0     // instr_req_o
net:   tb.dut.id_stage_i.instr_rdata_i [32] = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx     // instr_rdata_i
net:   tb.dut.id_stage_i.imm_z_type [32] = 000000000000000000000000000xxxxx     // imm_z_type
net:   tb.dut.id_stage_i.imm_vu_type [32] = 00000000000000000000000000xxxxxx     // imm_vu_type
net:   tb.dut.id_stage_i.imm_vs_type [32] = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx     // imm_vs_type
net:   tb.dut.id_stage_i.imm_uj_type [32] = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx0     // imm_uj_type
net:   tb.dut.id_stage_i.imm_u_type [32] = xxxxxxxxxxxxxxxxxxxx000000000000     // imm_u_type
net:   tb.dut.id_stage_i.imm_sb_type [32] = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx0     // imm_sb_type
net:   tb.dut.id_stage_i.imm_s_type [32] = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx     // imm_s_type
net:   tb.dut.id_stage_i.imm_s3_type [32] = 000000000000000000000000000xxxxx     // imm_s3_type
net:   tb.dut.id_stage_i.imm_s2_type [32] = 000000000000000000000000000xxxxx     // imm_s2_type
net:   tb.dut.id_stage_i.imm_iz_type [32] = 00000000000000000000xxxxxxxxxxxx     // imm_iz_type
net:   tb.dut.id_stage_i.imm_i_type [32] = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx     // imm_i_type
net:   tb.dut.id_stage_i.imm_bi_type [32] = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx     // imm_bi_type
net:   tb.dut.id_stage_i.imm_b_mux_sel [4] = 0000     // imm_b_mux_sel
net:   tb.dut.id_stage_i.imm_a_mux_sel [1] = 1     // imm_a_mux_sel
net:   tb.dut.id_stage_i.illegal_insn_dec [1] = 1     // illegal_insn_dec
net:   tb.dut.id_stage_i.illegal_c_insn_i [1] = x     // illegal_c_insn_i
net:   tb.dut.id_stage_i.halt_if_o [1] = 0     // halt_if_o
net:   tb.dut.id_stage_i.halt_id [1] = 0     // halt_id
net:   tb.dut.id_stage_i.exc_pc_mux_o [2] = 11     // exc_pc_mux_o
net:   tb.dut.id_stage_i.exc_kill [1] = 0     // exc_kill
net:   tb.dut.id_stage_i.exc_cause_o [6] = 000000     // exc_cause_o
net:   tb.dut.id_stage_i.exc_ack [1] = 0     // exc_ack
net:   tb.dut.id_stage_i.ecall_insn_dec [1] = 0     // ecall_insn_dec
net:   tb.dut.id_stage_i.ebrk_insn [1] = 0     // ebrk_insn
net:   tb.dut.id_stage_i.div_int_en [1] = 0     // div_int_en
net:   tb.dut.id_stage_i.deassert_we [1] = 1     // deassert_we
net:   tb.dut.id_stage_i.dbg_trap_o [1] = 0     // dbg_trap_o
net:   tb.dut.id_stage_i.dbg_ack_o [1] = 0     // dbg_ack_o
net:   tb.dut.id_stage_i.data_we_id [1] = 0     // data_we_id
net:   tb.dut.id_stage_i.data_type_id [2] = 00     // data_type_id
net:   tb.dut.id_stage_i.data_sign_ext_id [1] = 0     // data_sign_ext_id
net:   tb.dut.id_stage_i.data_req_id [1] = 0     // data_req_id
net:   tb.dut.id_stage_i.data_reg_offset_id [2] = 00     // data_reg_offset_id
net:   tb.dut.id_stage_i.data_misaligned_i [1] = 0     // data_misaligned_i
net:   tb.dut.id_stage_i.data_load_event_id [1] = 0     // data_load_event_id
net:   tb.dut.id_stage_i.ctrl_busy_o [1] = 0     // ctrl_busy_o
net:   tb.dut.id_stage_i.csr_status [1] = 0     // csr_status
net:   tb.dut.id_stage_i.csr_save_if_o [1] = 0     // csr_save_if_o
net:   tb.dut.id_stage_i.csr_save_id_o [1] = 0     // csr_save_id_o
net:   tb.dut.id_stage_i.csr_save_cause_o [1] = 0     // csr_save_cause_o
net:   tb.dut.id_stage_i.csr_restore_mret_id_o [1] = 0     // csr_restore_mret_id_o
net:   tb.dut.id_stage_i.csr_op [2] = 00     // csr_op
net:   tb.dut.id_stage_i.csr_cause_o [6] = 000000     // csr_cause_o
net:   tb.dut.id_stage_i.csr_access [1] = 0     // csr_access
net:   tb.dut.id_stage_i.core_ctrl_firstfetch_o [1] = 0     // core_ctrl_firstfetch_o
net:   tb.dut.id_stage_i.branch_in_id [1] = 0     // branch_in_id
net:   tb.dut.id_stage_i.alu_operator [6] = 000011     // alu_operator
net:   tb.dut.id_stage_i.alu_operand_b [32] = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx     // alu_operand_b
net:   tb.dut.id_stage_i.alu_op_b_mux_sel [3] = 000     // alu_op_b_mux_sel
net:   tb.dut.id_stage_i.alu_op_a_mux_sel [3] = 000     // alu_op_a_mux_sel
reg:   alu_operand_a [32] = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx // alu_operand_a
reg:   branch_mux_dec [1] = 0 // branch_mux_dec
reg:   branch_set_n [1] = 0 // branch_set_n
reg:   branch_set_q [1] = 0 // branch_set_q
reg:   branch_stall [1] = 0 // branch_stall
reg:   id_wb_fsm_cs [1] = x // id_wb_fsm_cs
reg:   id_wb_fsm_ns [1] = x // id_wb_fsm_ns
reg:   imm_a [32] = 00000000000000000000000000000000 // imm_a
reg:   imm_b [32] = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx // imm_b
reg:   instr_multicyle [1] = 0 // instr_multicyle
reg:   jump_mux_dec [1] = 0 // jump_mux_dec
reg:   jump_set [1] = 0 // jump_set
reg:   jump_stall [1] = 0 // jump_stall
reg:   load_stall [1] = 0 // load_stall
reg:   multdiv_stall [1] = 0 // multdiv_stall
reg:   operand_a_fw_id [32] = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx // operand_a_fw_id
reg:   operand_b [32] = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx // operand_b
reg:   perf_branch_o [1] = 0 // perf_branch_o
reg:   regfile_waddr_mux [5] = xxxxx // regfile_waddr_mux
reg:   regfile_wdata_mux [32] = 0000000000000000000000000000000x // regfile_wdata_mux
reg:   regfile_we [1] = 0 // regfile_we
reg:   regfile_we_mux [1] = 0 // regfile_we_mux
reg:   select_data_rf [1] = 1 // select_data_rf
son:   tb.dut.id_stage_i.controller_i
son:   tb.dut.id_stage_i.decoder_i
son:   tb.dut.id_stage_i.int_controller_i
son:   tb.dut.id_stage_i.registers_i
module: zeroriscy_controller tb.dut.id_stage_i.controller_i
net:   tb.dut.id_stage_i.controller_i.branch_set_i [1] = 0     // branch_set_i
net:   tb.dut.id_stage_i.controller_i.branch_taken_ex_i [1] = 0     // branch_taken_ex_i
net:   tb.dut.id_stage_i.controller_i.clk [1] = 1     // clk
net:   tb.dut.id_stage_i.controller_i.dbg_jump_req_i [1] = x     // dbg_jump_req_i
net:   tb.dut.id_stage_i.controller_i.dbg_req_i [1] = 0     // dbg_req_i
net:   tb.dut.id_stage_i.controller_i.dbg_settings_i [6] = xxxxxx     // dbg_settings_i
net:   tb.dut.id_stage_i.controller_i.dbg_stall_i [1] = 0     // dbg_stall_i
net:   tb.dut.id_stage_i.controller_i.fetch_enable_i [1] = 0     // fetch_enable_i
net:   tb.dut.id_stage_i.controller_i.id_ready_i [1] = 1     // id_ready_i
net:   tb.dut.id_stage_i.controller_i.illegal_insn_i [1] = 1     // illegal_insn_i
net:   tb.dut.id_stage_i.controller_i.instr_multicyle_i [1] = 0     // instr_multicyle_i
net:   tb.dut.id_stage_i.controller_i.jump_set_i [1] = 0     // jump_set_i
net:   tb.dut.id_stage_i.controller_i.m_IE_i [1] = x     // m_IE_i
net:   tb.dut.id_stage_i.controller_i.rst_n [1] = 1     // rst_n
net:   tb.dut.id_stage_i.controller_i.pipe_flush_i [1] = 0     // pipe_flush_i
net:   tb.dut.id_stage_i.controller_i.operand_a_fw_mux_sel_o [2] = 00     // operand_a_fw_mux_sel_o
net:   tb.dut.id_stage_i.controller_i.mret_insn_i [1] = 0     // mret_insn_i
net:   tb.dut.id_stage_i.controller_i.irq_req_ctrl_i [1] = x     // irq_req_ctrl_i
net:   tb.dut.id_stage_i.controller_i.irq_id_ctrl_i [5] = xxxxx     // irq_id_ctrl_i
net:   tb.dut.id_stage_i.controller_i.instr_valid_i [1] = 0     // instr_valid_i
net:   tb.dut.id_stage_i.controller_i.ecall_insn_i [1] = 0     // ecall_insn_i
net:   tb.dut.id_stage_i.controller_i.ebrk_insn_i [1] = 0     // ebrk_insn_i
net:   tb.dut.id_stage_i.controller_i.data_misaligned_i [1] = 0     // data_misaligned_i
net:   tb.dut.id_stage_i.controller_i.csr_status_i [1] = 0     // csr_status_i
net:   tb.dut.id_stage_i.controller_i.branch_in_id_i [1] = 0     // branch_in_id_i
reg:   csr_cause_o [6] = 000000 // csr_cause_o
reg:   csr_restore_mret_id_o [1] = 0 // csr_restore_mret_id_o
reg:   csr_save_cause_o [1] = 0 // csr_save_cause_o
reg:   csr_save_id_o [1] = 0 // csr_save_id_o
reg:   csr_save_if_o [1] = 0 // csr_save_if_o
reg:   ctrl_busy_o [1] = 0 // ctrl_busy_o
reg:   ctrl_fsm_cs [4] = 0000 // ctrl_fsm_cs
reg:   ctrl_fsm_ns [4] = 0000 // ctrl_fsm_ns
reg:   dbg_ack_o [1] = 0 // dbg_ack_o
reg:   dbg_trap_o [1] = 0 // dbg_trap_o
reg:   deassert_we_o [1] = 1 // deassert_we_o
reg:   exc_ack_o [1] = 0 // exc_ack_o
reg:   exc_cause_o [6] = 000000 // exc_cause_o
reg:   exc_kill_o [1] = 0 // exc_kill_o
reg:   exc_pc_mux_o [2] = 11 // exc_pc_mux_o
reg:   first_fetch_o [1] = 0 // first_fetch_o
reg:   halt_id_o [1] = 0 // halt_id_o
reg:   halt_if_o [1] = 0 // halt_if_o
reg:   instr_req_o [1] = 0 // instr_req_o
reg:   irq_ack_o [1] = 0 // irq_ack_o
reg:   irq_enable_int [1] = x // irq_enable_int
reg:   irq_id_o [5] = xxxxx // irq_id_o
reg:   is_decoding_o [1] = 0 // is_decoding_o
reg:   pc_mux_o [3] = 000 // pc_mux_o
reg:   pc_set_o [1] = 0 // pc_set_o
reg:   perf_jump_o [1] = 0 // perf_jump_o
reg:   perf_tbranch_o [1] = 0 // perf_tbranch_o
module: zeroriscy_decoder tb.dut.id_stage_i.decoder_i
net:   tb.dut.id_stage_i.decoder_i.branch_mux_i [1] = 0     // branch_mux_i
net:   tb.dut.id_stage_i.decoder_i.deassert_we_i [1] = 1     // deassert_we_i
net:   tb.dut.id_stage_i.decoder_i.instr_rdata_i [32] = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx     // instr_rdata_i
net:   tb.dut.id_stage_i.decoder_i.jump_mux_i [1] = 0     // jump_mux_i
net:   tb.dut.id_stage_i.decoder_i.regfile_we_o [1] = 0     // regfile_we_o
net:   tb.dut.id_stage_i.decoder_i.mult_int_en_o [1] = 0     // mult_int_en_o
net:   tb.dut.id_stage_i.decoder_i.jump_in_id_o [1] = 0     // jump_in_id_o
net:   tb.dut.id_stage_i.decoder_i.illegal_c_insn_i [1] = x     // illegal_c_insn_i
net:   tb.dut.id_stage_i.decoder_i.div_int_en_o [1] = 0     // div_int_en_o
net:   tb.dut.id_stage_i.decoder_i.data_req_o [1] = 0     // data_req_o
net:   tb.dut.id_stage_i.decoder_i.data_misaligned_i [1] = 0     // data_misaligned_i
net:   tb.dut.id_stage_i.decoder_i.csr_op_o [2] = 00     // csr_op_o
net:   tb.dut.id_stage_i.decoder_i.branch_in_id_o [1] = 0     // branch_in_id_o
reg:   alu_op_a_mux_sel_o [3] = 000 // alu_op_a_mux_sel_o
reg:   alu_op_b_mux_sel_o [3] = 000 // alu_op_b_mux_sel_o
reg:   alu_operator_o [6] = 000011 // alu_operator_o
reg:   branch_in_id [1] = 0 // branch_in_id
reg:   csr_access_o [1] = 0 // csr_access_o
reg:   csr_illegal [1] = 0 // csr_illegal
reg:   csr_op [2] = 00 // csr_op
reg:   csr_status_o [1] = 0 // csr_status_o
reg:   data_load_event_o [1] = 0 // data_load_event_o
reg:   data_reg_offset_o [2] = 00 // data_reg_offset_o
reg:   data_req [1] = 0 // data_req
reg:   data_sign_extension_o [1] = 0 // data_sign_extension_o
reg:   data_type_o [2] = 00 // data_type_o
reg:   data_we_o [1] = 0 // data_we_o
reg:   div_int_en [1] = 0 // div_int_en
reg:   ebrk_insn_o [1] = 0 // ebrk_insn_o
reg:   ecall_insn_o [1] = 0 // ecall_insn_o
reg:   illegal_insn_o [1] = 1 // illegal_insn_o
reg:   imm_a_mux_sel_o [1] = 1 // imm_a_mux_sel_o
reg:   imm_b_mux_sel_o [4] = 0000 // imm_b_mux_sel_o
reg:   jump_in_id [1] = 0 // jump_in_id
reg:   mret_insn_o [1] = 0 // mret_insn_o
reg:   mult_int_en [1] = 0 // mult_int_en
reg:   multdiv_operator_o [2] = 00 // multdiv_operator_o
reg:   multdiv_signed_mode_o [2] = 00 // multdiv_signed_mode_o
reg:   pipe_flush_o [1] = 0 // pipe_flush_o
reg:   regfile_we [1] = 0 // regfile_we
module: zeroriscy_int_controller tb.dut.id_stage_i.int_controller_i
net:   tb.dut.id_stage_i.int_controller_i.clk [1] = 1     // clk
net:   tb.dut.id_stage_i.int_controller_i.ctrl_ack_i [1] = 0     // ctrl_ack_i
net:   tb.dut.id_stage_i.int_controller_i.ctrl_kill_i [1] = 0     // ctrl_kill_i
net:   tb.dut.id_stage_i.int_controller_i.irq_enable_ext [1] = x     // irq_enable_ext
net:   tb.dut.id_stage_i.int_controller_i.irq_i [1] = 0     // irq_i
net:   tb.dut.id_stage_i.int_controller_i.irq_id_ctrl_o [5] = xxxxx     // irq_id_ctrl_o
net:   tb.dut.id_stage_i.int_controller_i.irq_id_i [5] = 00000     // irq_id_i
net:   tb.dut.id_stage_i.int_controller_i.m_IE_i [1] = x     // m_IE_i
net:   tb.dut.id_stage_i.int_controller_i.rst_n [1] = 1     // rst_n
net:   tb.dut.id_stage_i.int_controller_i.irq_req_ctrl_o [1] = x     // irq_req_ctrl_o
reg:   exc_ctrl_cs [2] = xx // exc_ctrl_cs
reg:   irq_id_q [5] = xxxxx // irq_id_q
module: zeroriscy_register_file tb.dut.id_stage_i.registers_i
net:   tb.dut.id_stage_i.registers_i.clk [1] = 1     // clk
net:   tb.dut.id_stage_i.registers_i.raddr_a_i [5] = xxxxx     // raddr_a_i
net:   tb.dut.id_stage_i.registers_i.raddr_a_int [5] = xxxxx     // raddr_a_int
net:   tb.dut.id_stage_i.registers_i.raddr_b_i [5] = xxxxx     // raddr_b_i
net:   tb.dut.id_stage_i.registers_i.raddr_b_int [5] = xxxxx     // raddr_b_int
net:   tb.dut.id_stage_i.registers_i.rst_n [1] = 1     // rst_n
net:   tb.dut.id_stage_i.registers_i.test_en_i [1] = 0     // test_en_i
net:   tb.dut.id_stage_i.registers_i.waddr_a_i [5] = xxxxx     // waddr_a_i
net:   tb.dut.id_stage_i.registers_i.waddr_a_int [5] = xxxxx     // waddr_a_int
net:   tb.dut.id_stage_i.registers_i.wdata_a_i [32] = 0000000000000000000000000000000x     // wdata_a_i
net:   tb.dut.id_stage_i.registers_i.we_a_i [1] = 0     // we_a_i
net:   tb.dut.id_stage_i.registers_i.rdata_b_o [32] = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx     // rdata_b_o
net:   tb.dut.id_stage_i.registers_i.rdata_a_o [32] = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx     // rdata_a_o
net:   tb.dut.id_stage_i.registers_i.mem_clocks [31] = 0000000000000000000000000000000     // mem_clocks
net:   tb.dut.id_stage_i.registers_i.clk_int [1] = 0     // clk_int
reg:   i [32] = 00000000000000000000000000100000 // i
reg:   k [32] = 00000000000000000000000000100000 // k
reg:   mem [1024] = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx00000000000000000000000000000000 // mem
reg:   waddr_onehot_a [31] = 0000000000000000000000000000000 // waddr_onehot_a
reg:   wdata_a_q [32] = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx // wdata_a_q
son:   tb.dut.id_stage_i.registers_i.CG_WE_GLOBAL
module: cluster_clock_gating tb.dut.id_stage_i.registers_i.CG_WE_GLOBAL
net:   tb.dut.id_stage_i.registers_i.CG_WE_GLOBAL.clk_i [1] = 1     // clk_i
net:   tb.dut.id_stage_i.registers_i.CG_WE_GLOBAL.clk_o [1] = 0     // clk_o
net:   tb.dut.id_stage_i.registers_i.CG_WE_GLOBAL.en_i [1] = 0     // en_i
net:   tb.dut.id_stage_i.registers_i.CG_WE_GLOBAL.test_en_i [1] = 0     // test_en_i
reg:   clk_en [1] = 0 // clk_en
module: zeroriscy_if_stage tb.dut.if_stage_i
net:   tb.dut.if_stage_i.boot_addr_i [32] = 00000000000000000000000000000000     // boot_addr_i
net:   tb.dut.if_stage_i.clear_instr_valid_i [1] = 1     // clear_instr_valid_i
net:   tb.dut.if_stage_i.clk [1] = 1     // clk
net:   tb.dut.if_stage_i.dbg_jump_addr_i [32] = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx     // dbg_jump_addr_i
net:   tb.dut.if_stage_i.exc_pc_mux_i [2] = 11     // exc_pc_mux_i
net:   tb.dut.if_stage_i.exc_vec_pc_mux_i [5] = 00000     // exc_vec_pc_mux_i
net:   tb.dut.if_stage_i.exception_pc_reg_i [32] = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx     // exception_pc_reg_i
net:   tb.dut.if_stage_i.halt_if_i [1] = 0     // halt_if_i
net:   tb.dut.if_stage_i.id_ready_i [1] = 1     // id_ready_i
net:   tb.dut.if_stage_i.if_busy_o [1] = 0     // if_busy_o
net:   tb.dut.if_stage_i.if_ready [1] = 0     // if_ready
net:   tb.dut.if_stage_i.if_valid_o [1] = 0     // if_valid_o
net:   tb.dut.if_stage_i.instr_gnt_i [1] = 0     // instr_gnt_i
net:   tb.dut.if_stage_i.instr_rdata_i [32] = 00000000000000000000000000000000     // instr_rdata_i
net:   tb.dut.if_stage_i.instr_rvalid_i [1] = 0     // instr_rvalid_i
net:   tb.dut.if_stage_i.jump_target_ex_i [32] = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx     // jump_target_ex_i
net:   tb.dut.if_stage_i.pc_if_o [32] = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx     // pc_if_o
net:   tb.dut.if_stage_i.pc_mux_i [3] = 000     // pc_mux_i
net:   tb.dut.if_stage_i.pc_set_i [1] = 0     // pc_set_i
net:   tb.dut.if_stage_i.perf_imiss_o [1] = x     // perf_imiss_o
net:   tb.dut.if_stage_i.req_i [1] = 0     // req_i
net:   tb.dut.if_stage_i.rst_n [1] = 1     // rst_n
net:   tb.dut.if_stage_i.prefetch_busy [1] = 0     // prefetch_busy
net:   tb.dut.if_stage_i.instr_req_o [1] = 0     // instr_req_o
net:   tb.dut.if_stage_i.instr_decompressed [32] = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx     // instr_decompressed
net:   tb.dut.if_stage_i.instr_compressed_int [1] = x     // instr_compressed_int
net:   tb.dut.if_stage_i.instr_addr_o [32] = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx     // instr_addr_o
net:   tb.dut.if_stage_i.illegal_c_insn [1] = x     // illegal_c_insn
net:   tb.dut.if_stage_i.fetch_valid [1] = x     // fetch_valid
net:   tb.dut.if_stage_i.fetch_rdata [32] = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx     // fetch_rdata
net:   tb.dut.if_stage_i.fetch_addr [32] = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx     // fetch_addr
reg:   branch_req [1] = 0 // branch_req
reg:   exc_pc [32] = 00000000000000000000000000000000 // exc_pc
reg:   fetch_addr_n [32] = 00000000000000000000000010000000 // fetch_addr_n
reg:   fetch_ready [1] = 0 // fetch_ready
reg:   illegal_c_insn_id_o [1] = x // illegal_c_insn_id_o
reg:   instr_rdata_id_o [32] = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx // instr_rdata_id_o
reg:   instr_valid_id_o [1] = 0 // instr_valid_id_o
reg:   is_compressed_id_o [1] = x // is_compressed_id_o
reg:   offset_fsm_cs [1] = 1 // offset_fsm_cs
reg:   offset_fsm_ns [1] = 1 // offset_fsm_ns
reg:   pc_id_o [32] = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx // pc_id_o
reg:   valid [1] = 0 // valid
son:   tb.dut.if_stage_i.compressed_decoder_i
son:   tb.dut.if_stage_i.prefetch_buffer_i
module: zeroriscy_compressed_decoder tb.dut.if_stage_i.compressed_decoder_i
net:   tb.dut.if_stage_i.compressed_decoder_i.is_compressed_o [1] = x     // is_compressed_o
net:   tb.dut.if_stage_i.compressed_decoder_i.instr_i [32] = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx     // instr_i
reg:   illegal_instr_o [1] = x // illegal_instr_o
reg:   instr_o [32] = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx // instr_o
module: zeroriscy_prefetch_buffer tb.dut.if_stage_i.prefetch_buffer_i
net:   tb.dut.if_stage_i.prefetch_buffer_i.addr_i [32] = 00000000000000000000000010000000     // addr_i
net:   tb.dut.if_stage_i.prefetch_buffer_i.branch_i [1] = 0     // branch_i
net:   tb.dut.if_stage_i.prefetch_buffer_i.busy_o [1] = 0     // busy_o
net:   tb.dut.if_stage_i.prefetch_buffer_i.clk [1] = 1     // clk
net:   tb.dut.if_stage_i.prefetch_buffer_i.instr_gnt_i [1] = 0     // instr_gnt_i
net:   tb.dut.if_stage_i.prefetch_buffer_i.instr_rdata_i [32] = 00000000000000000000000000000000     // instr_rdata_i
net:   tb.dut.if_stage_i.prefetch_buffer_i.instr_rvalid_i [1] = 0     // instr_rvalid_i
net:   tb.dut.if_stage_i.prefetch_buffer_i.ready_i [1] = 0     // ready_i
net:   tb.dut.if_stage_i.prefetch_buffer_i.req_i [1] = 0     // req_i
net:   tb.dut.if_stage_i.prefetch_buffer_i.rst_n [1] = 1     // rst_n
net:   tb.dut.if_stage_i.prefetch_buffer_i.valid_stored [1] = x     // valid_stored
net:   tb.dut.if_stage_i.prefetch_buffer_i.valid_o [1] = x     // valid_o
net:   tb.dut.if_stage_i.prefetch_buffer_i.rdata_o [32] = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx     // rdata_o
net:   tb.dut.if_stage_i.prefetch_buffer_i.fifo_ready [1] = x     // fifo_ready
net:   tb.dut.if_stage_i.prefetch_buffer_i.fetch_addr [32] = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx     // fetch_addr
net:   tb.dut.if_stage_i.prefetch_buffer_i.addr_o [32] = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx     // addr_o
reg:   CS [2] = 00 // CS
reg:   NS [2] = 00 // NS
reg:   addr_valid [1] = 0 // addr_valid
reg:   fifo_clear [1] = 0 // fifo_clear
reg:   fifo_valid [1] = 0 // fifo_valid
reg:   instr_addr_o [32] = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx // instr_addr_o
reg:   instr_addr_q [32] = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx // instr_addr_q
reg:   instr_req_o [1] = 0 // instr_req_o
son:   tb.dut.if_stage_i.prefetch_buffer_i.fifo_i
module: zeroriscy_fetch_fifo tb.dut.if_stage_i.prefetch_buffer_i.fifo_i
net:   tb.dut.if_stage_i.prefetch_buffer_i.fifo_i.clear_i [1] = 0     // clear_i
net:   tb.dut.if_stage_i.prefetch_buffer_i.fifo_i.clk [1] = 1     // clk
net:   tb.dut.if_stage_i.prefetch_buffer_i.fifo_i.in_addr_i [32] = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx     // in_addr_i
net:   tb.dut.if_stage_i.prefetch_buffer_i.fifo_i.in_rdata_i [32] = 00000000000000000000000000000000     // in_rdata_i
net:   tb.dut.if_stage_i.prefetch_buffer_i.fifo_i.in_ready_o [1] = x     // in_ready_o
net:   tb.dut.if_stage_i.prefetch_buffer_i.fifo_i.in_valid_i [1] = 0     // in_valid_i
net:   tb.dut.if_stage_i.prefetch_buffer_i.fifo_i.out_ready_i [1] = 0     // out_ready_i
net:   tb.dut.if_stage_i.prefetch_buffer_i.fifo_i.rst_n [1] = 1     // rst_n
net:   tb.dut.if_stage_i.prefetch_buffer_i.fifo_i.valid [1] = x     // valid
net:   tb.dut.if_stage_i.prefetch_buffer_i.fifo_i.valid_unaligned [1] = x     // valid_unaligned
net:   tb.dut.if_stage_i.prefetch_buffer_i.fifo_i.unaligned_is_compressed_st [1] = x     // unaligned_is_compressed_st
net:   tb.dut.if_stage_i.prefetch_buffer_i.fifo_i.unaligned_is_compressed [1] = x     // unaligned_is_compressed
net:   tb.dut.if_stage_i.prefetch_buffer_i.fifo_i.rdata_unaligned [32] = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx     // rdata_unaligned
net:   tb.dut.if_stage_i.prefetch_buffer_i.fifo_i.rdata [32] = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx     // rdata
net:   tb.dut.if_stage_i.prefetch_buffer_i.fifo_i.out_addr_o [32] = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx     // out_addr_o
net:   tb.dut.if_stage_i.prefetch_buffer_i.fifo_i.aligned_is_compressed_st [1] = x     // aligned_is_compressed_st
net:   tb.dut.if_stage_i.prefetch_buffer_i.fifo_i.aligned_is_compressed [1] = x     // aligned_is_compressed
net:   tb.dut.if_stage_i.prefetch_buffer_i.fifo_i.addr_next [32] = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx     // addr_next
reg:   addr_Q [96] = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx // addr_Q
reg:   addr_int [96] = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx // addr_int
reg:   addr_n [96] = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx // addr_n
reg:   j [32] = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx // j
reg:   out_rdata_o [32] = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx // out_rdata_o
reg:   out_valid_o [1] = x // out_valid_o
reg:   out_valid_stored_o [1] = x // out_valid_stored_o
reg:   rdata_Q [96] = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx // rdata_Q
reg:   rdata_int [96] = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx // rdata_int
reg:   rdata_n [96] = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx // rdata_n
reg:   valid_Q [3] = xxx // valid_Q
reg:   valid_int [3] = xxx // valid_int
reg:   valid_n [3] = xxx // valid_n
module: zeroriscy_load_store_unit tb.dut.load_store_unit_i
net:   tb.dut.load_store_unit_i.adder_result_ex_i [32] = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx     // adder_result_ex_i
net:   tb.dut.load_store_unit_i.busy_o [1] = 0     // busy_o
net:   tb.dut.load_store_unit_i.clk [1] = 1     // clk
net:   tb.dut.load_store_unit_i.data_addr_int [32] = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx     // data_addr_int
net:   tb.dut.load_store_unit_i.data_addr_o [32] = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx     // data_addr_o
net:   tb.dut.load_store_unit_i.data_be_o [4] = xxxx     // data_be_o
net:   tb.dut.load_store_unit_i.data_err_i [1] = 0     // data_err_i
net:   tb.dut.load_store_unit_i.data_gnt_i [1] = 0     // data_gnt_i
net:   tb.dut.load_store_unit_i.data_rdata_i [32] = 00000000000000000000000000000000     // data_rdata_i
net:   tb.dut.load_store_unit_i.data_reg_offset_ex_i [2] = 00     // data_reg_offset_ex_i
net:   tb.dut.load_store_unit_i.data_req_ex_i [1] = 0     // data_req_ex_i
net:   tb.dut.load_store_unit_i.data_rvalid_i [1] = 0     // data_rvalid_i
net:   tb.dut.load_store_unit_i.data_sign_ext_ex_i [1] = 0     // data_sign_ext_ex_i
net:   tb.dut.load_store_unit_i.data_type_ex_i [2] = 00     // data_type_ex_i
net:   tb.dut.load_store_unit_i.data_wdata_ex_i [32] = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx     // data_wdata_ex_i
net:   tb.dut.load_store_unit_i.data_wdata_o [32] = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx     // data_wdata_o
net:   tb.dut.load_store_unit_i.data_we_ex_i [1] = 0     // data_we_ex_i
net:   tb.dut.load_store_unit_i.data_we_o [1] = 0     // data_we_o
net:   tb.dut.load_store_unit_i.load_err_o [1] = 0     // load_err_o
net:   tb.dut.load_store_unit_i.misaligned_st [1] = x     // misaligned_st
net:   tb.dut.load_store_unit_i.rst_n [1] = 1     // rst_n
net:   tb.dut.load_store_unit_i.store_err_o [1] = 0     // store_err_o
net:   tb.dut.load_store_unit_i.wdata_offset [2] = xx     // wdata_offset
net:   tb.dut.load_store_unit_i.data_rdata_ex_o [32] = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx     // data_rdata_ex_o
reg:   CS [3] = 000 // CS
reg:   NS [3] = 000 // NS
reg:   data_be [4] = xxxx // data_be
reg:   data_misaligned [1] = 0 // data_misaligned
reg:   data_misaligned_o [1] = 0 // data_misaligned_o
reg:   data_misaligned_q [1] = x // data_misaligned_q
reg:   data_rdata_ext [32] = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx // data_rdata_ext
reg:   data_req_o [1] = 0 // data_req_o
reg:   data_sign_ext_q [1] = x // data_sign_ext_q
reg:   data_type_q [2] = xx // data_type_q
reg:   data_valid_o [1] = 0 // data_valid_o
reg:   data_wdata [32] = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx // data_wdata
reg:   data_we_q [1] = x // data_we_q
reg:   increase_address [1] = 0 // increase_address
reg:   lsu_update_addr_o [1] = 0 // lsu_update_addr_o
reg:   misaligned_addr_o [32] = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx // misaligned_addr_o
reg:   rdata_b_ext [32] = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx // rdata_b_ext
reg:   rdata_h_ext [32] = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx // rdata_h_ext
reg:   rdata_offset_q [2] = xx // rdata_offset_q
reg:   rdata_q [32] = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx // rdata_q
reg:   rdata_w_ext [32] = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx // rdata_w_ext
