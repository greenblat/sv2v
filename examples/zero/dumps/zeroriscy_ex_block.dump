module zeroriscy_ex_block
    parameter RV32M 1
    net alu_operator_i ('input', (['-', 'ALU_OP_WIDTH', 1], 0))
    net regfile_wdata_ex_o ('output', (31, 0))
    net jump_target_o ('output', (31, 0))
    net alu_adder_result_ex_o ('output', (31, 0))
    net branch_decision_o ('output', 0)
    net clk ('input', 0)
    net multdiv_operand_a_i ('input', (31, 0))
    net multdiv_operand_b_i ('input', (31, 0))
    net lsu_en_i ('input', 0)
    net multdiv_result ('wire', (31, 0))
    net alu_is_equal_result ('wire', 0)
    net multdiv_alu_operand_a ('wire', (32, 0))
    net multdiv_alu_operand_b ('wire', (32, 0))
    net rst_n ('input', 0)
    net alu_adder_result_ext ('wire', (33, 0))
    net alu_result ('wire', (31, 0))
    net div_en_i ('input', 0)
    net multdiv_signed_mode_i ('input', (1, 0))
    net lsu_ready_ex_i ('input', 0)
    net multdiv_en_sel ('wire', 0)
    net multdiv_en ('wire', 0)
    net multdiv_operator_i ('input', (1, 0))
    net alu_operand_a_i ('input', (31, 0))
    net mult_en_i ('input', 0)
    net alu_operand_b_i ('input', (31, 0))
    net ex_ready_o ('output reg', 0)
    net multdiv_ready ('wire', 0)
    net alu_cmp_result ('wire', 0)
    assign ('regfile_wdata_ex_o', ['question', 'multdiv_en', 'multdiv_result', 'alu_result'], '', '')
    assign ('branch_decision_o', 'alu_cmp_result', '', '')
    assign ('jump_target_o', 'alu_adder_result_ex_o', '', '')
    always ['*', ['list', ['case', ['bin', '1', '1'], [[['multdiv_en'], ['=', 'ex_ready_o', 'multdiv_ready']], [['lsu_en_i'], ['=', 'ex_ready_o', 'lsu_ready_ex_i']], ['default', ['=', 'ex_ready_o', ['bin', '1', '1']]]]]], 'always']
    generate ['ifelse', 'RV32M', ['list', ['assigns', ['=', 'multdiv_en_sel', ['question', ['~', 'MULT_TYPE'], ['|', 'mult_en_i', 'div_en_i'], 'div_en_i']]], ['assigns', ['=', 'multdiv_en', ['|', 'mult_en_i', 'div_en_i']]]], ['list', ['assigns', ['=', 'multdiv_en_sel', ['bin', '1', '0']]], ['assigns', ['=', 'multdiv_en', ['bin', '1', '0']]]]]
    generate ['ifelse', ['==', 'MULT_TYPE', 0], ['named_begin', 'multdiv_slow', ['list', ['instance', 'zeroriscy_multdiv_slow', 'multdiv_i', {}, [['clk', 'clk'], ['rst_n', 'rst_n'], ['mult_en_i', 'mult_en_i'], ['div_en_i', 'div_en_i'], ['operator_i', 'multdiv_operator_i'], ['signed_mode_i', 'multdiv_signed_mode_i'], ['op_a_i', 'multdiv_operand_a_i'], ['op_b_i', 'multdiv_operand_b_i'], ['alu_adder_ext_i', 'alu_adder_result_ext'], ['alu_adder_i', 'alu_adder_result_ex_o'], ['equal_to_zero', 'alu_is_equal_result'], ['ready_o', 'multdiv_ready'], ['alu_operand_a_o', 'multdiv_alu_operand_a'], ['alu_operand_b_o', 'multdiv_alu_operand_b'], ['multdiv_result_o', 'multdiv_result']]]]], ['named_begin', 'multdiv_fast', ['list', ['instance', 'zeroriscy_multdiv_fast', 'multdiv_i', {}, [['clk', 'clk'], ['rst_n', 'rst_n'], ['mult_en_i', 'mult_en_i'], ['div_en_i', 'div_en_i'], ['operator_i', 'multdiv_operator_i'], ['signed_mode_i', 'multdiv_signed_mode_i'], ['op_a_i', 'multdiv_operand_a_i'], ['op_b_i', 'multdiv_operand_b_i'], ['alu_operand_a_o', 'multdiv_alu_operand_a'], ['alu_operand_b_o', 'multdiv_alu_operand_b'], ['alu_adder_ext_i', 'alu_adder_result_ext'], ['alu_adder_i', 'alu_adder_result_ex_o'], ['equal_to_zero', 'alu_is_equal_result'], ['ready_o', 'multdiv_ready'], ['multdiv_result_o', 'multdiv_result']]]]]]
instance zeroriscy_alu alu_i
      conn pin=adder_result_ext_o sig=alu_adder_result_ext
      conn pin=adder_result_o sig=alu_adder_result_ex_o
      conn pin=is_equal_result_o sig=alu_is_equal_result
      conn pin=multdiv_operand_a_i sig=multdiv_alu_operand_a
      conn pin=result_o sig=alu_result
      conn pin=multdiv_operand_b_i sig=multdiv_alu_operand_b
      conn pin=operator_i sig=alu_operator_i
      conn pin=comparison_result_o sig=alu_cmp_result
      conn pin=operand_b_i sig=alu_operand_b_i
      conn pin=operand_a_i sig=alu_operand_a_i
      conn pin=multdiv_en_i sig=multdiv_en_sel
endmodule
