module zeroriscy_compressed_decoder
    net is_compressed_o ('output', 0)
    net instr_o ('output reg', (31, 0))
    net illegal_instr_o ('output reg', 0)
    net instr_i ('input', (31, 0))
    assign ('is_compressed_o', ['!=', ['subbus', 'instr_i', [1, 0]], ['bin', '2', '11']], '', '')
    always ['*', ['list', ['=', 'illegal_instr_o', ['bin', '1', '0']], ['=', 'instr_o', ['dig', 32, '0']], ['case', ['subbus', 'instr_i', (1, 0)], [[[['bin', '2', '00']], ['list', ['case', ['subbus', 'instr_i', (15, 13)], [[[['bin', '3', '000']], ['list', ['=', 'instr_o', ['curly', ['bin', '2', '0'], ['subbus', 'instr_i', [10, 7]], ['subbus', 'instr_i', [12, 11]], ['subbit', 'instr_i', 5], ['subbit', 'instr_i', 6], ['bin', '2', '00'], ['hex', '5', '02'], ['bin', '3', '000'], ['bin', '2', '01'], ['subbus', 'instr_i', [4, 2]], 'OPCODE_OPIMM']], ['if', ['==', ['subbus', 'instr_i', [12, 5]], ['bin', '8', '0']], ['=', 'illegal_instr_o', ['bin', '1', '1']]]]], [[['bin', '3', '010']], ['list', ['=', 'instr_o', ['curly', ['bin', '5', '0'], ['subbit', 'instr_i', 5], ['subbus', 'instr_i', [12, 10]], ['subbit', 'instr_i', 6], ['bin', '2', '00'], ['bin', '2', '01'], ['subbus', 'instr_i', [9, 7]], ['bin', '3', '010'], ['bin', '2', '01'], ['subbus', 'instr_i', [4, 2]], 'OPCODE_LOAD']]]], [[['bin', '3', '110']], ['list', ['=', 'instr_o', ['curly', ['bin', '5', '0'], ['subbit', 'instr_i', 5], ['subbit', 'instr_i', 12], ['bin', '2', '01'], ['subbus', 'instr_i', [4, 2]], ['bin', '2', '01'], ['subbus', 'instr_i', [9, 7]], ['bin', '3', '010'], ['subbus', 'instr_i', [11, 10]], ['subbit', 'instr_i', 6], ['bin', '2', '00'], 'OPCODE_STORE']]]], ['default', ['list', ['=', 'illegal_instr_o', ['bin', '1', '1']]]]]]]], [[['bin', '2', '01']], ['list', ['case', ['subbus', 'instr_i', (15, 13)], [[[['bin', '3', '000']], ['list', ['=', 'instr_o', ['curly', ['curly', 'repeat', 6, ['curly', ['subbit', 'instr_i', 12]]], ['subbit', 'instr_i', 12], ['subbus', 'instr_i', [6, 2]], ['subbus', 'instr_i', [11, 7]], ['bin', '3', '0'], ['subbus', 'instr_i', [11, 7]], 'OPCODE_OPIMM']]]], [[['bin', '3', '001'], ['bin', '3', '101']], ['list', ['=', 'instr_o', ['curly', ['subbit', 'instr_i', 12], ['subbit', 'instr_i', 8], ['subbus', 'instr_i', [10, 9]], ['subbit', 'instr_i', 6], ['subbit', 'instr_i', 7], ['subbit', 'instr_i', 2], ['subbit', 'instr_i', 11], ['subbus', 'instr_i', [5, 3]], ['curly', 'repeat', 9, ['curly', ['subbit', 'instr_i', 12]]], ['bin', '4', '0'], ['~', ['subbit', 'instr_i', 15]], 'OPCODE_JAL']]]], [[['bin', '3', '010']], ['list', ['=', 'instr_o', ['curly', ['curly', 'repeat', 6, ['curly', ['subbit', 'instr_i', 12]]], ['subbit', 'instr_i', 12], ['subbus', 'instr_i', [6, 2]], ['bin', '5', '0'], ['bin', '3', '0'], ['subbus', 'instr_i', [11, 7]], 'OPCODE_OPIMM']], ['if', ['==', ['subbus', 'instr_i', [11, 7]], ['bin', '5', '0']], ['=', 'illegal_instr_o', ['bin', '1', '1']]]]], [[['bin', '3', '011']], ['list', ['=', 'instr_o', ['curly', ['curly', 'repeat', 15, ['curly', ['subbit', 'instr_i', 12]]], ['subbus', 'instr_i', [6, 2]], ['subbus', 'instr_i', [11, 7]], 'OPCODE_LUI']], ['ifelse', ['==', ['subbus', 'instr_i', [11, 7]], ['hex', '5', '02']], ['list', ['=', 'instr_o', ['curly', ['curly', 'repeat', 3, ['curly', ['subbit', 'instr_i', 12]]], ['subbus', 'instr_i', [4, 3]], ['subbit', 'instr_i', 5], ['subbit', 'instr_i', 2], ['subbit', 'instr_i', 6], ['bin', '4', '0'], ['hex', '5', '02'], ['bin', '3', '000'], ['hex', '5', '02'], 'OPCODE_OPIMM']]], ['if', ['==', ['subbus', 'instr_i', [11, 7]], ['bin', '5', '0']], ['list', ['=', 'illegal_instr_o', ['bin', '1', '1']]]]], ['if', ['==', ['curly', ['subbit', 'instr_i', 12], ['subbus', 'instr_i', [6, 2]]], ['bin', '6', '0']], ['=', 'illegal_instr_o', ['bin', '1', '1']]]]], [[['bin', '3', '100']], ['list', ['case', ['subbus', 'instr_i', (11, 10)], [[[['bin', '2', '00'], ['bin', '2', '01']], ['list', ['=', 'instr_o', ['curly', ['bin', '1', '0'], ['subbit', 'instr_i', 10], ['bin', '5', '0'], ['subbus', 'instr_i', [6, 2]], ['bin', '2', '01'], ['subbus', 'instr_i', [9, 7]], ['bin', '3', '101'], ['bin', '2', '01'], ['subbus', 'instr_i', [9, 7]], 'OPCODE_OPIMM']], ['if', ['subbit', 'instr_i', 12], ['=', 'illegal_instr_o', ['bin', '1', '1']]], ['if', ['==', ['subbus', 'instr_i', [6, 2]], ['bin', '5', '0']], ['=', 'illegal_instr_o', ['bin', '1', '1']]]]], [[['bin', '2', '10']], ['list', ['=', 'instr_o', ['curly', ['curly', 'repeat', 6, ['curly', ['subbit', 'instr_i', 12]]], ['subbit', 'instr_i', 12], ['subbus', 'instr_i', [6, 2]], ['bin', '2', '01'], ['subbus', 'instr_i', [9, 7]], ['bin', '3', '111'], ['bin', '2', '01'], ['subbus', 'instr_i', [9, 7]], 'OPCODE_OPIMM']]]], [[['bin', '2', '11']], ['list', ['case', ['curly', ['subbit', 'instr_i', 12], ['subbus', 'instr_i', (6, 5)]], [[[['bin', '3', '000']], ['list', ['=', 'instr_o', ['curly', ['bin', '2', '01'], ['bin', '5', '0'], ['bin', '2', '01'], ['subbus', 'instr_i', [4, 2]], ['bin', '2', '01'], ['subbus', 'instr_i', [9, 7]], ['bin', '3', '000'], ['bin', '2', '01'], ['subbus', 'instr_i', [9, 7]], 'OPCODE_OP']]]], [[['bin', '3', '001']], ['list', ['=', 'instr_o', ['curly', ['bin', '7', '0'], ['bin', '2', '01'], ['subbus', 'instr_i', [4, 2]], ['bin', '2', '01'], ['subbus', 'instr_i', [9, 7]], ['bin', '3', '100'], ['bin', '2', '01'], ['subbus', 'instr_i', [9, 7]], 'OPCODE_OP']]]], [[['bin', '3', '010']], ['list', ['=', 'instr_o', ['curly', ['bin', '7', '0'], ['bin', '2', '01'], ['subbus', 'instr_i', [4, 2]], ['bin', '2', '01'], ['subbus', 'instr_i', [9, 7]], ['bin', '3', '110'], ['bin', '2', '01'], ['subbus', 'instr_i', [9, 7]], 'OPCODE_OP']]]], [[['bin', '3', '011']], ['list', ['=', 'instr_o', ['curly', ['bin', '7', '0'], ['bin', '2', '01'], ['subbus', 'instr_i', [4, 2]], ['bin', '2', '01'], ['subbus', 'instr_i', [9, 7]], ['bin', '3', '111'], ['bin', '2', '01'], ['subbus', 'instr_i', [9, 7]], 'OPCODE_OP']]]], [[['bin', '3', '100'], ['bin', '3', '101'], ['bin', '3', '110'], ['bin', '3', '111']], ['list', ['=', 'illegal_instr_o', ['bin', '1', '1']]]]]]]]]]]], [[['bin', '3', '110'], ['bin', '3', '111']], ['list', ['=', 'instr_o', ['curly', ['curly', 'repeat', 4, ['curly', ['subbit', 'instr_i', 12]]], ['subbus', 'instr_i', [6, 5]], ['subbit', 'instr_i', 2], ['bin', '5', '0'], ['bin', '2', '01'], ['subbus', 'instr_i', [9, 7]], ['bin', '2', '00'], ['subbit', 'instr_i', 13], ['subbus', 'instr_i', [11, 10]], ['subbus', 'instr_i', [4, 3]], ['subbit', 'instr_i', 12], 'OPCODE_BRANCH']]]], ['default', ['list', ['=', 'illegal_instr_o', ['bin', '1', '1']]]]]]]], [[['bin', '2', '10']], ['list', ['case', ['subbus', 'instr_i', (15, 13)], [[[['bin', '3', '000']], ['list', ['=', 'instr_o', ['curly', ['bin', '7', '0'], ['subbus', 'instr_i', [6, 2]], ['subbus', 'instr_i', [11, 7]], ['bin', '3', '001'], ['subbus', 'instr_i', [11, 7]], 'OPCODE_OPIMM']], ['if', ['==', ['subbus', 'instr_i', [11, 7]], ['bin', '5', '0']], ['=', 'illegal_instr_o', ['bin', '1', '1']]], ['if', ['||', ['subbit', 'instr_i', 12], ['==', ['subbus', 'instr_i', [6, 2]], ['bin', '5', '0']]], ['=', 'illegal_instr_o', ['bin', '1', '1']]]]], [[['bin', '3', '010']], ['list', ['=', 'instr_o', ['curly', ['bin', '4', '0'], ['subbus', 'instr_i', [3, 2]], ['subbit', 'instr_i', 12], ['subbus', 'instr_i', [6, 4]], ['bin', '2', '00'], ['hex', '5', '02'], ['bin', '3', '010'], ['subbus', 'instr_i', [11, 7]], 'OPCODE_LOAD']], ['if', ['==', ['subbus', 'instr_i', [11, 7]], ['bin', '5', '0']], ['=', 'illegal_instr_o', ['bin', '1', '1']]]]], [[['bin', '3', '100']], ['list', ['ifelse', ['~', ['subbit', 'instr_i', 12]], ['list', ['=', 'instr_o', ['curly', ['bin', '7', '0'], ['subbus', 'instr_i', [6, 2]], ['bin', '5', '0'], ['bin', '3', '0'], ['subbus', 'instr_i', [11, 7]], 'OPCODE_OP']], ['if', ['==', ['subbus', 'instr_i', [6, 2]], ['bin', '5', '0']], ['list', ['=', 'instr_o', ['curly', ['bin', '12', '0'], ['subbus', 'instr_i', [11, 7]], ['bin', '3', '0'], ['bin', '5', '0'], 'OPCODE_JALR']]]]], ['list', ['=', 'instr_o', ['curly', ['bin', '7', '0'], ['subbus', 'instr_i', [6, 2]], ['subbus', 'instr_i', [11, 7]], ['bin', '3', '0'], ['subbus', 'instr_i', [11, 7]], 'OPCODE_OP']], ['ifelse', ['==', ['subbus', 'instr_i', [11, 7]], ['bin', '5', '0']], ['list', ['=', 'instr_o', ['curly', ['hex', '32', '00_10_00_73']]], ['if', ['!=', ['subbus', 'instr_i', [6, 2]], ['bin', '5', '0']], ['=', 'illegal_instr_o', ['bin', '1', '1']]]], ['if', ['==', ['subbus', 'instr_i', [6, 2]], ['bin', '5', '0']], ['list', ['=', 'instr_o', ['curly', ['bin', '12', '0'], ['subbus', 'instr_i', [11, 7]], ['bin', '3', '000'], ['bin', '5', '00001'], 'OPCODE_JALR']]]]]]]]], [[['bin', '3', '110']], ['list', ['=', 'instr_o', ['curly', ['bin', '4', '0'], ['subbus', 'instr_i', [8, 7]], ['subbit', 'instr_i', 12], ['subbus', 'instr_i', [6, 2]], ['hex', '5', '02'], ['bin', '3', '010'], ['subbus', 'instr_i', [11, 9]], ['bin', '2', '00'], 'OPCODE_STORE']]]], ['default', ['list', ['=', 'illegal_instr_o', ['bin', '1', '1']]]]]]]], ['default', ['list', ['=', 'instr_o', 'instr_i']]]]]], 'always']
endmodule
