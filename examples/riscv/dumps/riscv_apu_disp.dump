module riscv_apu_disp
    net read_deps_waiting ('wire', (2, 0))
    net active ('wire', 0)
    net write_dep_req ('wire', 0)
    net addr_inflight ('reg', (5, 0))
    net write_deps_waiting ('wire', (1, 0))
    net read_dep_o ('output', 0)
    net write_dep_waiting ('wire', 0)
    net read_regs_i ('input', ('packed', (2, 0), (5, 0)))
    net stall_full ('wire', 0)
    net valid_waiting_dn ('reg', 0)
    net write_deps_inflight ('wire', (1, 0))
    net req_accepted ('wire', 0)
    net read_dep_waiting ('wire', 0)
    net stall_o ('output', 0)
    net apu_master_gnt_i ('input', 0)
    net rst_ni ('input', 0)
    net valid_inflight_dn ('reg', 0)
    net write_regs_i ('input', ('packed', (1, 0), (5, 0)))
    net read_dep_req ('wire', 0)
    net perf_cont_o ('output', 0)
    net apu_singlecycle_o ('output', 0)
    net clk_i ('input', 0)
    net stall_nack ('wire', 0)
    net apu_lat_i ('input', (1, 0))
    net valid_inflight ('reg', 0)
    net returned_req ('wire', 0)
    net returned_waiting ('wire', 0)
    net read_deps_inflight ('wire', (2, 0))
    net write_dep_inflight ('wire', 0)
    net valid_req ('wire', 0)
    net read_deps_req ('wire', (2, 0))
    net write_regs_valid_i ('input', (1, 0))
    net apu_multicycle_o ('output', 0)
    net stall_type ('wire', 0)
    net returned_inflight ('wire', 0)
    net apu_lat ('reg', (1, 0))
    net apu_master_valid_i ('input', 0)
    net apu_waddr_i ('input', (5, 0))
    net addr_req ('wire', (5, 0))
    net apu_master_ready_o ('output', 0)
    net apu_waddr_o ('output reg', (5, 0))
    net write_deps_req ('wire', (1, 0))
    net addr_inflight_dn ('reg', (5, 0))
    net addr_waiting ('reg', (5, 0))
    net enable_i ('input', 0)
    net active_o ('output', 0)
    net valid_waiting ('reg', 0)
    net perf_type_o ('output', 0)
    net apu_master_req_o ('output', 0)
    net read_regs_valid_i ('input', (2, 0))
    net addr_waiting_dn ('reg', (5, 0))
    net write_dep_o ('output', 0)
    net read_dep_inflight ('wire', 0)
    assign ('valid_req', ['&', 'enable_i', ['!', ['|', 'stall_full', 'stall_type']]], '', '')
    assign ('addr_req', 'apu_waddr_i', '', '')
    assign ('req_accepted', ['&', 'valid_req', 'apu_master_gnt_i'], '', '')
    assign ('returned_req', ['&', ['&', ['&', 'valid_req', 'apu_master_valid_i'], ['!', 'valid_inflight']], ['!', 'valid_waiting']], '', '')
    assign ('returned_inflight', ['&', ['&', 'valid_inflight', 'apu_master_valid_i'], ['!', 'valid_waiting']], '', '')
    assign ('returned_waiting', ['&', 'valid_waiting', 'apu_master_valid_i'], '', '')
    assign ('active', ['|', 'valid_inflight', 'valid_waiting'], '', '')
    assign ('read_dep_req', ['&', ['&', ['|', 'read_deps_req'], 'valid_req'], ['!', 'returned_req']], '', '')
    assign ('read_dep_inflight', ['&', ['&', ['|', 'read_deps_inflight'], 'valid_inflight'], ['!', 'returned_inflight']], '', '')
    assign ('read_dep_waiting', ['&', ['&', ['|', 'read_deps_waiting'], 'valid_waiting'], ['!', 'returned_waiting']], '', '')
    assign ('write_dep_req', ['&', ['&', ['|', 'write_deps_req'], 'valid_req'], ['!', 'returned_req']], '', '')
    assign ('write_dep_inflight', ['&', ['&', ['|', 'write_deps_inflight'], 'valid_inflight'], ['!', 'returned_inflight']], '', '')
    assign ('write_dep_waiting', ['&', ['&', ['|', 'write_deps_waiting'], 'valid_waiting'], ['!', 'returned_waiting']], '', '')
    assign ('read_dep_o', ['|', ['|', 'read_dep_req', 'read_dep_inflight'], 'read_dep_waiting'], '', '')
    assign ('write_dep_o', ['|', ['|', 'write_dep_req', 'write_dep_inflight'], 'write_dep_waiting'], '', '')
    assign ('stall_full', ['&', 'valid_inflight', 'valid_waiting'], '', '')
    assign ('stall_type', ['&', ['&', 'enable_i', 'active'], ['|', ['|', ['==', 'apu_lat_i', ['hex', '2', '1']], ['&', ['==', 'apu_lat_i', ['hex', '2', '2']], ['==', 'apu_lat', ['hex', '2', '3']]]], ['==', 'apu_lat_i', ['hex', '2', '3']]]], '', '')
    assign ('stall_nack', ['&', 'valid_req', ['!', 'apu_master_gnt_i']], '', '')
    assign ('stall_o', ['|', ['|', 'stall_full', 'stall_type'], 'stall_nack'], '', '')
    assign ('apu_master_req_o', 'valid_req', '', '')
    assign ('apu_master_ready_o', ['bin', '1', '1'], '', '')
    assign ('active_o', 'active', '', '')
    assign ('perf_type_o', 'stall_type', '', '')
    assign ('perf_cont_o', 'stall_nack', '', '')
    assign ('apu_multicycle_o', ['==', 'apu_lat', ['hex', '2', '3']], '', '')
    assign ('apu_singlecycle_o', ['~', ['|', 'valid_inflight', 'valid_waiting']], '', '')
    always [['list', ['edge', 'posedge', 'clk_i'], ['edge', 'negedge', 'rst_ni']], ['list', ['ifelse', ['~', 'rst_ni'], ['list', ['<=', 'valid_inflight', ['bin', '1', '0']], ['<=', 'valid_waiting', ['bin', '1', '0']], ['<=', 'addr_inflight', ['dig', 32, '0']], ['<=', 'addr_waiting', ['dig', 32, '0']]], ['list', ['<=', 'valid_inflight', 'valid_inflight_dn'], ['<=', 'valid_waiting', 'valid_waiting_dn'], ['<=', 'addr_inflight', 'addr_inflight_dn'], ['<=', 'addr_waiting', 'addr_waiting_dn']]]], 'always']
    always ['*', ['list', ['=', 'valid_inflight_dn', 'valid_inflight'], ['=', 'valid_waiting_dn', 'valid_waiting'], ['=', 'addr_inflight_dn', 'addr_inflight'], ['=', 'addr_waiting_dn', 'addr_waiting'], ['ifelse', ['&', 'req_accepted', ['!', 'returned_req']], ['list', ['=', 'valid_inflight_dn', ['bin', '1', '1']], ['=', 'addr_inflight_dn', 'addr_req'], ['if', ['&', 'valid_inflight', ['!', 'returned_inflight']], ['list', ['=', 'valid_waiting_dn', ['bin', '1', '1']], ['=', 'addr_waiting_dn', 'addr_inflight']]], ['if', 'returned_waiting', ['list', ['=', 'valid_waiting_dn', ['bin', '1', '1']], ['=', 'addr_waiting_dn', 'addr_inflight']]]], ['ifelse', 'returned_inflight', ['list', ['=', 'valid_inflight_dn', ['dig', 32, '0']], ['=', 'valid_waiting_dn', ['dig', 32, '0']], ['=', 'addr_inflight_dn', ['dig', 32, '0']], ['=', 'addr_waiting_dn', ['dig', 32, '0']]], ['if', 'returned_waiting', ['list', ['=', 'valid_waiting_dn', ['dig', 32, '0']], ['=', 'addr_waiting_dn', ['dig', 32, '0']]]]]]], 'always']
    always [['list', ['edge', 'posedge', 'clk_i'], ['edge', 'negedge', 'rst_ni']], ['list', ['ifelse', ['~', 'rst_ni'], ['list', ['<=', 'apu_lat', ['dig', 32, '0']]], ['list', ['if', 'valid_req', ['list', ['<=', 'apu_lat', 'apu_lat_i']]]]]], 'always']
    always ['*', ['list', ['=', 'apu_waddr_o', ['dig', 32, '0']], ['if', 'returned_req', ['=', 'apu_waddr_o', 'addr_req']], ['if', 'returned_inflight', ['=', 'apu_waddr_o', 'addr_inflight']], ['if', 'returned_waiting', ['=', 'apu_waddr_o', 'addr_waiting']]], 'always']
    generate ['for', ['list', ['=', 'i', 0]], ['<', 'i', 3], ['list', ['=', 'i', ['+', 'i', 1]]], ['list', ['assigns', ['=', ['subbit', 'read_deps_req', 'i'], ['&', ['==', ['subbit', 'read_regs_i', 'i'], 'addr_req'], ['subbit', 'read_regs_valid_i', 'i']]]], ['assigns', ['=', ['subbit', 'read_deps_inflight', 'i'], ['&', ['==', ['subbit', 'read_regs_i', 'i'], 'addr_inflight'], ['subbit', 'read_regs_valid_i', 'i']]]], ['assigns', ['=', ['subbit', 'read_deps_waiting', 'i'], ['&', ['==', ['subbit', 'read_regs_i', 'i'], 'addr_waiting'], ['subbit', 'read_regs_valid_i', 'i']]]]]]
    generate ['for', ['list', ['=', 'i', 0]], ['<', 'i', 2], ['list', ['=', 'i', ['+', 'i', 1]]], ['list', ['assigns', ['=', ['subbit', 'write_deps_req', 'i'], ['&', ['==', ['subbit', 'write_regs_i', 'i'], 'addr_req'], ['subbit', 'write_regs_valid_i', 'i']]]], ['assigns', ['=', ['subbit', 'write_deps_inflight', 'i'], ['&', ['==', ['subbit', 'write_regs_i', 'i'], 'addr_inflight'], ['subbit', 'write_regs_valid_i', 'i']]]], ['assigns', ['=', ['subbit', 'write_deps_waiting', 'i'], ['&', ['==', ['subbit', 'write_regs_i', 'i'], 'addr_waiting'], ['subbit', 'write_regs_valid_i', 'i']]]]]]
endmodule
