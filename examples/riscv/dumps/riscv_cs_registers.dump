module riscv_cs_registers
    parameter N_HWLP_BITS ['functioncall', '$clog2', ['N_HWLP']]
    parameter N_EXT_CNT 0
    parameter APU 0
    parameter FPU 0
    parameter PULP_SECURE 0
    parameter N_HWLP 2
    net PCCR_inc ('wire', (['-', 'N_PERF_COUNTERS', 1], 0))
    net utvec_o ('output', (23, 0))
    net utvec_n ('reg', (23, 0))
    net utvec_q ('reg', (23, 0))
    net csr_wdata_int ('reg', (31, 0))
    net pccr_index ('reg', (4, 0))
    net clk ('input', 0)
    net apu_wb_i ('input', 0)
    net ucause_n ('reg', (5, 0))
    net exception_pc ('reg', (31, 0))
    net ucause_q ('reg', (5, 0))
    net hwlp_start_i ('input', ('packed', (['-', 'N_HWLP', 1], 0), (31, 0)))
    net mem_store_i ('input', 0)
    net csr_we_int ('reg', 0)
    net csr_addr_i ('input', (11, 0))
    net pc_set_i ('input', 0)
    net id_valid_i ('input', 0)
    net ld_stall_i ('input', 0)
    net uepc_q ('reg', (31, 0))
    net hwlp_regid_o ('output reg', (['-', 'N_HWLP_BITS', 1], 0))
    net is_pcmr ('reg', 0)
    net fflags_q ('reg', (['-', 'C_FFLAG', 1], 0))
    net fflags_n ('reg', (['-', 'C_FFLAG', 1], 0))
    net uepc_n ('reg', (31, 0))
    net is_pcer ('reg', 0)
    net fflags_i ('input', (['-', 'C_FFLAG', 1], 0))
    net csr_irq_sec_i ('input', 0)
    net id_valid_q ('reg', 0)
    net sec_lvl_o ('output', 0)
    net boot_addr_i ('input', (23, 0))
    net branch_taken_i ('input', 0)
    net perf_rdata ('reg', (31, 0))
    net pccr_all_sel ('reg', 0)
    net pc_if_i ('input', (31, 0))
    net fprec_q ('reg', (['-', 'C_PC', 1], 0))
    net cluster_id_i ('input', (5, 0))
    net csr_rdata_int ('reg', (31, 0))
    net csr_save_cause_i ('input', 0)
    net mem_load_i ('input', 0)
    net fprec_n ('reg', (['-', 'C_PC', 1], 0))
    net fprec_o ('output', (['-', 'C_PC', 1], 0))
    net mepc_q ('reg', (31, 0))
    net epc_o ('output reg', (31, 0))
    net mtvec_reg_q ('reg', (23, 0))
    net apu_contention_i ('input', 0)
    net apu_dep_i ('input', 0)
    net priv_lvl_n ('reg', (1, 0))
    net mepc_n ('reg', (31, 0))
    net PCCR_in ('wire', (['-', 'N_PERF_COUNTERS', 1], 0))
    net imiss_i ('input', 0)
    net is_decoding_i ('input', 0)
    net csr_access_i ('input', 0)
    net jump_i ('input', 0)
    net PCMR_q ('reg', (1, 0))
    net PCMR_n ('reg', (1, 0))
    net hwlp_we_o ('output reg', (2, 0))
    net is_compressed_i ('input', 0)
    net PCCR_inc_q ('reg', (['-', 'N_PERF_COUNTERS', 1], 0))
    net hwlp_data_o ('output', (31, 0))
    net rst_n ('input', 0)
    net mtvec_o ('output', (23, 0))
    net mtvec_n ('reg', (23, 0))
    net mcause_n ('reg', (5, 0))
    net u_irq_enable_o ('output', 0)
    net PCER_n ('reg', (['-', 'N_PERF_COUNTERS', 1], 0))
    net m_irq_enable_o ('output', 0)
    net hwlp_end_i ('input', ('packed', (['-', 'N_HWLP', 1], 0), (31, 0)))
    net mcause_q ('reg', (5, 0))
    net mtvec_q ('wire', (23, 0))
    net is_irq ('wire', 0)
    net priv_lvl_q ('reg', (1, 0))
    net csr_op_i ('input', (1, 0))
    net priv_lvl_o ('output', (1, 0))
    net priv_lvl_reg_q ('wire', (1, 0))
    net PCCR_q ('reg', ('packed', (['-', 'N_PERF_REGS', 1], 0), (31, 0)))
    net apu_typeconflict_i ('input', 0)
    net PCCR_n ('reg', ('packed', (['-', 'N_PERF_REGS', 1], 0), (31, 0)))
    net csr_cause_i ('input', (5, 0))
    net core_id_i ('input', (3, 0))
    net ext_counters_i ('input', (['-', 'N_EXT_CNT', 1], 0))
    net hwlp_cnt_i ('input', ('packed', (['-', 'N_HWLP', 1], 0), (31, 0)))
    net mstatus_q ('reg', (5, 0))
    net frm_n ('reg', (['-', 'C_RM', 1], 0))
    net csr_save_id_i ('input', 0)
    net csr_rdata_o ('output reg', (31, 0))
    net frm_q ('reg', (['-', 'C_RM', 1], 0))
    net mstatus_n ('reg', (5, 0))
    net fflags_we_i ('input', 0)
    net csr_restore_uret_i ('input', 0)
    net csr_save_if_i ('input', 0)
    net branch_i ('input', 0)
    net frm_o ('output', (2, 0))
    net pc_id_i ('input', (31, 0))
    net jr_stall_i ('input', 0)
    net csr_restore_mret_i ('input', 0)
    net is_pccr ('reg', 0)
    net PCER_q ('reg', (['-', 'N_PERF_COUNTERS', 1], 0))
    net csr_wdata_i ('input', (31, 0))
    net i ('reg', (31, 0))
    assign ('is_irq', ['subbit', 'csr_cause_i', 5], '', '')
    assign ('hwlp_data_o', 'csr_wdata_int', '', '')
    assign ('m_irq_enable_o', ['&', ['subbus', 'mstatus_q', [4, 4]], ['==', 'priv_lvl_q', 'PRIV_LVL_M']], '', '')
    assign ('u_irq_enable_o', ['&', ['subbus', 'mstatus_q', [5, 5]], ['==', 'priv_lvl_q', 'PRIV_LVL_U']], '', '')
    assign ('priv_lvl_o', 'priv_lvl_q', '', '')
    assign ('sec_lvl_o', ['subbit', 'priv_lvl_q', 0], '', '')
    assign ('frm_o', ['question', 'FPU', 'frm_q', ['dig', 32, '0']], '', '')
    assign ('fprec_o', ['question', 'FPU', 'fprec_q', ['dig', 32, '0']], '', '')
    assign ('mtvec_o', 'mtvec_q', '', '')
    assign ('utvec_o', 'utvec_q', '', '')
    assign ('mtvec_q', ['question', 'PULP_SECURE', 'mtvec_reg_q', 'boot_addr_i'], '', '')
    assign (['subbit', 'PCCR_in', 0], ['bin', '1', '1'], '', '')
    assign (['subbit', 'PCCR_in', 1], ['&', 'id_valid_i', 'is_decoding_i'], '', '')
    assign (['subbit', 'PCCR_in', 2], ['&', 'ld_stall_i', 'id_valid_q'], '', '')
    assign (['subbit', 'PCCR_in', 3], ['&', 'jr_stall_i', 'id_valid_q'], '', '')
    assign (['subbit', 'PCCR_in', 4], ['&', 'imiss_i', ['~', 'pc_set_i']], '', '')
    assign (['subbit', 'PCCR_in', 5], 'mem_load_i', '', '')
    assign (['subbit', 'PCCR_in', 6], 'mem_store_i', '', '')
    assign (['subbit', 'PCCR_in', 7], ['&', 'jump_i', 'id_valid_q'], '', '')
    assign (['subbit', 'PCCR_in', 8], ['&', 'branch_i', 'id_valid_q'], '', '')
    assign (['subbit', 'PCCR_in', 9], ['&', ['&', 'branch_i', 'branch_taken_i'], 'id_valid_q'], '', '')
    assign (['subbit', 'PCCR_in', 10], ['&', ['&', 'id_valid_i', 'is_decoding_i'], 'is_compressed_i'], '', '')
    assign (['subbus', 'PCCR_in', (['-', ['+', 'PERF_EXT_ID', 'N_EXT_CNT'], 1], 'PERF_EXT_ID')], 'ext_counters_i', '', '')
    assign (['subbit', 'PCCR_inc', 0], ['&', ['|', ['&', 'PCCR_in', 'PCER_q']], ['subbit', 'PCMR_q', 0]], '', '')
    always ['*', ['list', ['=', 'csr_wdata_int', 'csr_wdata_i'], ['=', 'csr_we_int', ['bin', '1', '1']], ['case', 'csr_op_i', [[['CSR_OP_WRITE'], ['=', 'csr_wdata_int', 'csr_wdata_i']], [['CSR_OP_SET'], ['=', 'csr_wdata_int', ['|', 'csr_wdata_i', 'csr_rdata_o']]], [['CSR_OP_CLEAR'], ['=', 'csr_wdata_int', ['&', ['~', 'csr_wdata_i'], 'csr_rdata_o']]], [['CSR_OP_NONE'], ['list', ['=', 'csr_wdata_int', 'csr_wdata_i'], ['=', 'csr_we_int', ['bin', '1', '0']]]], ['default', ['empty_begin_end']]]]], 'always']
    always ['*', ['list', ['=', 'csr_rdata_o', 'csr_rdata_int'], ['if', ['||', ['||', 'is_pccr', 'is_pcer'], 'is_pcmr'], ['=', 'csr_rdata_o', 'perf_rdata']]], 'always']
    always [['list', ['edge', 'posedge', 'clk'], ['edge', 'negedge', 'rst_n']], ['list', ['ifelse', ['~', 'rst_n'], ['list', ['if', 'FPU', ['list', ['<=', 'frm_q', ['dig', 32, '0']], ['<=', 'fflags_q', ['dig', 32, '0']], ['<=', 'fprec_q', ['dig', 32, '0']]]], ['if', 'PULP_SECURE', ['list', ['<=', 'uepc_q', ['dig', 32, '0']], ['<=', 'ucause_q', ['dig', 32, '0']], ['<=', 'mtvec_reg_q', ['dig', 32, '0']], ['<=', 'utvec_q', ['dig', 32, '0']]]], ['<=', 'priv_lvl_q', 'PRIV_LVL_M'], ['<=', 'mstatus_q', ['curly', ['bin', '1', '0'], ['bin', '1', '0'], ['bin', '1', '0'], ['bin', '1', '0'], 'PRIV_LVL_M']], ['<=', 'mepc_q', ['dig', 32, '0']], ['<=', 'mcause_q', ['dig', 32, '0']]], ['list', ['if', 'FPU', ['list', ['<=', 'frm_q', 'frm_n'], ['<=', 'fflags_q', 'fflags_n'], ['<=', 'fprec_q', 'fprec_n']]], ['ifelse', 'PULP_SECURE', ['list', ['<=', 'mstatus_q', 'mstatus_n'], ['<=', 'uepc_q', 'uepc_n'], ['<=', 'ucause_q', 'ucause_n'], ['<=', 'priv_lvl_q', 'priv_lvl_n'], ['<=', 'utvec_q', 'utvec_n'], ['<=', 'mtvec_reg_q', 'mtvec_n']], ['list', ['<=', 'mstatus_q', ['curly', ['bin', '1', '0'], ['subbus', 'mstatus_n', [4, 4]], ['bin', '1', '0'], ['subbus', 'mstatus_n', [2, 2]], 'PRIV_LVL_M']], ['<=', 'priv_lvl_q', 'PRIV_LVL_M']]], ['<=', 'mepc_q', 'mepc_n'], ['<=', 'mcause_q', 'mcause_n']]]], 'always']
    always ['*', ['list', ['=', 'is_pccr', ['bin', '1', '0']], ['=', 'is_pcmr', ['bin', '1', '0']], ['=', 'is_pcer', ['bin', '1', '0']], ['=', 'pccr_all_sel', ['bin', '1', '0']], ['=', 'pccr_index', ['dig', 32, '0']], ['=', 'perf_rdata', ['dig', 32, '0']], ['if', 'csr_access_i', ['list', ['case', 'csr_addr_i', [[[['hex', '12', '7A0']], ['list', ['=', 'is_pcer', ['bin', '1', '1']], ['=', ['subbus', 'perf_rdata', (['-', 'N_PERF_COUNTERS', 1], 0)], 'PCER_q']]], [[['hex', '12', '7A1']], ['list', ['=', 'is_pcmr', ['bin', '1', '1']], ['=', ['subbus', 'perf_rdata', (1, 0)], 'PCMR_q']]], [[['hex', '12', '79F']], ['list', ['=', 'is_pccr', ['bin', '1', '1']], ['=', 'pccr_all_sel', ['bin', '1', '1']]]], ['default', ['empty_begin_end']]]], ['if', ['==', ['subbus', 'csr_addr_i', [11, 5]], ['bin', '7', '0111100']], ['list', ['=', 'is_pccr', ['bin', '1', '1']], ['=', 'pccr_index', ['subbus', 'csr_addr_i', [4, 0]]], ['=', 'perf_rdata', ['subbit', 'PCCR_q', 0]]]]]]], 'always']
    always ['*', ['list', ['=', ['subbit', 'PCCR_n', 0], ['subbit', 'PCCR_q', 0]], ['if', ['&&', ['subbit', 'PCCR_inc_q', 0], ['||', ['!=', ['subbit', 'PCCR_q', 0], ['hex', '32', 'FFFFFFFF']], ['~', ['subbit', 'PCMR_q', 1]]]], ['=', ['subbit', 'PCCR_n', 0], ['+', ['subbit', 'PCCR_q', 0], 1]]], ['if', 'is_pccr', ['list', ['case', 'csr_op_i', [[['CSR_OP_WRITE'], ['=', ['subbit', 'PCCR_n', 0], 'csr_wdata_i']], [['CSR_OP_SET'], ['=', ['subbit', 'PCCR_n', 0], ['|', 'csr_wdata_i', ['subbit', 'PCCR_q', 0]]]], [['CSR_OP_CLEAR'], ['=', ['subbit', 'PCCR_n', 0], ['&', 'csr_wdata_i', ['~', ['subbit', 'PCCR_q', 0]]]]]]]]]], 'always']
    always ['*', ['list', ['=', 'PCMR_n', 'PCMR_q'], ['=', 'PCER_n', 'PCER_q'], ['if', 'is_pcmr', ['list', ['case', 'csr_op_i', [[['CSR_OP_WRITE'], ['=', 'PCMR_n', ['subbus', 'csr_wdata_i', [1, 0]]]], [['CSR_OP_SET'], ['=', 'PCMR_n', ['|', ['subbus', 'csr_wdata_i', [1, 0]], 'PCMR_q']]], [['CSR_OP_CLEAR'], ['=', 'PCMR_n', ['&', ['subbus', 'csr_wdata_i', [1, 0]], ['~', 'PCMR_q']]]]]]]], ['if', 'is_pcer', ['list', ['case', 'csr_op_i', [[['CSR_OP_WRITE'], ['=', 'PCER_n', ['subbus', 'csr_wdata_i', [['-', 'N_PERF_COUNTERS', 1], 0]]]], [['CSR_OP_SET'], ['=', 'PCER_n', ['|', ['subbus', 'csr_wdata_i', [['-', 'N_PERF_COUNTERS', 1], 0]], 'PCER_q']]], [['CSR_OP_CLEAR'], ['=', 'PCER_n', ['&', ['subbus', 'csr_wdata_i', [['-', 'N_PERF_COUNTERS', 1], 0]], ['~', 'PCER_q']]]]]]]]], 'always']
    always [['list', ['edge', 'posedge', 'clk'], ['edge', 'negedge', 'rst_n']], ['list', ['ifelse', ['~', 'rst_n'], ['list', ['<=', 'id_valid_q', ['bin', '1', '0']], ['<=', 'PCER_q', ['dig', 32, '0']], ['<=', 'PCMR_q', ['hex', '2', '3']], ['for', ['list', ['=', 'i', 0]], ['<', 'i', 'N_PERF_REGS'], ['list', ['=', 'i', ['+', 'i', 1]]], ['list', ['<=', ['subbit', 'PCCR_q', 'i'], ['dig', 32, '0']], ['<=', ['subbit', 'PCCR_inc_q', 'i'], ['dig', 32, '0']]]]], ['list', ['<=', 'id_valid_q', 'id_valid_i'], ['<=', 'PCER_q', 'PCER_n'], ['<=', 'PCMR_q', 'PCMR_n'], ['for', ['list', ['=', 'i', 0]], ['<', 'i', 'N_PERF_REGS'], ['list', ['=', 'i', ['+', 'i', 1]]], ['list', ['<=', ['subbit', 'PCCR_q', 'i'], ['subbit', 'PCCR_n', 'i']], ['<=', ['subbit', 'PCCR_inc_q', 'i'], ['subbit', 'PCCR_inc', 'i']]]]]]], 'always']
    generate [['ifelse', ['==', 'PULP_SECURE', 1], ['list', ['always', '*', ['list', ['case', 'csr_addr_i', [[[['hex', '12', '001']], ['=', 'csr_rdata_int', ['question', 'FPU', ['curly', ['bin', '27', '0'], 'fflags_q'], ['dig', 32, '0']]]], [[['hex', '12', '002']], ['=', 'csr_rdata_int', ['question', 'FPU', ['curly', ['bin', '29', '0'], 'frm_q'], ['dig', 32, '0']]]], [[['hex', '12', '003']], ['=', 'csr_rdata_int', ['question', 'FPU', ['curly', ['bin', '24', '0'], 'frm_q', 'fflags_q'], ['dig', 32, '0']]]], [[['hex', '12', '006']], ['=', 'csr_rdata_int', ['question', 'FPU', ['curly', ['bin', '27', '0'], 'fprec_q'], ['dig', 32, '0']]]], [[['hex', '12', '300']], ['=', 'csr_rdata_int', ['curly', ['bin', '19', '0'], ['subbus', 'mstatus_q', [1, 0]], ['bin', '3', '0'], ['subbus', 'mstatus_q', [2, 2]], ['hex', '2', '0'], ['subbus', 'mstatus_q', [3, 3]], ['subbus', 'mstatus_q', [4, 4]], ['hex', '2', '0'], ['subbus', 'mstatus_q', [5, 5]]]]], [[['hex', '12', '305']], ['=', 'csr_rdata_int', ['curly', 'mtvec_q', ['hex', '8', '0']]]], [[['hex', '12', '341']], ['=', 'csr_rdata_int', 'mepc_q']], [[['hex', '12', '342']], ['=', 'csr_rdata_int', ['curly', ['subbit', 'mcause_q', 5], ['bin', '26', '0'], ['subbus', 'mcause_q', [4, 0]]]]], [[['hex', '12', 'F14']], ['=', 'csr_rdata_int', ['curly', ['bin', '21', '0'], ['subbus', 'cluster_id_i', [5, 0]], ['bin', '1', '0'], ['subbus', 'core_id_i', [3, 0]]]]], [[['hex', '12', '7B0']], ['=', 'csr_rdata_int', ['subbit', 'hwlp_start_i', 0]]], [[['hex', '12', '7B1']], ['=', 'csr_rdata_int', ['subbit', 'hwlp_end_i', 0]]], [[['hex', '12', '7B2']], ['=', 'csr_rdata_int', ['subbit', 'hwlp_cnt_i', 0]]], [[['hex', '12', '7B4']], ['=', 'csr_rdata_int', ['subbit', 'hwlp_start_i', 1]]], [[['hex', '12', '7B5']], ['=', 'csr_rdata_int', ['subbit', 'hwlp_end_i', 1]]], [[['hex', '12', '7B6']], ['=', 'csr_rdata_int', ['subbit', 'hwlp_cnt_i', 1]]], [[['hex', '12', '000']], ['=', 'csr_rdata_int', ['curly', ['bin', '27', '0'], ['subbus', 'mstatus_q', [3, 3]], ['hex', '3', '0'], ['subbus', 'mstatus_q', [5, 5]]]]], [[['hex', '12', '005']], ['=', 'csr_rdata_int', ['curly', 'utvec_q', ['hex', '8', '0']]]], [[['hex', '12', '014']], ['=', 'csr_rdata_int', ['curly', ['bin', '21', '0'], ['subbus', 'cluster_id_i', [5, 0]], ['bin', '1', '0'], ['subbus', 'core_id_i', [3, 0]]]]], [[['hex', '12', '041']], ['=', 'csr_rdata_int', 'uepc_q']], [[['hex', '12', '042']], ['=', 'csr_rdata_int', ['curly', ['subbit', 'ucause_q', 5], ['hex', '26', '0'], ['subbus', 'ucause_q', [4, 0]]]]], [[['hex', '12', 'C10']], ['=', 'csr_rdata_int', ['curly', ['hex', '30', '0'], 'priv_lvl_q']]], ['default', ['=', 'csr_rdata_int', ['dig', 32, '0']]]]]]]], ['list', ['always', '*', ['list', ['case', 'csr_addr_i', [[[['hex', '12', '001']], ['=', 'csr_rdata_int', ['question', 'FPU', ['curly', ['bin', '27', '0'], 'fflags_q'], ['dig', 32, '0']]]], [[['hex', '12', '002']], ['=', 'csr_rdata_int', ['question', 'FPU', ['curly', ['bin', '29', '0'], 'frm_q'], ['dig', 32, '0']]]], [[['hex', '12', '003']], ['=', 'csr_rdata_int', ['question', 'FPU', ['curly', ['bin', '24', '0'], 'frm_q', 'fflags_q'], ['dig', 32, '0']]]], [[['hex', '12', '006']], ['=', 'csr_rdata_int', ['question', 'FPU', ['curly', ['bin', '27', '0'], 'fprec_q'], ['dig', 32, '0']]]], [[['hex', '12', '300']], ['=', 'csr_rdata_int', ['curly', ['bin', '19', '0'], ['subbus', 'mstatus_q', [1, 0]], ['bin', '3', '0'], ['subbus', 'mstatus_q', [2, 2]], ['hex', '2', '0'], ['subbus', 'mstatus_q', [3, 3]], ['subbus', 'mstatus_q', [4, 4]], ['hex', '2', '0'], ['subbus', 'mstatus_q', [5, 5]]]]], [[['hex', '12', '301']], ['=', 'csr_rdata_int', ['hex', '32', '0']]], [[['hex', '12', '305']], ['=', 'csr_rdata_int', ['curly', 'mtvec_q', ['hex', '8', '0']]]], [[['hex', '12', '341']], ['=', 'csr_rdata_int', 'mepc_q']], [[['hex', '12', '342']], ['=', 'csr_rdata_int', ['curly', ['subbit', 'mcause_q', 5], ['bin', '26', '0'], ['subbus', 'mcause_q', [4, 0]]]]], [[['hex', '12', 'F14']], ['=', 'csr_rdata_int', ['curly', ['bin', '21', '0'], ['subbus', 'cluster_id_i', [5, 0]], ['bin', '1', '0'], ['subbus', 'core_id_i', [3, 0]]]]], [[['hex', '12', '7B0']], ['=', 'csr_rdata_int', ['subbit', 'hwlp_start_i', 0]]], [[['hex', '12', '7B1']], ['=', 'csr_rdata_int', ['subbit', 'hwlp_end_i', 0]]], [[['hex', '12', '7B2']], ['=', 'csr_rdata_int', ['subbit', 'hwlp_cnt_i', 0]]], [[['hex', '12', '7B4']], ['=', 'csr_rdata_int', ['subbit', 'hwlp_start_i', 1]]], [[['hex', '12', '7B5']], ['=', 'csr_rdata_int', ['subbit', 'hwlp_end_i', 1]]], [[['hex', '12', '7B6']], ['=', 'csr_rdata_int', ['subbit', 'hwlp_cnt_i', 1]]], [[['hex', '12', '014']], ['=', 'csr_rdata_int', ['curly', ['bin', '21', '0'], ['subbus', 'cluster_id_i', [5, 0]], ['bin', '1', '0'], ['subbus', 'core_id_i', [3, 0]]]]], [[['hex', '12', 'C10']], ['=', 'csr_rdata_int', ['curly', ['hex', '30', '0'], 'priv_lvl_q']]], ['default', ['=', 'csr_rdata_int', ['dig', 32, '0']]]]]]]]]]
    generate [['ifelse', ['==', 'PULP_SECURE', 1], ['list', ['always', '*', ['list', ['=', 'fflags_n', 'fflags_q'], ['=', 'frm_n', 'frm_q'], ['=', 'fprec_n', 'fprec_q'], ['=', 'epc_o', 'mepc_q'], ['=', 'mepc_n', 'mepc_q'], ['=', 'uepc_n', 'uepc_q'], ['=', 'mstatus_n', 'mstatus_q'], ['=', 'mcause_n', 'mcause_q'], ['=', 'ucause_n', 'ucause_q'], ['=', 'hwlp_we_o', ['dig', 32, '0']], ['=', 'hwlp_regid_o', ['dig', 32, '0']], ['=', 'exception_pc', 'pc_id_i'], ['=', 'priv_lvl_n', 'priv_lvl_q'], ['=', 'mtvec_n', 'mtvec_q'], ['=', 'utvec_n', 'utvec_q'], ['if', 'FPU', ['if', 'fflags_we_i', ['=', 'fflags_n', ['|', 'fflags_i', 'fflags_q']]]], ['case', 'csr_addr_i', [[[['hex', '12', '001']], ['if', 'csr_we_int', ['=', 'fflags_n', ['question', 'FPU', ['subbus', 'csr_wdata_int', [['-', 'C_FFLAG', 1], 0]], ['dig', 32, '0']]]]], [[['hex', '12', '002']], ['if', 'csr_we_int', ['=', 'frm_n', ['question', 'FPU', ['subbus', 'csr_wdata_int', [['-', 'C_RM', 1], 0]], ['dig', 32, '0']]]]], [[['hex', '12', '003']], ['if', 'csr_we_int', ['list', ['=', 'fflags_n', ['question', 'FPU', ['subbus', 'csr_wdata_int', [['-', 'C_FFLAG', 1], 0]], ['dig', 32, '0']]], ['=', 'frm_n', ['question', 'FPU', ['subbus', 'csr_wdata_int', [['-', ['+', 'C_RM', 'C_FFLAG'], 1], 'C_FFLAG']], ['dig', 32, '0']]]]]], [[['hex', '12', '006']], ['if', 'csr_we_int', ['=', 'fprec_n', ['question', 'FPU', ['subbus', 'csr_wdata_int', [['-', 'C_PC', 1], 0]], ['dig', 32, '0']]]]], [[['hex', '12', '300']], ['if', 'csr_we_int', ['list', ['=', 'mstatus_n', ['curly', ['subbit', 'csr_wdata_int', 0], ['subbit', 'csr_wdata_int', 3], ['subbit', 'csr_wdata_int', 4], ['subbit', 'csr_wdata_int', 7], ['subbus', 'csr_wdata_int', [12, 11]]]]]]], [[['hex', '12', '305']], ['if', 'csr_we_int', ['list', ['=', 'mtvec_n', ['subbus', 'csr_wdata_int', [31, 8]]]]]], [[['hex', '12', '341']], ['if', 'csr_we_int', ['list', ['=', 'mepc_n', 'csr_wdata_int']]]], [[['hex', '12', '342']], ['if', 'csr_we_int', ['=', 'mcause_n', ['curly', ['subbit', 'csr_wdata_int', 31], ['subbus', 'csr_wdata_int', [4, 0]]]]]], [[['hex', '12', '7B0']], ['if', 'csr_we_int', ['list', ['=', 'hwlp_we_o', ['bin', '3', '001']], ['=', 'hwlp_regid_o', ['bin', '1', '0']]]]], [[['hex', '12', '7B1']], ['if', 'csr_we_int', ['list', ['=', 'hwlp_we_o', ['bin', '3', '010']], ['=', 'hwlp_regid_o', ['bin', '1', '0']]]]], [[['hex', '12', '7B2']], ['if', 'csr_we_int', ['list', ['=', 'hwlp_we_o', ['bin', '3', '100']], ['=', 'hwlp_regid_o', ['bin', '1', '0']]]]], [[['hex', '12', '7B4']], ['if', 'csr_we_int', ['list', ['=', 'hwlp_we_o', ['bin', '3', '001']], ['=', 'hwlp_regid_o', ['bin', '1', '1']]]]], [[['hex', '12', '7B5']], ['if', 'csr_we_int', ['list', ['=', 'hwlp_we_o', ['bin', '3', '010']], ['=', 'hwlp_regid_o', ['bin', '1', '1']]]]], [[['hex', '12', '7B6']], ['if', 'csr_we_int', ['list', ['=', 'hwlp_we_o', ['bin', '3', '100']], ['=', 'hwlp_regid_o', ['bin', '1', '1']]]]], [[['hex', '12', '000']], ['if', 'csr_we_int', ['list', ['=', 'mstatus_n', ['curly', ['subbit', 'csr_wdata_int', 0], ['subbus', 'mstatus_q', [4, 4]], ['subbit', 'csr_wdata_int', 4], ['subbus', 'mstatus_q', [2, 2]], ['subbus', 'mstatus_q', [1, 0]]]]]]], [[['hex', '12', '005']], ['if', 'csr_we_int', ['list', ['=', 'utvec_n', ['subbus', 'csr_wdata_int', [31, 8]]]]]], [[['hex', '12', '041']], ['if', 'csr_we_int', ['list', ['=', 'uepc_n', 'csr_wdata_int']]]], [[['hex', '12', '042']], ['if', 'csr_we_int', ['=', 'ucause_n', ['curly', ['subbit', 'csr_wdata_int', 31], ['subbus', 'csr_wdata_int', [4, 0]]]]]]]], ['case', ['bin', '1', '1'], [[['csr_save_cause_i'], ['list', ['case', ['bin', '1', '1'], [[['csr_save_if_i'], ['=', 'exception_pc', 'pc_if_i']], [['csr_save_id_i'], ['=', 'exception_pc', 'pc_id_i']], ['default', ['empty_begin_end']]]], ['case', 'priv_lvl_q', [[['PRIV_LVL_U'], ['list', ['ifelse', ['~', 'is_irq'], ['list', ['=', 'priv_lvl_n', 'PRIV_LVL_M'], ['=', ['subbus', 'mstatus_n', (2, 2)], ['subbus', 'mstatus_q', [5, 5]]], ['=', ['subbus', 'mstatus_n', (4, 4)], ['bin', '1', '0']], ['=', ['subbus', 'mstatus_n', (1, 0)], 'PRIV_LVL_U'], ['=', 'mepc_n', 'exception_pc'], ['=', 'mcause_n', 'csr_cause_i']], ['list', ['ifelse', ['~', 'csr_irq_sec_i'], ['list', ['=', 'priv_lvl_n', 'PRIV_LVL_U'], ['=', ['subbus', 'mstatus_n', (3, 3)], ['subbus', 'mstatus_q', [5, 5]]], ['=', ['subbus', 'mstatus_n', (5, 5)], ['bin', '1', '0']], ['=', 'uepc_n', 'exception_pc'], ['=', 'ucause_n', 'csr_cause_i']], ['list', ['=', 'priv_lvl_n', 'PRIV_LVL_M'], ['=', ['subbus', 'mstatus_n', (2, 2)], ['subbus', 'mstatus_q', [5, 5]]], ['=', ['subbus', 'mstatus_n', (4, 4)], ['bin', '1', '0']], ['=', ['subbus', 'mstatus_n', (1, 0)], 'PRIV_LVL_U'], ['=', 'mepc_n', 'exception_pc'], ['=', 'mcause_n', 'csr_cause_i']]]]]]], [['PRIV_LVL_M'], ['list', ['=', 'priv_lvl_n', 'PRIV_LVL_M'], ['=', ['subbus', 'mstatus_n', (2, 2)], ['subbus', 'mstatus_q', [4, 4]]], ['=', ['subbus', 'mstatus_n', (4, 4)], ['bin', '1', '0']], ['=', ['subbus', 'mstatus_n', (1, 0)], 'PRIV_LVL_M'], ['=', 'mepc_n', 'exception_pc'], ['=', 'mcause_n', 'csr_cause_i']]], ['default', ['empty_begin_end']]]]]], [['csr_restore_uret_i'], ['list', ['=', ['subbus', 'mstatus_n', (5, 5)], ['subbus', 'mstatus_q', [3, 3]]], ['=', 'priv_lvl_n', 'PRIV_LVL_U'], ['=', ['subbus', 'mstatus_n', (3, 3)], ['bin', '1', '1']], ['=', 'epc_o', 'uepc_q']]], [['csr_restore_mret_i'], ['list', ['case', ['subbus', 'mstatus_q', (1, 0)], [[['PRIV_LVL_U'], ['list', ['=', ['subbus', 'mstatus_n', (5, 5)], ['subbus', 'mstatus_q', [2, 2]]], ['=', 'priv_lvl_n', 'PRIV_LVL_U'], ['=', ['subbus', 'mstatus_n', (2, 2)], ['bin', '1', '1']], ['=', ['subbus', 'mstatus_n', (1, 0)], 'PRIV_LVL_U']]], [['PRIV_LVL_M'], ['list', ['=', ['subbus', 'mstatus_n', (4, 4)], ['subbus', 'mstatus_q', [2, 2]]], ['=', 'priv_lvl_n', 'PRIV_LVL_M'], ['=', ['subbus', 'mstatus_n', (2, 2)], ['bin', '1', '1']], ['=', ['subbus', 'mstatus_n', (1, 0)], 'PRIV_LVL_U']]], ['default', ['empty_begin_end']]]], ['=', 'epc_o', 'mepc_q']]], ['default', ['empty_begin_end']]]]]]], ['list', ['always', '*', ['list', ['=', 'fflags_n', 'fflags_q'], ['=', 'frm_n', 'frm_q'], ['=', 'fprec_n', 'fprec_q'], ['=', 'epc_o', 'mepc_q'], ['=', 'mepc_n', 'mepc_q'], ['=', 'mstatus_n', 'mstatus_q'], ['=', 'mcause_n', 'mcause_q'], ['=', 'hwlp_we_o', ['dig', 32, '0']], ['=', 'hwlp_regid_o', ['dig', 32, '0']], ['=', 'exception_pc', 'pc_id_i'], ['=', 'priv_lvl_n', 'priv_lvl_q'], ['=', 'mtvec_n', 'mtvec_q'], ['if', 'FPU', ['if', 'fflags_we_i', ['=', 'fflags_n', ['|', 'fflags_i', 'fflags_q']]]], ['case', 'csr_addr_i', [[[['hex', '12', '001']], ['if', 'csr_we_int', ['=', 'fflags_n', ['question', 'FPU', ['subbus', 'csr_wdata_int', [['-', 'C_FFLAG', 1], 0]], ['dig', 32, '0']]]]], [[['hex', '12', '002']], ['if', 'csr_we_int', ['=', 'frm_n', ['question', 'FPU', ['subbus', 'csr_wdata_int', [['-', 'C_RM', 1], 0]], ['dig', 32, '0']]]]], [[['hex', '12', '003']], ['if', 'csr_we_int', ['list', ['=', 'fflags_n', ['question', 'FPU', ['subbus', 'csr_wdata_int', [['-', 'C_FFLAG', 1], 0]], ['dig', 32, '0']]], ['=', 'frm_n', ['question', 'FPU', ['subbus', 'csr_wdata_int', [['-', ['+', 'C_RM', 'C_FFLAG'], 1], 'C_FFLAG']], ['dig', 32, '0']]]]]], [[['hex', '12', '006']], ['if', 'csr_we_int', ['=', 'fprec_n', ['question', 'FPU', ['subbus', 'csr_wdata_int', [['-', 'C_PC', 1], 0]], ['dig', 32, '0']]]]], [[['hex', '12', '300']], ['if', 'csr_we_int', ['list', ['=', 'mstatus_n', ['curly', ['subbit', 'csr_wdata_int', 0], ['subbit', 'csr_wdata_int', 3], ['subbit', 'csr_wdata_int', 4], ['subbit', 'csr_wdata_int', 7], ['subbus', 'csr_wdata_int', [12, 11]]]]]]], [[['hex', '12', '341']], ['if', 'csr_we_int', ['list', ['=', 'mepc_n', 'csr_wdata_int']]]], [[['hex', '12', '342']], ['if', 'csr_we_int', ['=', 'mcause_n', ['curly', ['subbit', 'csr_wdata_int', 31], ['subbus', 'csr_wdata_int', [4, 0]]]]]], [[['hex', '12', '7B0']], ['if', 'csr_we_int', ['list', ['=', 'hwlp_we_o', ['bin', '3', '001']], ['=', 'hwlp_regid_o', ['bin', '1', '0']]]]], [[['hex', '12', '7B1']], ['if', 'csr_we_int', ['list', ['=', 'hwlp_we_o', ['bin', '3', '010']], ['=', 'hwlp_regid_o', ['bin', '1', '0']]]]], [[['hex', '12', '7B2']], ['if', 'csr_we_int', ['list', ['=', 'hwlp_we_o', ['bin', '3', '100']], ['=', 'hwlp_regid_o', ['bin', '1', '0']]]]], [[['hex', '12', '7B4']], ['if', 'csr_we_int', ['list', ['=', 'hwlp_we_o', ['bin', '3', '001']], ['=', 'hwlp_regid_o', ['bin', '1', '1']]]]], [[['hex', '12', '7B5']], ['if', 'csr_we_int', ['list', ['=', 'hwlp_we_o', ['bin', '3', '010']], ['=', 'hwlp_regid_o', ['bin', '1', '1']]]]], [[['hex', '12', '7B6']], ['if', 'csr_we_int', ['list', ['=', 'hwlp_we_o', ['bin', '3', '100']], ['=', 'hwlp_regid_o', ['bin', '1', '1']]]]]]], ['case', ['bin', '1', '1'], [[['csr_save_cause_i'], ['list', ['case', ['bin', '1', '1'], [[['csr_save_if_i'], ['=', 'exception_pc', 'pc_if_i']], [['csr_save_id_i'], ['=', 'exception_pc', 'pc_id_i']], ['default', ['empty_begin_end']]]], ['=', 'priv_lvl_n', 'PRIV_LVL_M'], ['=', ['subbus', 'mstatus_n', (2, 2)], ['subbus', 'mstatus_q', [4, 4]]], ['=', ['subbus', 'mstatus_n', (4, 4)], ['bin', '1', '0']], ['=', ['subbus', 'mstatus_n', (1, 0)], 'PRIV_LVL_M'], ['=', 'mepc_n', 'exception_pc'], ['=', 'mcause_n', 'csr_cause_i']]], [['csr_restore_mret_i'], ['list', ['=', ['subbus', 'mstatus_n', (4, 4)], ['subbus', 'mstatus_q', [2, 2]]], ['=', 'priv_lvl_n', 'PRIV_LVL_M'], ['=', ['subbus', 'mstatus_n', (2, 2)], ['bin', '1', '1']], ['=', ['subbus', 'mstatus_n', (1, 0)], 'PRIV_LVL_M'], ['=', 'epc_o', 'mepc_q']]], ['default', ['empty_begin_end']]]]]]]]]
    generate [['if', ['==', 'APU', 1], ['list', ['assigns', ['=', ['subbit', 'PCCR_in', 'PERF_APU_ID'], ['&', 'apu_typeconflict_i', ['~', 'apu_dep_i']]]], ['assigns', ['=', ['subbit', 'PCCR_in', ['+', 'PERF_APU_ID', 1]], 'apu_contention_i']], ['assigns', ['=', ['subbit', 'PCCR_in', ['+', 'PERF_APU_ID', 2]], ['&', 'apu_dep_i', ['~', 'apu_contention_i']]]], ['assigns', ['=', ['subbit', 'PCCR_in', ['+', 'PERF_APU_ID', 3]], 'apu_wb_i']]]]]
endmodule
