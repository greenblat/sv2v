module riscv_decoder
    parameter WAPUTYPE 0
    parameter SHARED_FP_DIVSQRT 0
    parameter APU_WOP_CPU 6
    parameter SHARED_INT_DIV 0
    parameter FPU 0
    parameter PULP_SECURE 0
    parameter SHARED_FP 0
    parameter SHARED_DSP_MULT 0
    net data_req_o ('output', 0)
    net apu_flags_src_o ('output reg', (['-', 'WAPUTYPE', 1], 0))
    net mult_imm_mux_o ('output reg', (0, 0))
    net mult_operator_o ('output reg', (2, 0))
    net csr_status_o ('output reg', 0)
    net rega_used_o ('output reg', 0)
    net reg_fp_d_o ('output reg', 0)
    net apu_type_o ('output reg', (['-', 'WAPUTYPE', 1], 0))
    net data_reg_offset_o ('output reg', (1, 0))
    net data_req ('reg', 0)
    net mult_sel_subword_o ('output reg', 0)
    net mult_dot_en_o ('output reg', 0)
    net hwloop_cnt_mux_sel_o ('output reg', 0)
    net data_sign_extension_o ('output reg', 0)
    net fp_rnd_mode_o ('output reg', (2, 0))
    net alu_bmask_b_mux_sel_o ('output reg', 0)
    net regfile_alu_waddr_sel_o ('output reg', 0)
    net regfile_mem_we_o ('output', 0)
    net apu_en_o ('output', 0)
    net scalar_replication_o ('output reg', 0)
    net mult_dot_signed_o ('output reg', (1, 0))
    net hwloop_we_o ('output', (2, 0))
    net apu_en ('reg', 0)
    net hwloop_target_mux_sel_o ('output reg', 0)
    net uret_insn_o ('output reg', 0)
    net jump_in_id_o ('output', (1, 0))
    net pipe_flush_o ('output reg', 0)
    net alu_operator_o ('output reg', (['-', 'ALU_OP_WIDTH', 1], 0))
    net jump_in_id ('reg', (1, 0))
    net alu_bmask_a_mux_sel_o ('output reg', 0)
    net imm_b_mux_sel_o ('output reg', (3, 0))
    net ecall_insn_o ('output reg', 0)
    net apu_lat_o ('output reg', (1, 0))
    net data_type_o ('output reg', (1, 0))
    net data_we_o ('output reg', 0)
    net alu_en_o ('output reg', 0)
    net fpu_op_o ('output reg', (['-', 'C_CMD', 1], 0))
    net csr_op ('reg', (1, 0))
    net alu_op_c_mux_sel_o ('output reg', (1, 0))
    net reg_fp_b_o ('output reg', 0)
    net bmask_a_mux_o ('output reg', (0, 0))
    net deassert_we_i ('input', 0)
    net csr_access_o ('output reg', 0)
    net regc_mux_o ('output reg', (1, 0))
    net illegal_c_insn_i ('input', 0)
    net data_load_event_o ('output reg', 0)
    net apu_op_o ('output reg', (['-', 'APU_WOP_CPU', 1], 0))
    net mult_int_en_o ('output reg', 0)
    net prepost_useincr_o ('output reg', 0)
    net ebrk_insn_o ('output reg', 0)
    net hwloop_we ('reg', (2, 0))
    net regfile_alu_we_o ('output', 0)
    net reg_fp_c_o ('output reg', 0)
    net data_misaligned_i ('input', 0)
    net instr_multicycle_o ('output reg', 0)
    net illegal_insn_o ('output reg', 0)
    net instr_rdata_i ('input', (31, 0))
    net bmask_b_mux_o ('output reg', (1, 0))
    net alu_op_b_mux_sel_o ('output reg', (2, 0))
    net csr_illegal ('reg', 0)
    net jump_in_dec_o ('output', (1, 0))
    net mult_multicycle_i ('input', 0)
    net mret_insn_o ('output reg', 0)
    net regfile_mem_we ('reg', 0)
    net regfile_alu_we ('reg', 0)
    net reg_fp_a_o ('output reg', 0)
    net imm_a_mux_sel_o ('output reg', (0, 0))
    net hwloop_start_mux_sel_o ('output reg', 0)
    net csr_op_o ('output', (1, 0))
    net jump_target_mux_sel_o ('output reg', (1, 0))
    net regc_used_o ('output reg', 0)
    net mult_signed_mode_o ('output reg', (1, 0))
    net current_priv_lvl_i ('input', (1, 0))
    net regb_used_o ('output reg', 0)
    net alu_op_a_mux_sel_o ('output reg', (2, 0))
    net alu_vec_mode_o ('output reg', (1, 0))
    assign ('apu_en_o', ['question', 'deassert_we_i', ['bin', '1', '0'], 'apu_en'], '', '')
    assign ('regfile_mem_we_o', ['question', 'deassert_we_i', ['bin', '1', '0'], 'regfile_mem_we'], '', '')
    assign ('regfile_alu_we_o', ['question', 'deassert_we_i', ['bin', '1', '0'], 'regfile_alu_we'], '', '')
    assign ('data_req_o', ['question', 'deassert_we_i', ['bin', '1', '0'], 'data_req'], '', '')
    assign ('hwloop_we_o', ['question', 'deassert_we_i', ['bin', '3', '0'], 'hwloop_we'], '', '')
    assign ('csr_op_o', ['question', 'deassert_we_i', 'CSR_OP_NONE', 'csr_op'], '', '')
    assign ('jump_in_id_o', ['question', 'deassert_we_i', 'BRANCH_NONE', 'jump_in_id'], '', '')
    assign ('jump_in_dec_o', 'jump_in_id', '', '')
    always ['*', ['list', ['=', 'jump_in_id', 'BRANCH_NONE'], ['=', 'jump_target_mux_sel_o', 'JT_JAL'], ['=', 'alu_en_o', ['bin', '1', '1']], ['=', 'alu_operator_o', 'ALU_SLTU'], ['=', 'alu_op_a_mux_sel_o', 'OP_A_REGA_OR_FWD'], ['=', 'alu_op_b_mux_sel_o', 'OP_B_REGB_OR_FWD'], ['=', 'alu_op_c_mux_sel_o', 'OP_C_REGC_OR_FWD'], ['=', 'alu_vec_mode_o', 'VEC_MODE32'], ['=', 'scalar_replication_o', ['bin', '1', '0']], ['=', 'regc_mux_o', 'REGC_ZERO'], ['=', 'imm_a_mux_sel_o', 'IMMA_ZERO'], ['=', 'imm_b_mux_sel_o', 'IMMB_I'], ['=', 'mult_operator_o', 'MUL_I'], ['=', 'mult_int_en_o', ['bin', '1', '0']], ['=', 'mult_dot_en_o', ['bin', '1', '0']], ['=', 'mult_imm_mux_o', 'MIMM_ZERO'], ['=', 'mult_signed_mode_o', ['bin', '2', '00']], ['=', 'mult_sel_subword_o', ['bin', '1', '0']], ['=', 'mult_dot_signed_o', ['bin', '2', '00']], ['=', 'apu_en', ['bin', '1', '0']], ['=', 'apu_type_o', ['dig', 32, '0']], ['=', 'apu_op_o', ['dig', 32, '0']], ['=', 'apu_lat_o', ['dig', 32, '0']], ['=', 'apu_flags_src_o', ['dig', 32, '0']], ['=', 'fp_rnd_mode_o', ['dig', 32, '0']], ['=', 'fpu_op_o', ['dig', 32, '0']], ['=', 'regfile_mem_we', ['bin', '1', '0']], ['=', 'regfile_alu_we', ['bin', '1', '0']], ['=', 'regfile_alu_waddr_sel_o', ['bin', '1', '1']], ['=', 'prepost_useincr_o', ['bin', '1', '1']], ['=', 'hwloop_we', ['bin', '3', '0']], ['=', 'hwloop_target_mux_sel_o', ['bin', '1', '0']], ['=', 'hwloop_start_mux_sel_o', ['bin', '1', '0']], ['=', 'hwloop_cnt_mux_sel_o', ['bin', '1', '0']], ['=', 'csr_access_o', ['bin', '1', '0']], ['=', 'csr_status_o', ['bin', '1', '0']], ['=', 'csr_illegal', ['bin', '1', '0']], ['=', 'csr_op', 'CSR_OP_NONE'], ['=', 'mret_insn_o', ['bin', '1', '0']], ['=', 'uret_insn_o', ['bin', '1', '0']], ['=', 'data_we_o', ['bin', '1', '0']], ['=', 'data_type_o', ['bin', '2', '00']], ['=', 'data_sign_extension_o', ['bin', '1', '0']], ['=', 'data_reg_offset_o', ['bin', '2', '00']], ['=', 'data_req', ['bin', '1', '0']], ['=', 'data_load_event_o', ['bin', '1', '0']], ['=', 'illegal_insn_o', ['bin', '1', '0']], ['=', 'ebrk_insn_o', ['bin', '1', '0']], ['=', 'ecall_insn_o', ['bin', '1', '0']], ['=', 'pipe_flush_o', ['bin', '1', '0']], ['=', 'rega_used_o', ['bin', '1', '0']], ['=', 'regb_used_o', ['bin', '1', '0']], ['=', 'regc_used_o', ['bin', '1', '0']], ['=', 'reg_fp_a_o', ['bin', '1', '0']], ['=', 'reg_fp_b_o', ['bin', '1', '0']], ['=', 'reg_fp_c_o', ['bin', '1', '0']], ['=', 'reg_fp_d_o', ['bin', '1', '0']], ['=', 'bmask_a_mux_o', 'BMASK_A_ZERO'], ['=', 'bmask_b_mux_o', 'BMASK_B_ZERO'], ['=', 'alu_bmask_a_mux_sel_o', 'BMASK_A_IMM'], ['=', 'alu_bmask_b_mux_sel_o', 'BMASK_B_IMM'], ['=', 'instr_multicycle_o', ['bin', '1', '0']], ['case', ['subbus', 'instr_rdata_i', (6, 0)], [[['OPCODE_JAL'], ['list', ['=', 'jump_target_mux_sel_o', 'JT_JAL'], ['=', 'jump_in_id', 'BRANCH_JAL'], ['=', 'alu_op_a_mux_sel_o', 'OP_A_CURRPC'], ['=', 'alu_op_b_mux_sel_o', 'OP_B_IMM'], ['=', 'imm_b_mux_sel_o', 'IMMB_PCINCR'], ['=', 'alu_operator_o', 'ALU_ADD'], ['=', 'regfile_alu_we', ['bin', '1', '1']]]], [['OPCODE_JALR'], ['list', ['=', 'jump_target_mux_sel_o', 'JT_JALR'], ['=', 'jump_in_id', 'BRANCH_JALR'], ['=', 'alu_op_a_mux_sel_o', 'OP_A_CURRPC'], ['=', 'alu_op_b_mux_sel_o', 'OP_B_IMM'], ['=', 'imm_b_mux_sel_o', 'IMMB_PCINCR'], ['=', 'alu_operator_o', 'ALU_ADD'], ['=', 'regfile_alu_we', ['bin', '1', '1']], ['=', 'rega_used_o', ['bin', '1', '1']], ['if', ['!=', ['subbus', 'instr_rdata_i', [14, 12]], ['bin', '3', '0']], ['list', ['=', 'jump_in_id', 'BRANCH_NONE'], ['=', 'regfile_alu_we', ['bin', '1', '0']], ['=', 'illegal_insn_o', ['bin', '1', '1']]]]]], [['OPCODE_BRANCH'], ['list', ['=', 'jump_target_mux_sel_o', 'JT_COND'], ['=', 'jump_in_id', 'BRANCH_COND'], ['=', 'alu_op_c_mux_sel_o', 'OP_C_JT'], ['=', 'rega_used_o', ['bin', '1', '1']], ['=', 'regb_used_o', ['bin', '1', '1']], ['case', ['subbus', 'instr_rdata_i', (14, 12)], [[[['bin', '3', '000']], ['=', 'alu_operator_o', 'ALU_EQ']], [[['bin', '3', '001']], ['=', 'alu_operator_o', 'ALU_NE']], [[['bin', '3', '100']], ['=', 'alu_operator_o', 'ALU_LTS']], [[['bin', '3', '101']], ['=', 'alu_operator_o', 'ALU_GES']], [[['bin', '3', '110']], ['=', 'alu_operator_o', 'ALU_LTU']], [[['bin', '3', '111']], ['=', 'alu_operator_o', 'ALU_GEU']], [[['bin', '3', '010']], ['list', ['=', 'alu_operator_o', 'ALU_EQ'], ['=', 'regb_used_o', ['bin', '1', '0']], ['=', 'alu_op_b_mux_sel_o', 'OP_B_IMM'], ['=', 'imm_b_mux_sel_o', 'IMMB_BI']]], [[['bin', '3', '011']], ['list', ['=', 'alu_operator_o', 'ALU_NE'], ['=', 'regb_used_o', ['bin', '1', '0']], ['=', 'alu_op_b_mux_sel_o', 'OP_B_IMM'], ['=', 'imm_b_mux_sel_o', 'IMMB_BI']]]]]]], [['OPCODE_STORE', 'OPCODE_STORE_POST'], ['list', ['=', 'data_req', ['bin', '1', '1']], ['=', 'data_we_o', ['bin', '1', '1']], ['=', 'rega_used_o', ['bin', '1', '1']], ['=', 'regb_used_o', ['bin', '1', '1']], ['=', 'alu_operator_o', 'ALU_ADD'], ['=', 'instr_multicycle_o', ['bin', '1', '1']], ['=', 'alu_op_c_mux_sel_o', 'OP_C_REGB_OR_FWD'], ['if', ['==', ['subbus', 'instr_rdata_i', [6, 0]], 'OPCODE_STORE_POST'], ['list', ['=', 'prepost_useincr_o', ['bin', '1', '0']], ['=', 'regfile_alu_waddr_sel_o', ['bin', '1', '0']], ['=', 'regfile_alu_we', ['bin', '1', '1']]]], ['ifelse', ['~', ['subbit', 'instr_rdata_i', 14]], ['list', ['=', 'imm_b_mux_sel_o', 'IMMB_S'], ['=', 'alu_op_b_mux_sel_o', 'OP_B_IMM']], ['list', ['=', 'regc_used_o', ['bin', '1', '1']], ['=', 'alu_op_b_mux_sel_o', 'OP_B_REGC_OR_FWD'], ['=', 'regc_mux_o', 'REGC_RD']]], ['case', ['subbus', 'instr_rdata_i', (13, 12)], [[[['bin', '2', '00']], ['=', 'data_type_o', ['bin', '2', '10']]], [[['bin', '2', '01']], ['=', 'data_type_o', ['bin', '2', '01']]], [[['bin', '2', '10']], ['=', 'data_type_o', ['bin', '2', '00']]], ['default', ['list', ['=', 'data_req', ['bin', '1', '0']], ['=', 'data_we_o', ['bin', '1', '0']], ['=', 'illegal_insn_o', ['bin', '1', '1']]]]]]]], [['OPCODE_LOAD', 'OPCODE_LOAD_POST'], ['list', ['=', 'data_req', ['bin', '1', '1']], ['=', 'regfile_mem_we', ['bin', '1', '1']], ['=', 'rega_used_o', ['bin', '1', '1']], ['=', 'data_type_o', ['bin', '2', '00']], ['=', 'instr_multicycle_o', ['bin', '1', '1']], ['=', 'alu_operator_o', 'ALU_ADD'], ['=', 'alu_op_b_mux_sel_o', 'OP_B_IMM'], ['=', 'imm_b_mux_sel_o', 'IMMB_I'], ['if', ['==', ['subbus', 'instr_rdata_i', [6, 0]], 'OPCODE_LOAD_POST'], ['list', ['=', 'prepost_useincr_o', ['bin', '1', '0']], ['=', 'regfile_alu_waddr_sel_o', ['bin', '1', '0']], ['=', 'regfile_alu_we', ['bin', '1', '1']]]], ['=', 'data_sign_extension_o', ['~', ['subbit', 'instr_rdata_i', 14]]], ['case', ['subbus', 'instr_rdata_i', (13, 12)], [[[['bin', '2', '00']], ['=', 'data_type_o', ['bin', '2', '10']]], [[['bin', '2', '01']], ['=', 'data_type_o', ['bin', '2', '01']]], [[['bin', '2', '10']], ['=', 'data_type_o', ['bin', '2', '00']]], ['default', ['=', 'data_type_o', ['bin', '2', '00']]]]], ['if', ['==', ['subbus', 'instr_rdata_i', [14, 12]], ['bin', '3', '111']], ['list', ['=', 'regb_used_o', ['bin', '1', '1']], ['=', 'alu_op_b_mux_sel_o', 'OP_B_REGB_OR_FWD'], ['=', 'data_sign_extension_o', ['~', ['subbit', 'instr_rdata_i', 30]]], ['case', ['subbus', 'instr_rdata_i', (31, 25)], [[[['bin', '7', '0000_000'], ['bin', '7', '0100_000']], ['=', 'data_type_o', ['bin', '2', '10']]], [[['bin', '7', '0001_000'], ['bin', '7', '0101_000']], ['=', 'data_type_o', ['bin', '2', '01']]], [[['bin', '7', '0010_000']], ['=', 'data_type_o', ['bin', '2', '00']]], ['default', ['list', ['=', 'illegal_insn_o', ['bin', '1', '1']]]]]]]], ['if', ['==', ['subbus', 'instr_rdata_i', [14, 12]], ['bin', '3', '110']], ['=', 'data_load_event_o', ['bin', '1', '1']]], ['if', ['==', ['subbus', 'instr_rdata_i', [14, 12]], ['bin', '3', '011']], ['list', ['=', 'illegal_insn_o', ['bin', '1', '1']]]]]], [['OPCODE_LUI'], ['list', ['=', 'alu_op_a_mux_sel_o', 'OP_A_IMM'], ['=', 'alu_op_b_mux_sel_o', 'OP_B_IMM'], ['=', 'imm_a_mux_sel_o', 'IMMA_ZERO'], ['=', 'imm_b_mux_sel_o', 'IMMB_U'], ['=', 'alu_operator_o', 'ALU_ADD'], ['=', 'regfile_alu_we', ['bin', '1', '1']]]], [['OPCODE_AUIPC'], ['list', ['=', 'alu_op_a_mux_sel_o', 'OP_A_CURRPC'], ['=', 'alu_op_b_mux_sel_o', 'OP_B_IMM'], ['=', 'imm_b_mux_sel_o', 'IMMB_U'], ['=', 'alu_operator_o', 'ALU_ADD'], ['=', 'regfile_alu_we', ['bin', '1', '1']]]], [['OPCODE_OPIMM'], ['list', ['=', 'alu_op_b_mux_sel_o', 'OP_B_IMM'], ['=', 'imm_b_mux_sel_o', 'IMMB_I'], ['=', 'regfile_alu_we', ['bin', '1', '1']], ['=', 'rega_used_o', ['bin', '1', '1']], ['case', ['subbus', 'instr_rdata_i', (14, 12)], [[[['bin', '3', '000']], ['=', 'alu_operator_o', 'ALU_ADD']], [[['bin', '3', '010']], ['=', 'alu_operator_o', 'ALU_SLTS']], [[['bin', '3', '011']], ['=', 'alu_operator_o', 'ALU_SLTU']], [[['bin', '3', '100']], ['=', 'alu_operator_o', 'ALU_XOR']], [[['bin', '3', '110']], ['=', 'alu_operator_o', 'ALU_OR']], [[['bin', '3', '111']], ['=', 'alu_operator_o', 'ALU_AND']], [[['bin', '3', '001']], ['list', ['=', 'alu_operator_o', 'ALU_SLL'], ['if', ['!=', ['subbus', 'instr_rdata_i', [31, 25]], ['bin', '7', '0']], ['=', 'illegal_insn_o', ['bin', '1', '1']]]]], [[['bin', '3', '101']], ['list', ['ifelse', ['==', ['subbus', 'instr_rdata_i', [31, 25]], ['bin', '7', '0']], ['=', 'alu_operator_o', 'ALU_SRL'], ['ifelse', ['==', ['subbus', 'instr_rdata_i', [31, 25]], ['bin', '7', '010_0000']], ['=', 'alu_operator_o', 'ALU_SRA'], ['=', 'illegal_insn_o', ['bin', '1', '1']]]]]]]]]], [['OPCODE_OP'], ['list', ['=', 'regfile_alu_we', ['bin', '1', '1']], ['=', 'rega_used_o', ['bin', '1', '1']], ['ifelse', ['subbit', 'instr_rdata_i', 31], ['list', ['=', 'bmask_a_mux_o', 'BMASK_A_S3'], ['=', 'bmask_b_mux_o', 'BMASK_B_S2'], ['=', 'alu_op_b_mux_sel_o', 'OP_B_IMM'], ['case', ['subbus', 'instr_rdata_i', (14, 12)], [[[['bin', '3', '000']], ['list', ['=', 'alu_operator_o', 'ALU_BEXT'], ['=', 'imm_b_mux_sel_o', 'IMMB_S2'], ['=', 'bmask_b_mux_o', 'BMASK_B_ZERO'], ['if', ['~', ['subbit', 'instr_rdata_i', 30]], ['list', ['=', 'alu_op_b_mux_sel_o', 'OP_B_BMASK'], ['=', 'alu_bmask_a_mux_sel_o', 'BMASK_A_REG'], ['=', 'regb_used_o', ['bin', '1', '1']]]]]], [[['bin', '3', '001']], ['list', ['=', 'alu_operator_o', 'ALU_BEXTU'], ['=', 'imm_b_mux_sel_o', 'IMMB_S2'], ['=', 'bmask_b_mux_o', 'BMASK_B_ZERO'], ['if', ['~', ['subbit', 'instr_rdata_i', 30]], ['list', ['=', 'alu_op_b_mux_sel_o', 'OP_B_BMASK'], ['=', 'alu_bmask_a_mux_sel_o', 'BMASK_A_REG'], ['=', 'regb_used_o', ['bin', '1', '1']]]]]], [[['bin', '3', '010']], ['list', ['=', 'alu_operator_o', 'ALU_BINS'], ['=', 'imm_b_mux_sel_o', 'IMMB_S2'], ['=', 'regc_used_o', ['bin', '1', '1']], ['=', 'regc_mux_o', 'REGC_RD'], ['if', ['~', ['subbit', 'instr_rdata_i', 30]], ['list', ['=', 'alu_op_b_mux_sel_o', 'OP_B_BMASK'], ['=', 'alu_bmask_a_mux_sel_o', 'BMASK_A_REG'], ['=', 'alu_bmask_b_mux_sel_o', 'BMASK_B_REG'], ['=', 'regb_used_o', ['bin', '1', '1']]]]]], [[['bin', '3', '011']], ['list', ['=', 'alu_operator_o', 'ALU_BCLR'], ['if', ['~', ['subbit', 'instr_rdata_i', 30]], ['list', ['=', 'regb_used_o', ['bin', '1', '1']], ['=', 'alu_bmask_a_mux_sel_o', 'BMASK_A_REG'], ['=', 'alu_bmask_b_mux_sel_o', 'BMASK_B_REG']]]]], [[['bin', '3', '100']], ['list', ['=', 'alu_operator_o', 'ALU_BSET'], ['if', ['~', ['subbit', 'instr_rdata_i', 30]], ['list', ['=', 'regb_used_o', ['bin', '1', '1']], ['=', 'alu_bmask_a_mux_sel_o', 'BMASK_A_REG'], ['=', 'alu_bmask_b_mux_sel_o', 'BMASK_B_REG']]]]], ['default', ['=', 'illegal_insn_o', ['bin', '1', '1']]]]]], ['list', ['if', ['~', ['subbit', 'instr_rdata_i', 28]], ['=', 'regb_used_o', ['bin', '1', '1']]], ['case', ['curly', ['subbus', 'instr_rdata_i', (30, 25)], ['subbus', 'instr_rdata_i', (14, 12)]], [[[['curly', ['bin', '6', '00_0000'], ['bin', '3', '000']]], ['=', 'alu_operator_o', 'ALU_ADD']], [[['curly', ['bin', '6', '10_0000'], ['bin', '3', '000']]], ['=', 'alu_operator_o', 'ALU_SUB']], [[['curly', ['bin', '6', '00_0000'], ['bin', '3', '010']]], ['=', 'alu_operator_o', 'ALU_SLTS']], [[['curly', ['bin', '6', '00_0000'], ['bin', '3', '011']]], ['=', 'alu_operator_o', 'ALU_SLTU']], [[['curly', ['bin', '6', '00_0000'], ['bin', '3', '100']]], ['=', 'alu_operator_o', 'ALU_XOR']], [[['curly', ['bin', '6', '00_0000'], ['bin', '3', '110']]], ['=', 'alu_operator_o', 'ALU_OR']], [[['curly', ['bin', '6', '00_0000'], ['bin', '3', '111']]], ['=', 'alu_operator_o', 'ALU_AND']], [[['curly', ['bin', '6', '00_0000'], ['bin', '3', '001']]], ['=', 'alu_operator_o', 'ALU_SLL']], [[['curly', ['bin', '6', '00_0000'], ['bin', '3', '101']]], ['=', 'alu_operator_o', 'ALU_SRL']], [[['curly', ['bin', '6', '10_0000'], ['bin', '3', '101']]], ['=', 'alu_operator_o', 'ALU_SRA']], [[['curly', ['bin', '6', '00_0001'], ['bin', '3', '000']]], ['list', ['=', 'alu_en_o', ['bin', '1', '0']], ['=', 'mult_int_en_o', ['bin', '1', '1']], ['=', 'mult_operator_o', 'MUL_MAC32'], ['=', 'regc_mux_o', 'REGC_ZERO']]], [[['curly', ['bin', '6', '00_0001'], ['bin', '3', '001']]], ['list', ['=', 'alu_en_o', ['bin', '1', '0']], ['=', 'regc_used_o', ['bin', '1', '1']], ['=', 'regc_mux_o', 'REGC_ZERO'], ['=', 'mult_signed_mode_o', ['bin', '2', '11']], ['=', 'mult_int_en_o', ['bin', '1', '1']], ['=', 'mult_operator_o', 'MUL_H'], ['=', 'instr_multicycle_o', ['bin', '1', '1']]]], [[['curly', ['bin', '6', '00_0001'], ['bin', '3', '010']]], ['list', ['=', 'alu_en_o', ['bin', '1', '0']], ['=', 'regc_used_o', ['bin', '1', '1']], ['=', 'regc_mux_o', 'REGC_ZERO'], ['=', 'mult_signed_mode_o', ['bin', '2', '01']], ['=', 'mult_int_en_o', ['bin', '1', '1']], ['=', 'mult_operator_o', 'MUL_H'], ['=', 'instr_multicycle_o', ['bin', '1', '1']]]], [[['curly', ['bin', '6', '00_0001'], ['bin', '3', '011']]], ['list', ['=', 'alu_en_o', ['bin', '1', '0']], ['=', 'regc_used_o', ['bin', '1', '1']], ['=', 'regc_mux_o', 'REGC_ZERO'], ['=', 'mult_signed_mode_o', ['bin', '2', '00']], ['=', 'mult_int_en_o', ['bin', '1', '1']], ['=', 'mult_operator_o', 'MUL_H'], ['=', 'instr_multicycle_o', ['bin', '1', '1']]]], [[['curly', ['bin', '6', '00_0001'], ['bin', '3', '100']]], ['list', ['=', 'alu_op_a_mux_sel_o', 'OP_A_REGB_OR_FWD'], ['=', 'alu_op_b_mux_sel_o', 'OP_B_REGC_OR_FWD'], ['=', 'regc_mux_o', 'REGC_S1'], ['=', 'regc_used_o', ['bin', '1', '1']], ['=', 'regb_used_o', ['bin', '1', '1']], ['=', 'rega_used_o', ['bin', '1', '0']], ['=', 'alu_operator_o', 'ALU_DIV'], ['=', 'instr_multicycle_o', ['bin', '1', '1']], ['if', 'SHARED_INT_DIV', ['list', ['=', 'alu_en_o', ['bin', '1', '0']], ['=', 'apu_en', ['bin', '1', '1']], ['=', 'apu_type_o', 'APUTYPE_INT_DIV'], ['=', 'apu_op_o', 'alu_operator_o'], ['=', 'apu_lat_o', ['hex', '2', '3']]]]]], [[['curly', ['bin', '6', '00_0001'], ['bin', '3', '101']]], ['list', ['=', 'alu_op_a_mux_sel_o', 'OP_A_REGB_OR_FWD'], ['=', 'alu_op_b_mux_sel_o', 'OP_B_REGC_OR_FWD'], ['=', 'regc_mux_o', 'REGC_S1'], ['=', 'regc_used_o', ['bin', '1', '1']], ['=', 'regb_used_o', ['bin', '1', '1']], ['=', 'rega_used_o', ['bin', '1', '0']], ['=', 'alu_operator_o', 'ALU_DIVU'], ['=', 'instr_multicycle_o', ['bin', '1', '1']], ['if', 'SHARED_INT_DIV', ['list', ['=', 'alu_en_o', ['bin', '1', '0']], ['=', 'apu_en', ['bin', '1', '1']], ['=', 'apu_type_o', 'APUTYPE_INT_DIV'], ['=', 'apu_op_o', 'alu_operator_o'], ['=', 'apu_lat_o', ['hex', '2', '3']]]]]], [[['curly', ['bin', '6', '00_0001'], ['bin', '3', '110']]], ['list', ['=', 'alu_op_a_mux_sel_o', 'OP_A_REGB_OR_FWD'], ['=', 'alu_op_b_mux_sel_o', 'OP_B_REGC_OR_FWD'], ['=', 'regc_mux_o', 'REGC_S1'], ['=', 'regc_used_o', ['bin', '1', '1']], ['=', 'regb_used_o', ['bin', '1', '1']], ['=', 'rega_used_o', ['bin', '1', '0']], ['=', 'alu_operator_o', 'ALU_REM'], ['=', 'instr_multicycle_o', ['bin', '1', '1']], ['if', 'SHARED_INT_DIV', ['list', ['=', 'alu_en_o', ['bin', '1', '0']], ['=', 'apu_en', ['bin', '1', '1']], ['=', 'apu_type_o', 'APUTYPE_INT_DIV'], ['=', 'apu_op_o', 'alu_operator_o'], ['=', 'apu_lat_o', ['hex', '2', '3']]]]]], [[['curly', ['bin', '6', '00_0001'], ['bin', '3', '111']]], ['list', ['=', 'alu_op_a_mux_sel_o', 'OP_A_REGB_OR_FWD'], ['=', 'alu_op_b_mux_sel_o', 'OP_B_REGC_OR_FWD'], ['=', 'regc_mux_o', 'REGC_S1'], ['=', 'regc_used_o', ['bin', '1', '1']], ['=', 'regb_used_o', ['bin', '1', '1']], ['=', 'rega_used_o', ['bin', '1', '0']], ['=', 'alu_operator_o', 'ALU_REMU'], ['=', 'instr_multicycle_o', ['bin', '1', '1']], ['if', 'SHARED_INT_DIV', ['list', ['=', 'alu_en_o', ['bin', '1', '0']], ['=', 'apu_en', ['bin', '1', '1']], ['=', 'apu_type_o', 'APUTYPE_INT_DIV'], ['=', 'apu_op_o', 'alu_operator_o'], ['=', 'apu_lat_o', ['hex', '2', '3']]]]]], [[['curly', ['bin', '6', '10_0001'], ['bin', '3', '000']]], ['list', ['=', 'alu_en_o', ['bin', '1', '0']], ['=', 'regc_used_o', ['bin', '1', '1']], ['=', 'regc_mux_o', 'REGC_RD'], ['=', 'mult_int_en_o', ['bin', '1', '1']], ['=', 'mult_operator_o', 'MUL_MAC32'], ['if', 'SHARED_INT_MULT', ['list', ['=', 'mult_int_en_o', ['bin', '1', '0']], ['=', 'mult_dot_en_o', ['bin', '1', '0']], ['=', 'apu_en', ['bin', '1', '1']], ['=', 'apu_flags_src_o', 'APU_FLAGS_INT_MULT'], ['=', 'apu_op_o', 'mult_operator_o'], ['=', 'apu_type_o', 'APUTYPE_INT_MULT'], ['=', 'apu_lat_o', ['hex', '2', '1']]]]]], [[['curly', ['bin', '6', '10_0001'], ['bin', '3', '001']]], ['list', ['=', 'alu_en_o', ['bin', '1', '0']], ['=', 'regc_used_o', ['bin', '1', '1']], ['=', 'regc_mux_o', 'REGC_RD'], ['=', 'mult_int_en_o', ['bin', '1', '1']], ['=', 'mult_operator_o', 'MUL_MSU32'], ['if', 'SHARED_INT_MULT', ['list', ['=', 'mult_int_en_o', ['bin', '1', '0']], ['=', 'mult_dot_en_o', ['bin', '1', '0']], ['=', 'apu_en', ['bin', '1', '1']], ['=', 'apu_flags_src_o', 'APU_FLAGS_INT_MULT'], ['=', 'apu_op_o', 'mult_operator_o'], ['=', 'apu_type_o', 'APUTYPE_INT_MULT'], ['=', 'apu_lat_o', ['hex', '2', '1']]]]]], [[['curly', ['bin', '6', '00_0010'], ['bin', '3', '010']]], ['=', 'alu_operator_o', 'ALU_SLETS']], [[['curly', ['bin', '6', '00_0010'], ['bin', '3', '011']]], ['=', 'alu_operator_o', 'ALU_SLETU']], [[['curly', ['bin', '6', '00_0010'], ['bin', '3', '100']]], ['list', ['=', 'alu_operator_o', 'ALU_MIN']]], [[['curly', ['bin', '6', '00_0010'], ['bin', '3', '101']]], ['list', ['=', 'alu_operator_o', 'ALU_MINU']]], [[['curly', ['bin', '6', '00_0010'], ['bin', '3', '110']]], ['list', ['=', 'alu_operator_o', 'ALU_MAX']]], [[['curly', ['bin', '6', '00_0010'], ['bin', '3', '111']]], ['list', ['=', 'alu_operator_o', 'ALU_MAXU']]], [[['curly', ['bin', '6', '00_0100'], ['bin', '3', '101']]], ['list', ['=', 'alu_operator_o', 'ALU_ROR']]], [[['curly', ['bin', '6', '00_1000'], ['bin', '3', '000']]], ['list', ['=', 'alu_operator_o', 'ALU_FF1']]], [[['curly', ['bin', '6', '00_1000'], ['bin', '3', '001']]], ['list', ['=', 'alu_operator_o', 'ALU_FL1']]], [[['curly', ['bin', '6', '00_1000'], ['bin', '3', '010']]], ['list', ['=', 'alu_operator_o', 'ALU_CLB']]], [[['curly', ['bin', '6', '00_1000'], ['bin', '3', '011']]], ['list', ['=', 'alu_operator_o', 'ALU_CNT']]], [[['curly', ['bin', '6', '00_1000'], ['bin', '3', '100']]], ['list', ['=', 'alu_operator_o', 'ALU_EXTS'], ['=', 'alu_vec_mode_o', 'VEC_MODE16']]], [[['curly', ['bin', '6', '00_1000'], ['bin', '3', '101']]], ['list', ['=', 'alu_operator_o', 'ALU_EXT'], ['=', 'alu_vec_mode_o', 'VEC_MODE16']]], [[['curly', ['bin', '6', '00_1000'], ['bin', '3', '110']]], ['list', ['=', 'alu_operator_o', 'ALU_EXTS'], ['=', 'alu_vec_mode_o', 'VEC_MODE8']]], [[['curly', ['bin', '6', '00_1000'], ['bin', '3', '111']]], ['list', ['=', 'alu_operator_o', 'ALU_EXT'], ['=', 'alu_vec_mode_o', 'VEC_MODE8']]], [[['curly', ['bin', '6', '00_0010'], ['bin', '3', '000']]], ['list', ['=', 'alu_operator_o', 'ALU_ABS']]], [[['curly', ['bin', '6', '00_1010'], ['bin', '3', '001']]], ['list', ['=', 'alu_operator_o', 'ALU_CLIP'], ['=', 'alu_op_b_mux_sel_o', 'OP_B_IMM'], ['=', 'imm_b_mux_sel_o', 'IMMB_CLIP']]], [[['curly', ['bin', '6', '00_1010'], ['bin', '3', '010']]], ['list', ['=', 'alu_operator_o', 'ALU_CLIPU'], ['=', 'alu_op_b_mux_sel_o', 'OP_B_IMM'], ['=', 'imm_b_mux_sel_o', 'IMMB_CLIP']]], [[['curly', ['bin', '6', '00_1010'], ['bin', '3', '101']]], ['list', ['=', 'alu_operator_o', 'ALU_CLIP'], ['=', 'regb_used_o', ['bin', '1', '1']]]], [[['curly', ['bin', '6', '00_1010'], ['bin', '3', '110']]], ['list', ['=', 'alu_operator_o', 'ALU_CLIPU'], ['=', 'regb_used_o', ['bin', '1', '1']]]], ['default', ['list', ['=', 'illegal_insn_o', ['bin', '1', '1']]]]]]]]]], [['OPCODE_OP_FP'], ['list', ['ifelse', 'FPU', ['list', ['=', 'fp_rnd_mode_o', ['subbus', 'instr_rdata_i', [14, 12]]], ['ifelse', ['==', ['subbus', 'instr_rdata_i', [26, 25]], ['bin', '2', '00']], ['list', ['case', ['subbus', 'instr_rdata_i', (31, 27)], [[[['hex', '5', '00']], ['list', ['=', 'apu_type_o', 'APUTYPE_ADDSUB'], ['=', 'apu_op_o', ['bin', '2', '0']], ['=', 'fpu_op_o', 'C_FPU_ADD_CMD'], ['=', 'apu_lat_o', ['question', 'PIPE_REG_ADDSUB', ['hex', '2', '2'], ['hex', '2', '1']]], ['if', 'FPU', ['list', ['=', 'apu_en', ['bin', '1', '1']], ['=', 'alu_en_o', ['bin', '1', '0']], ['=', 'apu_flags_src_o', 'APU_FLAGS_FP'], ['=', 'rega_used_o', ['bin', '1', '1']], ['=', 'regb_used_o', ['bin', '1', '1']], ['=', 'reg_fp_a_o', ['bin', '1', '1']], ['=', 'reg_fp_b_o', ['bin', '1', '1']], ['=', 'reg_fp_d_o', ['bin', '1', '1']]]]]], [[['hex', '5', '01']], ['list', ['=', 'apu_type_o', 'APUTYPE_ADDSUB'], ['=', 'apu_op_o', ['bin', '2', '1']], ['=', 'fpu_op_o', 'C_FPU_SUB_CMD'], ['=', 'apu_lat_o', ['question', 'PIPE_REG_ADDSUB', ['hex', '2', '2'], ['hex', '2', '1']]], ['if', 'FPU', ['list', ['=', 'apu_en', ['bin', '1', '1']], ['=', 'alu_en_o', ['bin', '1', '0']], ['=', 'apu_flags_src_o', 'APU_FLAGS_FP'], ['=', 'rega_used_o', ['bin', '1', '1']], ['=', 'regb_used_o', ['bin', '1', '1']], ['=', 'reg_fp_a_o', ['bin', '1', '1']], ['=', 'reg_fp_b_o', ['bin', '1', '1']], ['=', 'reg_fp_d_o', ['bin', '1', '1']]]]]], [[['hex', '5', '02']], ['list', ['=', 'apu_type_o', 'APUTYPE_MULT'], ['=', 'fpu_op_o', 'C_FPU_MUL_CMD'], ['=', 'apu_lat_o', ['question', 'PIPE_REG_MULT', ['hex', '2', '2'], ['hex', '2', '1']]], ['if', 'FPU', ['list', ['=', 'apu_en', ['bin', '1', '1']], ['=', 'alu_en_o', ['bin', '1', '0']], ['=', 'apu_flags_src_o', 'APU_FLAGS_FP'], ['=', 'rega_used_o', ['bin', '1', '1']], ['=', 'regb_used_o', ['bin', '1', '1']], ['=', 'reg_fp_a_o', ['bin', '1', '1']], ['=', 'reg_fp_b_o', ['bin', '1', '1']], ['=', 'reg_fp_d_o', ['bin', '1', '1']]]]]], [[['hex', '5', '03']], ['list', ['ifelse', 'SHARED_FP_DIVSQRT', ['list', ['=', 'apu_type_o', 'APUTYPE_DIV'], ['=', 'apu_lat_o', ['hex', '2', '3']], ['if', 'FPU', ['list', ['=', 'apu_en', ['bin', '1', '1']], ['=', 'alu_en_o', ['bin', '1', '0']], ['=', 'apu_flags_src_o', 'APU_FLAGS_FP'], ['=', 'rega_used_o', ['bin', '1', '1']], ['=', 'regb_used_o', ['bin', '1', '1']], ['=', 'reg_fp_a_o', ['bin', '1', '1']], ['=', 'reg_fp_b_o', ['bin', '1', '1']], ['=', 'reg_fp_d_o', ['bin', '1', '1']]]]], ['ifelse', ['==', 'SHARED_FP_DIVSQRT', 2], ['list', ['=', 'apu_type_o', 'APUTYPE_DIVSQRT'], ['=', 'apu_lat_o', ['hex', '2', '3']], ['=', 'apu_op_o', ['bin', '1', '0']], ['=', 'fpu_op_o', 'C_FPU_DIV_CMD'], ['if', 'FPU', ['list', ['=', 'apu_en', ['bin', '1', '1']], ['=', 'alu_en_o', ['bin', '1', '0']], ['=', 'apu_flags_src_o', 'APU_FLAGS_FP'], ['=', 'rega_used_o', ['bin', '1', '1']], ['=', 'regb_used_o', ['bin', '1', '1']], ['=', 'reg_fp_a_o', ['bin', '1', '1']], ['=', 'reg_fp_b_o', ['bin', '1', '1']], ['=', 'reg_fp_d_o', ['bin', '1', '1']]]]], ['=', 'illegal_insn_o', ['bin', '1', '1']]]]]], [[['hex', '5', '0b']], ['list', ['ifelse', 'SHARED_FP_DIVSQRT', ['list', ['=', 'apu_type_o', 'APUTYPE_SQRT'], ['=', 'apu_lat_o', ['hex', '2', '3']], ['if', 'FPU', ['list', ['=', 'apu_en', ['bin', '1', '1']], ['=', 'alu_en_o', ['bin', '1', '0']], ['=', 'apu_flags_src_o', 'APU_FLAGS_FP'], ['=', 'rega_used_o', ['bin', '1', '1']], ['=', 'regb_used_o', ['bin', '1', '1']], ['=', 'reg_fp_a_o', ['bin', '1', '1']], ['=', 'reg_fp_b_o', ['bin', '1', '1']], ['=', 'reg_fp_d_o', ['bin', '1', '1']]]]], ['ifelse', ['==', 'SHARED_FP_DIVSQRT', 2], ['list', ['=', 'apu_type_o', 'APUTYPE_DIVSQRT'], ['=', 'apu_lat_o', ['hex', '2', '3']], ['=', 'apu_op_o', ['bin', '1', '1']], ['=', 'fpu_op_o', 'C_FPU_SQRT_CMD'], ['if', 'FPU', ['list', ['=', 'apu_en', ['bin', '1', '1']], ['=', 'alu_en_o', ['bin', '1', '0']], ['=', 'apu_flags_src_o', 'APU_FLAGS_FP'], ['=', 'rega_used_o', ['bin', '1', '1']], ['=', 'regb_used_o', ['bin', '1', '1']], ['=', 'reg_fp_a_o', ['bin', '1', '1']], ['=', 'reg_fp_b_o', ['bin', '1', '1']], ['=', 'reg_fp_d_o', ['bin', '1', '1']]]]], ['=', 'illegal_insn_o', ['bin', '1', '1']]]]]], [[['hex', '5', '04']], ['list', ['=', 'rega_used_o', ['bin', '1', '1']], ['=', 'regb_used_o', ['bin', '1', '1']], ['=', 'regfile_alu_we', ['bin', '1', '1']], ['=', 'reg_fp_a_o', ['bin', '1', '1']], ['=', 'reg_fp_b_o', ['bin', '1', '1']], ['=', 'reg_fp_d_o', ['bin', '1', '1']], ['case', ['subbus', 'instr_rdata_i', (14, 12)], [[[['hex', '3', '0']], ['=', 'alu_operator_o', 'ALU_FSGNJ']], [[['hex', '3', '1']], ['=', 'alu_operator_o', 'ALU_FSGNJN']], [[['hex', '3', '2']], ['=', 'alu_operator_o', 'ALU_FSGNJX']], ['default', ['=', 'illegal_insn_o', ['bin', '1', '1']]]]]]], [[['hex', '5', '05']], ['list', ['=', 'rega_used_o', ['bin', '1', '1']], ['=', 'regb_used_o', ['bin', '1', '1']], ['=', 'regfile_alu_we', ['bin', '1', '1']], ['=', 'reg_fp_a_o', ['bin', '1', '1']], ['=', 'reg_fp_b_o', ['bin', '1', '1']], ['=', 'reg_fp_d_o', ['bin', '1', '1']], ['case', ['subbus', 'instr_rdata_i', (14, 12)], [[[['hex', '3', '0']], ['=', 'alu_operator_o', 'ALU_FMIN']], [[['hex', '3', '1']], ['=', 'alu_operator_o', 'ALU_FMAX']], ['default', ['=', 'illegal_insn_o', ['bin', '1', '1']]]]]]], [[['hex', '5', '08']], ['list', ['=', 'rega_used_o', ['bin', '1', '1']], ['=', 'regb_used_o', ['bin', '1', '0']], ['=', 'regfile_alu_we', ['bin', '1', '1']], ['=', 'reg_fp_a_o', ['bin', '1', '1']], ['=', 'reg_fp_d_o', ['bin', '1', '1']], ['=', 'alu_operator_o', 'ALU_FKEEP']]], [[['hex', '5', '14']], ['list', ['=', 'rega_used_o', ['bin', '1', '1']], ['=', 'regb_used_o', ['bin', '1', '1']], ['=', 'regfile_alu_we', ['bin', '1', '1']], ['=', 'reg_fp_a_o', ['bin', '1', '1']], ['=', 'reg_fp_b_o', ['bin', '1', '1']], ['case', ['subbus', 'instr_rdata_i', (14, 12)], [[[['hex', '3', '0']], ['=', 'alu_operator_o', 'ALU_FLE']], [[['hex', '3', '1']], ['=', 'alu_operator_o', 'ALU_FLT']], [[['hex', '3', '2']], ['=', 'alu_operator_o', 'ALU_FEQ']], ['default', ['=', 'illegal_insn_o', ['bin', '1', '1']]]]]]], [[['hex', '5', '18']], ['list', ['=', 'rega_used_o', ['bin', '1', '1']], ['=', 'regfile_alu_we', ['bin', '1', '1']], ['=', 'reg_fp_a_o', ['bin', '1', '1']], ['=', 'apu_en', ['bin', '1', '1']], ['=', 'apu_flags_src_o', 'APU_FLAGS_FP'], ['=', 'apu_type_o', 'APUTYPE_CAST'], ['=', 'apu_op_o', ['bin', '2', '1']], ['=', 'apu_lat_o', ['question', 'PIPE_REG_CAST', ['hex', '2', '2'], ['hex', '2', '1']]], ['=', 'fpu_op_o', 'C_FPU_F2I_CMD']]], [[['hex', '5', '1A']], ['list', ['=', 'rega_used_o', ['bin', '1', '1']], ['=', 'regfile_alu_we', ['bin', '1', '1']], ['=', 'reg_fp_d_o', ['bin', '1', '1']], ['=', 'apu_en', ['bin', '1', '1']], ['=', 'apu_flags_src_o', 'APU_FLAGS_FP'], ['=', 'apu_type_o', 'APUTYPE_CAST'], ['=', 'apu_op_o', ['bin', '2', '0']], ['=', 'apu_lat_o', ['question', 'PIPE_REG_CAST', ['hex', '2', '2'], ['hex', '2', '1']]], ['=', 'fpu_op_o', 'C_FPU_I2F_CMD']]], [[['hex', '5', '1E']], ['list', ['=', 'rega_used_o', ['bin', '1', '1']], ['=', 'regb_used_o', ['bin', '1', '1']], ['=', 'alu_operator_o', 'ALU_ADD'], ['=', 'regfile_alu_we', ['bin', '1', '1']], ['=', 'reg_fp_d_o', ['bin', '1', '1']]]], [[['hex', '5', '1C']], ['list', ['case', ['subbus', 'instr_rdata_i', (14, 12)], [[[['hex', '3', '0']], ['list', ['=', 'rega_used_o', ['bin', '1', '1']], ['=', 'regb_used_o', ['bin', '1', '1']], ['=', 'alu_operator_o', 'ALU_ADD'], ['=', 'regfile_alu_we', ['bin', '1', '1']], ['=', 'reg_fp_a_o', ['bin', '1', '1']]]], [[['hex', '3', '1']], ['list', ['=', 'rega_used_o', ['bin', '1', '1']], ['=', 'regfile_alu_we', ['bin', '1', '1']], ['=', 'reg_fp_a_o', ['bin', '1', '1']], ['=', 'alu_operator_o', 'ALU_FCLASS']]], ['default', ['=', 'illegal_insn_o', ['bin', '1', '1']]]]]]], ['default', ['list', ['=', 'illegal_insn_o', ['bin', '1', '1']]]]]]], ['if', ['==', ['subbus', 'instr_rdata_i', [26, 25]], ['bin', '2', '01']], ['list', ['case', ['subbus', 'instr_rdata_i', (31, 27)], [[[['hex', '5', '08']], ['list', ['=', 'rega_used_o', ['bin', '1', '1']], ['=', 'regb_used_o', ['bin', '1', '0']], ['=', 'regfile_alu_we', ['bin', '1', '1']], ['=', 'reg_fp_a_o', ['bin', '1', '1']], ['=', 'reg_fp_d_o', ['bin', '1', '1']], ['=', 'alu_operator_o', 'ALU_FKEEP']]], ['default', ['=', 'illegal_insn_o', ['bin', '1', '1']]]]]]]]], ['=', 'illegal_insn_o', ['bin', '1', '1']]]]], [['OPCODE_OP_FMADD'], ['list', ['ifelse', 'FPU', ['list', ['=', 'fp_rnd_mode_o', ['subbus', 'instr_rdata_i', [14, 12]]], ['if', ['==', ['subbus', 'instr_rdata_i', [26, 25]], ['bin', '2', '00']], ['list', ['=', 'apu_type_o', 'APUTYPE_MAC'], ['=', 'apu_lat_o', ['question', ['>', 'PIPE_REG_MAC', 1], ['hex', '2', '3'], ['hex', '2', '2']]], ['=', 'apu_op_o', ['bin', '2', '0']], ['=', 'fpu_op_o', 'C_FPU_FMADD_CMD'], ['if', 'FPU', ['list', ['=', 'apu_en', ['bin', '1', '1']], ['=', 'alu_en_o', ['bin', '1', '0']], ['=', 'apu_flags_src_o', 'APU_FLAGS_FP'], ['=', 'rega_used_o', ['bin', '1', '1']], ['=', 'regb_used_o', ['bin', '1', '1']], ['=', 'regc_used_o', ['bin', '1', '1']], ['=', 'reg_fp_a_o', ['bin', '1', '1']], ['=', 'reg_fp_b_o', ['bin', '1', '1']], ['=', 'reg_fp_c_o', ['bin', '1', '1']], ['=', 'reg_fp_d_o', ['bin', '1', '1']], ['=', 'regc_mux_o', 'REGC_S4']]]]]], ['=', 'illegal_insn_o', ['bin', '1', '1']]]]], [['OPCODE_OP_FMSUB'], ['list', ['ifelse', 'FPU', ['list', ['=', 'fp_rnd_mode_o', ['subbus', 'instr_rdata_i', [14, 12]]], ['if', ['==', ['subbus', 'instr_rdata_i', [26, 25]], ['bin', '2', '00']], ['list', ['=', 'apu_type_o', 'APUTYPE_MAC'], ['=', 'apu_lat_o', ['question', ['>', 'PIPE_REG_MAC', 1], ['hex', '2', '3'], ['hex', '2', '2']]], ['=', 'apu_op_o', ['bin', '2', '1']], ['=', 'fpu_op_o', 'C_FPU_FMSUB_CMD'], ['if', 'FPU', ['list', ['=', 'apu_en', ['bin', '1', '1']], ['=', 'alu_en_o', ['bin', '1', '0']], ['=', 'apu_flags_src_o', 'APU_FLAGS_FP'], ['=', 'rega_used_o', ['bin', '1', '1']], ['=', 'regb_used_o', ['bin', '1', '1']], ['=', 'regc_used_o', ['bin', '1', '1']], ['=', 'reg_fp_a_o', ['bin', '1', '1']], ['=', 'reg_fp_b_o', ['bin', '1', '1']], ['=', 'reg_fp_c_o', ['bin', '1', '1']], ['=', 'reg_fp_d_o', ['bin', '1', '1']], ['=', 'regc_mux_o', 'REGC_S4']]]]]], ['=', 'illegal_insn_o', ['bin', '1', '1']]]]], [['OPCODE_OP_FNMADD'], ['list', ['ifelse', 'FPU', ['list', ['=', 'fp_rnd_mode_o', ['subbus', 'instr_rdata_i', [14, 12]]], ['if', ['==', ['subbus', 'instr_rdata_i', [26, 25]], ['bin', '2', '00']], ['list', ['=', 'apu_type_o', 'APUTYPE_MAC'], ['=', 'apu_lat_o', ['question', ['>', 'PIPE_REG_MAC', 1], ['hex', '2', '3'], ['hex', '2', '2']]], ['=', 'apu_op_o', ['bin', '2', '11']], ['=', 'fpu_op_o', 'C_FPU_FNMADD_CMD'], ['if', 'FPU', ['list', ['=', 'apu_en', ['bin', '1', '1']], ['=', 'alu_en_o', ['bin', '1', '0']], ['=', 'apu_flags_src_o', 'APU_FLAGS_FP'], ['=', 'rega_used_o', ['bin', '1', '1']], ['=', 'regb_used_o', ['bin', '1', '1']], ['=', 'regc_used_o', ['bin', '1', '1']], ['=', 'reg_fp_a_o', ['bin', '1', '1']], ['=', 'reg_fp_b_o', ['bin', '1', '1']], ['=', 'reg_fp_c_o', ['bin', '1', '1']], ['=', 'reg_fp_d_o', ['bin', '1', '1']], ['=', 'regc_mux_o', 'REGC_S4']]]]]], ['=', 'illegal_insn_o', ['bin', '1', '1']]]]], [['OPCODE_OP_FNMSUB'], ['list', ['ifelse', 'FPU', ['list', ['=', 'fp_rnd_mode_o', ['subbus', 'instr_rdata_i', [14, 12]]], ['if', ['==', ['subbus', 'instr_rdata_i', [26, 25]], ['bin', '2', '00']], ['list', ['=', 'apu_type_o', 'APUTYPE_MAC'], ['=', 'apu_lat_o', ['question', ['>', 'PIPE_REG_MAC', 1], ['hex', '2', '3'], ['hex', '2', '2']]], ['=', 'apu_op_o', ['bin', '2', '10']], ['=', 'fpu_op_o', 'C_FPU_FNMSUB_CMD'], ['if', 'FPU', ['list', ['=', 'apu_en', ['bin', '1', '1']], ['=', 'alu_en_o', ['bin', '1', '0']], ['=', 'apu_flags_src_o', 'APU_FLAGS_FP'], ['=', 'rega_used_o', ['bin', '1', '1']], ['=', 'regb_used_o', ['bin', '1', '1']], ['=', 'regc_used_o', ['bin', '1', '1']], ['=', 'reg_fp_a_o', ['bin', '1', '1']], ['=', 'reg_fp_b_o', ['bin', '1', '1']], ['=', 'reg_fp_c_o', ['bin', '1', '1']], ['=', 'reg_fp_d_o', ['bin', '1', '1']], ['=', 'regc_mux_o', 'REGC_S4']]]]]], ['=', 'illegal_insn_o', ['bin', '1', '1']]]]], [['OPCODE_STORE_FP'], ['list', ['ifelse', 'FPU', ['list', ['case', ['subbus', 'instr_rdata_i', (14, 12)], [[[['bin', '3', '010'], ['bin', '3', '011']], ['list', ['=', 'data_req', ['bin', '1', '1']], ['=', 'data_we_o', ['bin', '1', '1']], ['=', 'rega_used_o', ['bin', '1', '1']], ['=', 'regb_used_o', ['bin', '1', '1']], ['=', 'alu_operator_o', 'ALU_ADD'], ['=', 'reg_fp_b_o', ['bin', '1', '1']], ['=', 'imm_b_mux_sel_o', 'IMMB_S'], ['=', 'alu_op_b_mux_sel_o', 'OP_B_IMM'], ['=', 'alu_op_c_mux_sel_o', 'OP_C_REGB_OR_FWD'], ['=', 'data_type_o', ['bin', '2', '00']]]], ['default', ['list', ['=', 'illegal_insn_o', ['bin', '1', '1']]]]]]], ['=', 'illegal_insn_o', ['bin', '1', '1']]]]], [['OPCODE_LOAD_FP'], ['list', ['ifelse', 'FPU', ['list', ['case', ['subbus', 'instr_rdata_i', (14, 12)], [[[['bin', '3', '010'], ['bin', '3', '011']], ['list', ['=', 'data_req', ['bin', '1', '1']], ['=', 'regfile_mem_we', ['bin', '1', '1']], ['=', 'reg_fp_d_o', ['bin', '1', '1']], ['=', 'rega_used_o', ['bin', '1', '1']], ['=', 'data_type_o', ['bin', '2', '00']], ['=', 'alu_operator_o', 'ALU_ADD'], ['=', 'alu_op_b_mux_sel_o', 'OP_B_IMM'], ['=', 'imm_b_mux_sel_o', 'IMMB_I']]], ['default', ['=', 'illegal_insn_o', ['bin', '1', '1']]]]]], ['=', 'illegal_insn_o', ['bin', '1', '1']]]]], [['OPCODE_PULP_OP'], ['list', ['=', 'regfile_alu_we', ['bin', '1', '1']], ['=', 'rega_used_o', ['bin', '1', '1']], ['=', 'regb_used_o', ['bin', '1', '1']], ['case', ['subbus', 'instr_rdata_i', (13, 12)], [[[['bin', '2', '00']], ['list', ['=', 'alu_en_o', ['bin', '1', '0']], ['=', 'mult_sel_subword_o', ['subbit', 'instr_rdata_i', 30]], ['=', 'mult_signed_mode_o', ['curly', 'repeat', 2, ['curly', ['subbit', 'instr_rdata_i', 31]]]], ['=', 'mult_imm_mux_o', 'MIMM_S3'], ['=', 'regc_mux_o', 'REGC_ZERO'], ['=', 'mult_int_en_o', ['bin', '1', '1']], ['ifelse', ['subbit', 'instr_rdata_i', 14], ['=', 'mult_operator_o', 'MUL_IR'], ['=', 'mult_operator_o', 'MUL_I']], ['if', 'SHARED_INT_MULT', ['list', ['=', 'mult_int_en_o', ['bin', '1', '0']], ['=', 'mult_dot_en_o', ['bin', '1', '0']], ['=', 'apu_en', ['bin', '1', '1']], ['=', 'apu_flags_src_o', 'APU_FLAGS_INT_MULT'], ['=', 'apu_op_o', 'mult_operator_o'], ['=', 'apu_type_o', 'APUTYPE_INT_MULT'], ['=', 'apu_lat_o', ['hex', '2', '1']]]]]], [[['bin', '2', '01']], ['list', ['=', 'alu_en_o', ['bin', '1', '0']], ['=', 'mult_sel_subword_o', ['subbit', 'instr_rdata_i', 30]], ['=', 'mult_signed_mode_o', ['curly', 'repeat', 2, ['curly', ['subbit', 'instr_rdata_i', 31]]]], ['=', 'regc_used_o', ['bin', '1', '1']], ['=', 'regc_mux_o', 'REGC_RD'], ['=', 'mult_imm_mux_o', 'MIMM_S3'], ['=', 'mult_int_en_o', ['bin', '1', '1']], ['ifelse', ['subbit', 'instr_rdata_i', 14], ['=', 'mult_operator_o', 'MUL_IR'], ['=', 'mult_operator_o', 'MUL_I']], ['if', 'SHARED_INT_MULT', ['list', ['=', 'mult_int_en_o', ['bin', '1', '0']], ['=', 'mult_dot_en_o', ['bin', '1', '0']], ['=', 'apu_en', ['bin', '1', '1']], ['=', 'apu_flags_src_o', 'APU_FLAGS_INT_MULT'], ['=', 'apu_op_o', 'mult_operator_o'], ['=', 'apu_type_o', 'APUTYPE_INT_MULT'], ['=', 'apu_lat_o', ['hex', '2', '1']]]]]], [[['bin', '2', '10']], ['list', ['case', ['curly', ['subbit', 'instr_rdata_i', 31], ['subbit', 'instr_rdata_i', 14]], [[[['bin', '2', '00']], ['=', 'alu_operator_o', 'ALU_ADD']], [[['bin', '2', '01']], ['=', 'alu_operator_o', 'ALU_ADDR']], [[['bin', '2', '10']], ['=', 'alu_operator_o', 'ALU_ADDU']], [[['bin', '2', '11']], ['=', 'alu_operator_o', 'ALU_ADDUR']]]], ['=', 'bmask_a_mux_o', 'BMASK_A_ZERO'], ['=', 'bmask_b_mux_o', 'BMASK_B_S3'], ['if', ['subbit', 'instr_rdata_i', 30], ['list', ['=', 'regc_used_o', ['bin', '1', '1']], ['=', 'regc_mux_o', 'REGC_RD'], ['=', 'alu_bmask_b_mux_sel_o', 'BMASK_B_REG'], ['=', 'alu_op_a_mux_sel_o', 'OP_A_REGC_OR_FWD'], ['=', 'alu_op_b_mux_sel_o', 'OP_B_REGA_OR_FWD']]]]], [[['bin', '2', '11']], ['list', ['case', ['curly', ['subbit', 'instr_rdata_i', 31], ['subbit', 'instr_rdata_i', 14]], [[[['bin', '2', '00']], ['=', 'alu_operator_o', 'ALU_SUB']], [[['bin', '2', '01']], ['=', 'alu_operator_o', 'ALU_SUBR']], [[['bin', '2', '10']], ['=', 'alu_operator_o', 'ALU_SUBU']], [[['bin', '2', '11']], ['=', 'alu_operator_o', 'ALU_SUBUR']]]], ['=', 'bmask_a_mux_o', 'BMASK_A_ZERO'], ['=', 'bmask_b_mux_o', 'BMASK_B_S3'], ['if', ['subbit', 'instr_rdata_i', 30], ['list', ['=', 'regc_used_o', ['bin', '1', '1']], ['=', 'regc_mux_o', 'REGC_RD'], ['=', 'alu_bmask_b_mux_sel_o', 'BMASK_B_REG'], ['=', 'alu_op_a_mux_sel_o', 'OP_A_REGC_OR_FWD'], ['=', 'alu_op_b_mux_sel_o', 'OP_B_REGA_OR_FWD']]]]]]]]], [['OPCODE_VECOP'], ['list', ['=', 'regfile_alu_we', ['bin', '1', '1']], ['=', 'rega_used_o', ['bin', '1', '1']], ['=', 'imm_b_mux_sel_o', 'IMMB_VS'], ['ifelse', ['subbit', 'instr_rdata_i', 12], ['list', ['=', 'alu_vec_mode_o', 'VEC_MODE8'], ['=', 'mult_operator_o', 'MUL_DOT8']], ['list', ['=', 'alu_vec_mode_o', 'VEC_MODE16'], ['=', 'mult_operator_o', 'MUL_DOT16']]], ['ifelse', ['subbit', 'instr_rdata_i', 14], ['list', ['=', 'scalar_replication_o', ['bin', '1', '1']], ['ifelse', ['subbit', 'instr_rdata_i', 13], ['list', ['=', 'alu_op_b_mux_sel_o', 'OP_B_IMM']], ['list', ['=', 'regb_used_o', ['bin', '1', '1']]]]], ['list', ['=', 'regb_used_o', ['bin', '1', '1']]]], ['case', ['subbus', 'instr_rdata_i', (31, 26)], [[[['bin', '6', '00000_0']], ['list', ['=', 'alu_operator_o', 'ALU_ADD'], ['=', 'imm_b_mux_sel_o', 'IMMB_VS']]], [[['bin', '6', '00001_0']], ['list', ['=', 'alu_operator_o', 'ALU_SUB'], ['=', 'imm_b_mux_sel_o', 'IMMB_VS']]], [[['bin', '6', '00010_0']], ['list', ['=', 'alu_operator_o', 'ALU_ADD'], ['=', 'imm_b_mux_sel_o', 'IMMB_VS'], ['=', 'bmask_b_mux_o', 'BMASK_B_ONE']]], [[['bin', '6', '00011_0']], ['list', ['=', 'alu_operator_o', 'ALU_ADDU'], ['=', 'imm_b_mux_sel_o', 'IMMB_VU'], ['=', 'bmask_b_mux_o', 'BMASK_B_ONE']]], [[['bin', '6', '00100_0']], ['list', ['=', 'alu_operator_o', 'ALU_MIN'], ['=', 'imm_b_mux_sel_o', 'IMMB_VS']]], [[['bin', '6', '00101_0']], ['list', ['=', 'alu_operator_o', 'ALU_MINU'], ['=', 'imm_b_mux_sel_o', 'IMMB_VU']]], [[['bin', '6', '00110_0']], ['list', ['=', 'alu_operator_o', 'ALU_MAX'], ['=', 'imm_b_mux_sel_o', 'IMMB_VS']]], [[['bin', '6', '00111_0']], ['list', ['=', 'alu_operator_o', 'ALU_MAXU'], ['=', 'imm_b_mux_sel_o', 'IMMB_VU']]], [[['bin', '6', '01000_0']], ['list', ['=', 'alu_operator_o', 'ALU_SRL'], ['=', 'imm_b_mux_sel_o', 'IMMB_VS']]], [[['bin', '6', '01001_0']], ['list', ['=', 'alu_operator_o', 'ALU_SRA'], ['=', 'imm_b_mux_sel_o', 'IMMB_VS']]], [[['bin', '6', '01010_0']], ['list', ['=', 'alu_operator_o', 'ALU_SLL'], ['=', 'imm_b_mux_sel_o', 'IMMB_VS']]], [[['bin', '6', '01011_0']], ['list', ['=', 'alu_operator_o', 'ALU_OR'], ['=', 'imm_b_mux_sel_o', 'IMMB_VS']]], [[['bin', '6', '01100_0']], ['list', ['=', 'alu_operator_o', 'ALU_XOR'], ['=', 'imm_b_mux_sel_o', 'IMMB_VS']]], [[['bin', '6', '01101_0']], ['list', ['=', 'alu_operator_o', 'ALU_AND'], ['=', 'imm_b_mux_sel_o', 'IMMB_VS']]], [[['bin', '6', '01110_0']], ['list', ['=', 'alu_operator_o', 'ALU_ABS'], ['=', 'imm_b_mux_sel_o', 'IMMB_VS']]], [[['bin', '6', '11101_0'], ['bin', '6', '11110_0'], ['bin', '6', '11111_0'], ['bin', '6', '11000_0']], ['list', ['=', 'alu_operator_o', 'ALU_SHUF'], ['=', 'imm_b_mux_sel_o', 'IMMB_SHUF'], ['=', 'regb_used_o', ['bin', '1', '1']], ['=', 'scalar_replication_o', ['bin', '1', '0']]]], [[['bin', '6', '11001_0']], ['list', ['=', 'alu_operator_o', 'ALU_SHUF2'], ['=', 'regb_used_o', ['bin', '1', '1']], ['=', 'regc_used_o', ['bin', '1', '1']], ['=', 'regc_mux_o', 'REGC_RD'], ['=', 'scalar_replication_o', ['bin', '1', '0']]]], [[['bin', '6', '11010_0']], ['list', ['=', 'alu_operator_o', 'ALU_PCKLO'], ['=', 'regb_used_o', ['bin', '1', '1']]]], [[['bin', '6', '11011_0']], ['list', ['=', 'alu_operator_o', 'ALU_PCKHI'], ['=', 'regb_used_o', ['bin', '1', '1']], ['=', 'regc_used_o', ['bin', '1', '1']], ['=', 'regc_mux_o', 'REGC_RD']]], [[['bin', '6', '11100_0']], ['list', ['=', 'alu_operator_o', 'ALU_PCKLO'], ['=', 'regb_used_o', ['bin', '1', '1']], ['=', 'regc_used_o', ['bin', '1', '1']], ['=', 'regc_mux_o', 'REGC_RD']]], [[['bin', '6', '01111_0']], ['list', ['=', 'alu_operator_o', 'ALU_EXTS']]], [[['bin', '6', '10010_0']], ['list', ['=', 'alu_operator_o', 'ALU_EXT']]], [[['bin', '6', '10110_0']], ['list', ['=', 'alu_operator_o', 'ALU_INS'], ['=', 'regc_used_o', ['bin', '1', '1']], ['=', 'regc_mux_o', 'REGC_RD'], ['=', 'alu_op_b_mux_sel_o', 'OP_B_REGC_OR_FWD']]], [[['bin', '6', '10000_0']], ['list', ['=', 'alu_en_o', ['bin', '1', '0']], ['=', 'mult_dot_en_o', ['bin', '1', '1']], ['=', 'mult_dot_signed_o', ['bin', '2', '00']], ['if', 'SHARED_DSP_MULT', ['list', ['=', 'mult_int_en_o', ['bin', '1', '0']], ['=', 'mult_dot_en_o', ['bin', '1', '0']], ['=', 'apu_en', ['bin', '1', '1']], ['=', 'apu_type_o', 'APUTYPE_DSP_MULT'], ['=', 'apu_flags_src_o', 'APU_FLAGS_DSP_MULT'], ['=', 'apu_op_o', 'mult_operator_o'], ['=', 'apu_lat_o', ['question', 'PIPE_REG_DSP_MULT', ['hex', '2', '2'], ['hex', '2', '1']]]]]]], [[['bin', '6', '10001_0']], ['list', ['=', 'alu_en_o', ['bin', '1', '0']], ['=', 'mult_dot_en_o', ['bin', '1', '1']], ['=', 'mult_dot_signed_o', ['bin', '2', '01']], ['if', 'SHARED_DSP_MULT', ['list', ['=', 'mult_int_en_o', ['bin', '1', '0']], ['=', 'mult_dot_en_o', ['bin', '1', '0']], ['=', 'apu_en', ['bin', '1', '1']], ['=', 'apu_type_o', 'APUTYPE_DSP_MULT'], ['=', 'apu_flags_src_o', 'APU_FLAGS_DSP_MULT'], ['=', 'apu_op_o', 'mult_operator_o'], ['=', 'apu_lat_o', ['question', 'PIPE_REG_DSP_MULT', ['hex', '2', '2'], ['hex', '2', '1']]]]]]], [[['bin', '6', '10011_0']], ['list', ['=', 'alu_en_o', ['bin', '1', '0']], ['=', 'mult_dot_en_o', ['bin', '1', '1']], ['=', 'mult_dot_signed_o', ['bin', '2', '11']], ['if', 'SHARED_DSP_MULT', ['list', ['=', 'mult_int_en_o', ['bin', '1', '0']], ['=', 'mult_dot_en_o', ['bin', '1', '0']], ['=', 'apu_en', ['bin', '1', '1']], ['=', 'apu_type_o', 'APUTYPE_DSP_MULT'], ['=', 'apu_flags_src_o', 'APU_FLAGS_DSP_MULT'], ['=', 'apu_op_o', 'mult_operator_o'], ['=', 'apu_lat_o', ['question', 'PIPE_REG_DSP_MULT', ['hex', '2', '2'], ['hex', '2', '1']]]]]]], [[['bin', '6', '10100_0']], ['list', ['=', 'alu_en_o', ['bin', '1', '0']], ['=', 'mult_dot_en_o', ['bin', '1', '1']], ['=', 'mult_dot_signed_o', ['bin', '2', '00']], ['=', 'regc_used_o', ['bin', '1', '1']], ['=', 'regc_mux_o', 'REGC_RD'], ['if', 'SHARED_DSP_MULT', ['list', ['=', 'mult_int_en_o', ['bin', '1', '0']], ['=', 'mult_dot_en_o', ['bin', '1', '0']], ['=', 'apu_en', ['bin', '1', '1']], ['=', 'apu_type_o', 'APUTYPE_DSP_MULT'], ['=', 'apu_flags_src_o', 'APU_FLAGS_DSP_MULT'], ['=', 'apu_op_o', 'mult_operator_o'], ['=', 'apu_lat_o', ['question', 'PIPE_REG_DSP_MULT', ['hex', '2', '2'], ['hex', '2', '1']]]]]]], [[['bin', '6', '10101_0']], ['list', ['=', 'alu_en_o', ['bin', '1', '0']], ['=', 'mult_dot_en_o', ['bin', '1', '1']], ['=', 'mult_dot_signed_o', ['bin', '2', '01']], ['=', 'regc_used_o', ['bin', '1', '1']], ['=', 'regc_mux_o', 'REGC_RD'], ['if', 'SHARED_DSP_MULT', ['list', ['=', 'mult_int_en_o', ['bin', '1', '0']], ['=', 'mult_dot_en_o', ['bin', '1', '0']], ['=', 'apu_en', ['bin', '1', '1']], ['=', 'apu_type_o', 'APUTYPE_DSP_MULT'], ['=', 'apu_flags_src_o', 'APU_FLAGS_DSP_MULT'], ['=', 'apu_op_o', 'mult_operator_o'], ['=', 'apu_lat_o', ['question', 'PIPE_REG_DSP_MULT', ['hex', '2', '2'], ['hex', '2', '1']]]]]]], [[['bin', '6', '10111_0']], ['list', ['=', 'alu_en_o', ['bin', '1', '0']], ['=', 'mult_dot_en_o', ['bin', '1', '1']], ['=', 'mult_dot_signed_o', ['bin', '2', '11']], ['=', 'regc_used_o', ['bin', '1', '1']], ['=', 'regc_mux_o', 'REGC_RD'], ['if', 'SHARED_DSP_MULT', ['list', ['=', 'mult_int_en_o', ['bin', '1', '0']], ['=', 'mult_dot_en_o', ['bin', '1', '0']], ['=', 'apu_en', ['bin', '1', '1']], ['=', 'apu_type_o', 'APUTYPE_DSP_MULT'], ['=', 'apu_flags_src_o', 'APU_FLAGS_DSP_MULT'], ['=', 'apu_op_o', 'mult_operator_o'], ['=', 'apu_lat_o', ['question', 'PIPE_REG_DSP_MULT', ['hex', '2', '2'], ['hex', '2', '1']]]]]]], [[['bin', '6', '00000_1']], ['list', ['=', 'alu_operator_o', 'ALU_EQ'], ['=', 'imm_b_mux_sel_o', 'IMMB_VS']]], [[['bin', '6', '00001_1']], ['list', ['=', 'alu_operator_o', 'ALU_NE'], ['=', 'imm_b_mux_sel_o', 'IMMB_VS']]], [[['bin', '6', '00010_1']], ['list', ['=', 'alu_operator_o', 'ALU_GTS'], ['=', 'imm_b_mux_sel_o', 'IMMB_VS']]], [[['bin', '6', '00011_1']], ['list', ['=', 'alu_operator_o', 'ALU_GES'], ['=', 'imm_b_mux_sel_o', 'IMMB_VS']]], [[['bin', '6', '00100_1']], ['list', ['=', 'alu_operator_o', 'ALU_LTS'], ['=', 'imm_b_mux_sel_o', 'IMMB_VS']]], [[['bin', '6', '00101_1']], ['list', ['=', 'alu_operator_o', 'ALU_LES'], ['=', 'imm_b_mux_sel_o', 'IMMB_VS']]], [[['bin', '6', '00110_1']], ['list', ['=', 'alu_operator_o', 'ALU_GTU'], ['=', 'imm_b_mux_sel_o', 'IMMB_VU']]], [[['bin', '6', '00111_1']], ['list', ['=', 'alu_operator_o', 'ALU_GEU'], ['=', 'imm_b_mux_sel_o', 'IMMB_VU']]], [[['bin', '6', '01000_1']], ['list', ['=', 'alu_operator_o', 'ALU_LTU'], ['=', 'imm_b_mux_sel_o', 'IMMB_VU']]], [[['bin', '6', '01001_1']], ['list', ['=', 'alu_operator_o', 'ALU_LEU'], ['=', 'imm_b_mux_sel_o', 'IMMB_VU']]], ['default', ['=', 'illegal_insn_o', ['bin', '1', '1']]]]]]], [['OPCODE_SYSTEM'], ['list', ['ifelse', ['==', ['subbus', 'instr_rdata_i', [14, 12]], ['bin', '3', '000']], ['list', ['case', ['subbus', 'instr_rdata_i', (31, 20)], [[[['hex', '12', '000']], ['list', ['=', 'ecall_insn_o', ['bin', '1', '1']]]], [[['hex', '12', '001']], ['list', ['=', 'ebrk_insn_o', ['bin', '1', '1']]]], [[['hex', '12', '302']], ['list', ['=', 'illegal_insn_o', ['question', 'PULP_SECURE', ['!=', 'current_priv_lvl_i', 'PRIV_LVL_M'], ['bin', '1', '0']]], ['=', 'mret_insn_o', ['~', 'illegal_insn_o']]]], [[['hex', '12', '002']], ['list', ['=', 'uret_insn_o', ['question', 'PULP_SECURE', ['bin', '1', '1'], ['bin', '1', '0']]]]], [[['hex', '12', '105']], ['list', ['=', 'pipe_flush_o', ['bin', '1', '1']]]], ['default', ['list', ['=', 'illegal_insn_o', ['bin', '1', '1']]]]]]], ['list', ['=', 'csr_access_o', ['bin', '1', '1']], ['=', 'regfile_alu_we', ['bin', '1', '1']], ['=', 'alu_op_b_mux_sel_o', 'OP_B_IMM'], ['=', 'imm_a_mux_sel_o', 'IMMA_Z'], ['=', 'imm_b_mux_sel_o', 'IMMB_I'], ['=', 'instr_multicycle_o', ['bin', '1', '1']], ['ifelse', ['subbit', 'instr_rdata_i', 14], ['list', ['=', 'alu_op_a_mux_sel_o', 'OP_A_IMM']], ['list', ['=', 'rega_used_o', ['bin', '1', '1']], ['=', 'alu_op_a_mux_sel_o', 'OP_A_REGA_OR_FWD']]], ['case', ['subbus', 'instr_rdata_i', (13, 12)], [[[['bin', '2', '01']], ['=', 'csr_op', 'CSR_OP_WRITE']], [[['bin', '2', '10']], ['=', 'csr_op', 'CSR_OP_SET']], [[['bin', '2', '11']], ['=', 'csr_op', 'CSR_OP_CLEAR']], ['default', ['=', 'csr_illegal', ['bin', '1', '1']]]]], ['if', ['>', ['subbus', 'instr_rdata_i', [29, 28]], 'current_priv_lvl_i'], ['list', ['=', 'csr_illegal', ['bin', '1', '1']]]], ['if', ['~', 'csr_illegal'], ['if', ['||', ['==', ['subbus', 'instr_rdata_i', [31, 20]], ['hex', '12', '300']], ['==', ['subbus', 'instr_rdata_i', [31, 20]], ['hex', '12', '000']]], ['=', 'csr_status_o', ['bin', '1', '1']]]], ['=', 'illegal_insn_o', 'csr_illegal']]]]], [['OPCODE_HWLOOP'], ['list', ['=', 'hwloop_target_mux_sel_o', ['bin', '1', '0']], ['case', ['subbus', 'instr_rdata_i', (14, 12)], [[[['bin', '3', '000']], ['list', ['=', ['subbit', 'hwloop_we', 0], ['bin', '1', '1']], ['=', 'hwloop_start_mux_sel_o', ['bin', '1', '0']]]], [[['bin', '3', '001']], ['list', ['=', ['subbit', 'hwloop_we', 1], ['bin', '1', '1']]]], [[['bin', '3', '010']], ['list', ['=', ['subbit', 'hwloop_we', 2], ['bin', '1', '1']], ['=', 'hwloop_cnt_mux_sel_o', ['bin', '1', '1']], ['=', 'rega_used_o', ['bin', '1', '1']]]], [[['bin', '3', '011']], ['list', ['=', ['subbit', 'hwloop_we', 2], ['bin', '1', '1']], ['=', 'hwloop_cnt_mux_sel_o', ['bin', '1', '0']]]], [[['bin', '3', '100']], ['list', ['=', 'hwloop_we', ['bin', '3', '111']], ['=', 'hwloop_start_mux_sel_o', ['bin', '1', '1']], ['=', 'hwloop_cnt_mux_sel_o', ['bin', '1', '1']], ['=', 'rega_used_o', ['bin', '1', '1']]]], [[['bin', '3', '101']], ['list', ['=', 'hwloop_we', ['bin', '3', '111']], ['=', 'hwloop_target_mux_sel_o', ['bin', '1', '1']], ['=', 'hwloop_start_mux_sel_o', ['bin', '1', '1']], ['=', 'hwloop_cnt_mux_sel_o', ['bin', '1', '0']]]], ['default', ['list', ['=', 'illegal_insn_o', ['bin', '1', '1']]]]]]]], ['default', ['list', ['=', 'illegal_insn_o', ['bin', '1', '1']]]]]], ['if', 'illegal_c_insn_i', ['list', ['=', 'illegal_insn_o', ['bin', '1', '1']]]], ['ifelse', 'data_misaligned_i', ['list', ['=', 'alu_op_a_mux_sel_o', 'OP_A_REGA_OR_FWD'], ['=', 'alu_op_b_mux_sel_o', 'OP_B_IMM'], ['=', 'imm_b_mux_sel_o', 'IMMB_PCINCR'], ['=', 'regfile_alu_we', ['bin', '1', '0']], ['=', 'prepost_useincr_o', ['bin', '1', '1']], ['=', 'scalar_replication_o', ['bin', '1', '0']]], ['if', 'mult_multicycle_i', ['list', ['=', 'alu_op_c_mux_sel_o', 'OP_C_REGC_OR_FWD']]]]], 'always']
endmodule
