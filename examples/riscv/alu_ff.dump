module alu_ff
    parameter LEN 32
    net index_lut ('wire', ('packed', (['-', 'LEN', 1], 0), (['-', 'NUM_LEVELS', 1], 0)))
    net in_i ('input', (['-', 'LEN', 1], 0))
    net sel_nodes ('wire', (['-', ['**', 2, 'NUM_LEVELS'], 1], 0))
    net no_ones_o ('output', 0)
    net index_nodes ('wire', ('packed', (['-', ['**', 2, 'NUM_LEVELS'], 1], 0), (['-', 'NUM_LEVELS', 1], 0)))
    net first_one_o ('output', (['-', ['functioncall', '$clog2', ['LEN']], 1], 0))
    assign ('first_one_o', ['subbit', 'index_nodes', 0], '', '')
    assign ('no_ones_o', ['~', ['subbit', 'sel_nodes', 0]], '', '')
    generate [['genvar', 'j'], ['for', ['list', ['=', 'j', 0]], ['<', 'j', 'LEN'], ['list', ['=', 'j', ['+', 'j', 1]]], ['list', ['assigns', ['=', ['subbit', 'index_lut', 'j'], ['functioncall', '$unsigned', ['j']]]]]]]
    generate [['genvar', 'k'], ['genvar', 'l'], ['genvar', 'level'], ['for', ['list', ['=', 'level', 0]], ['<', 'level', 'NUM_LEVELS'], ['list', ['=', 'level', ['+', 'level', 1]]], ['list', ['if', ['<', 'level', ['-', 'NUM_LEVELS', 1]], ['list', ['for', ['list', ['=', 'l', 0]], ['<', 'l', ['**', 2, 'level']], ['list', ['=', 'l', ['+', 'l', 1]]], ['list', ['assigns', ['=', ['subbit', 'sel_nodes', ['+', ['-', ['**', 2, 'level'], 1], 'l']], ['|', ['subbit', 'sel_nodes', ['+', ['-', ['**', 2, ['+', 'level', 1]], 1], ['*', 'l', 2]]], ['subbit', 'sel_nodes', ['+', ['+', ['-', ['**', 2, ['+', 'level', 1]], 1], ['*', 'l', 2]], 1]]]]], ['assigns', ['=', ['subbit', 'index_nodes', ['+', ['-', ['**', 2, 'level'], 1], 'l']], ['question', ['subbit', 'sel_nodes', ['+', ['-', ['**', 2, ['+', 'level', 1]], 1], ['*', 'l', 2]]], ['subbit', 'index_nodes', ['+', ['-', ['**', 2, ['+', 'level', 1]], 1], ['*', 'l', 2]]], ['subbit', 'index_nodes', ['+', ['+', ['-', ['**', 2, ['+', 'level', 1]], 1], ['*', 'l', 2]], 1]]]]]]]]], ['if', ['-', ['==', 'level', 'NUM_LEVELS'], 1], ['list', ['for', ['list', ['=', 'k', 0]], ['<', 'k', ['**', 2, 'level']], ['list', ['=', 'k', ['+', 'k', 1]]], ['list', ['if', ['<', ['*', 'k', 2], ['-', 'LEN', 1]], ['list', ['assigns', ['=', ['subbit', 'sel_nodes', ['+', ['-', ['**', 2, 'level'], 1], 'k']], ['|', ['subbit', 'in_i', ['*', 'k', 2]], ['subbit', 'in_i', ['+', ['*', 'k', 2], 1]]]]], ['assigns', ['=', ['subbit', 'index_nodes', ['+', ['-', ['**', 2, 'level'], 1], 'k']], ['question', ['subbit', 'in_i', ['*', 'k', 2]], ['subbit', 'index_lut', ['*', 'k', 2]], ['subbit', 'index_lut', ['+', ['*', 'k', 2], 1]]]]]]], ['if', ['-', ['==', ['*', 'k', 2], 'LEN'], 1], ['list', ['assigns', ['=', ['subbit', 'sel_nodes', ['+', ['-', ['**', 2, 'level'], 1], 'k']], ['subbit', 'in_i', ['*', 'k', 2]]]], ['assigns', ['=', ['subbit', 'index_nodes', ['+', ['-', ['**', 2, 'level'], 1], 'k']], ['subbit', 'index_lut', ['*', 'k', 2]]]]]], ['if', ['>', ['*', 'k', 2], ['-', 'LEN', 1]], ['list', ['assigns', ['=', ['subbit', 'sel_nodes', ['+', ['-', ['**', 2, 'level'], 1], 'k']], ['bin', '1', '0']]], ['assigns', ['=', ['subbit', 'index_nodes', ['+', ['-', ['**', 2, 'level'], 1], 'k']], ['dig', 32, '0']]]]]]]]]]]]
endmodule
