module: tb tb
net:   tb.apu_master_flags_o [15] = 000000000000000     // apu_master_flags_o
net:   tb.apu_master_op_o [6] = 000000     // apu_master_op_o
net:   tb.apu_master_operands_o [96] = zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz000000000     // apu_master_operands_o
net:   tb.apu_master_ready_o [1] = 1     // apu_master_ready_o
net:   tb.apu_master_req_o [1] = 0     // apu_master_req_o
net:   tb.apu_master_type_o [2] = 00     // apu_master_type_o
net:   tb.clk [1] = 1     // clk
net:   tb.sec_lvl_o [1] = 1     // sec_lvl_o
net:   tb.irq_id_o [5] = 00000     // irq_id_o
net:   tb.irq_ack_o [1] = 0     // irq_ack_o
net:   tb.instr_req_o [1] = 0     // instr_req_o
net:   tb.instr_addr_o [32] = 00000000000000000000000000000100     // instr_addr_o
net:   tb.debug_rvalid_o [1] = 0     // debug_rvalid_o
net:   tb.debug_rdata_o [32] = 00000000000000000000000000000000     // debug_rdata_o
net:   tb.debug_halted_o [1] = 0     // debug_halted_o
net:   tb.debug_gnt_o [1] = 0     // debug_gnt_o
net:   tb.data_we_o [1] = 0     // data_we_o
net:   tb.data_wdata_o [32] = 00000000000000000000000000000000     // data_wdata_o
net:   tb.data_req_o [1] = 0     // data_req_o
net:   tb.data_be_o [4] = 1111     // data_be_o
net:   tb.data_addr_o [32] = 00000000000000000000000000000000     // data_addr_o
net:   tb.core_busy_o [1] = 0     // core_busy_o
reg:   apu_master_flags_i [5] = 00000 // apu_master_flags_i
reg:   apu_master_gnt_i [1] = 0 // apu_master_gnt_i
reg:   apu_master_result_i [32] = 00000000000000000000000000000000 // apu_master_result_i
reg:   apu_master_valid_i [1] = 0 // apu_master_valid_i
reg:   boot_addr_i [32] = 00000000000000000000000000000000 // boot_addr_i
reg:   clk_i [1] = 1 // clk_i
reg:   clock_en_i [1] = 0 // clock_en_i
reg:   cluster_id_i [6] = 000000 // cluster_id_i
reg:   core_id_i [4] = 0000 // core_id_i
reg:   corrects [32] = 00000000000000000000000000000000 // corrects
reg:   cycles [32] = 00000000000000000000000000011110 // cycles
reg:   data_err_i [1] = 0 // data_err_i
reg:   data_gnt_i [1] = 0 // data_gnt_i
reg:   data_rdata_i [32] = 00000000000000000000000000000000 // data_rdata_i
reg:   data_rvalid_i [1] = 0 // data_rvalid_i
reg:   debug_addr_i [15] = 000000000000000 // debug_addr_i
reg:   debug_halt_i [1] = 0 // debug_halt_i
reg:   debug_req_i [1] = 0 // debug_req_i
reg:   debug_resume_i [1] = 0 // debug_resume_i
reg:   debug_wdata_i [32] = 00000000000000000000000000000000 // debug_wdata_i
reg:   debug_we_i [1] = 0 // debug_we_i
reg:   errors [32] = 00000000000000000000000000000000 // errors
reg:   ext_perf_counters_i [2] = 00 // ext_perf_counters_i
reg:   fetch_enable_i [1] = 0 // fetch_enable_i
reg:   instr_gnt_i [1] = 0 // instr_gnt_i
reg:   instr_rdata_i [32] = 00000000000000000000000000000000 // instr_rdata_i
reg:   instr_rvalid_i [1] = 0 // instr_rvalid_i
reg:   irq_i [1] = 0 // irq_i
reg:   irq_id_i [5] = 00000 // irq_id_i
reg:   irq_sec_i [1] = 0 // irq_sec_i
reg:   marker [32] = 00000000000000000000000000000000 // marker
reg:   panics [32] = 00000000000000000000000000000000 // panics
reg:   rst_n [1] = 1 // rst_n
reg:   test_en_i [1] = 0 // test_en_i
reg:   wrongs [32] = 00000000000000000000000000000000 // wrongs
son:   tb.dut
module: riscv_core tb.dut
net:   tb.dut.apu_master_flags_i [5] = 00000     // apu_master_flags_i
net:   tb.dut.apu_master_flags_o [15] = 000000000000000     // apu_master_flags_o
net:   tb.dut.apu_master_gnt_i [1] = 0     // apu_master_gnt_i
net:   tb.dut.apu_master_op_o [6] = 000000     // apu_master_op_o
net:   tb.dut.apu_master_operands_o [96] = zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz000000000     // apu_master_operands_o
net:   tb.dut.apu_master_ready_o [1] = 1     // apu_master_ready_o
net:   tb.dut.apu_master_req_o [1] = 0     // apu_master_req_o
net:   tb.dut.apu_master_result_i [32] = 00000000000000000000000000000000     // apu_master_result_i
net:   tb.dut.apu_master_type_o [2] = 00     // apu_master_type_o
net:   tb.dut.apu_master_valid_i [1] = 0     // apu_master_valid_i
net:   tb.dut.apu_read_dep [1] = 0     // apu_read_dep
net:   tb.dut.apu_read_regs [18] = 000000000000000000     // apu_read_regs
net:   tb.dut.apu_read_regs_valid [3] = 000     // apu_read_regs_valid
net:   tb.dut.apu_ready_wb [1] = 1     // apu_ready_wb
net:   tb.dut.apu_write_dep [1] = 0     // apu_write_dep
net:   tb.dut.apu_write_regs [12] = 000000000000     // apu_write_regs
net:   tb.dut.apu_write_regs_valid [2] = 00     // apu_write_regs_valid
net:   tb.dut.boot_addr_i [32] = 00000000000000000000000000000000     // boot_addr_i
net:   tb.dut.clk_i [1] = 1     // clk_i
net:   tb.dut.clock_en [1] = 0     // clock_en
net:   tb.dut.clock_en_i [1] = 0     // clock_en_i
net:   tb.dut.cluster_id_i [6] = 000000     // cluster_id_i
net:   tb.dut.core_id_i [4] = 0000     // core_id_i
net:   tb.dut.data_err_i [1] = 0     // data_err_i
net:   tb.dut.data_gnt_i [1] = 0     // data_gnt_i
net:   tb.dut.data_rdata_i [32] = 00000000000000000000000000000000     // data_rdata_i
net:   tb.dut.data_rvalid_i [1] = 0     // data_rvalid_i
net:   tb.dut.dbg_busy [1] = 0     // dbg_busy
net:   tb.dut.debug_addr_i [15] = 000000000000000     // debug_addr_i
net:   tb.dut.debug_halt_i [1] = 0     // debug_halt_i
net:   tb.dut.debug_req_i [1] = 0     // debug_req_i
net:   tb.dut.debug_resume_i [1] = 0     // debug_resume_i
net:   tb.dut.debug_wdata_i [32] = 00000000000000000000000000000000     // debug_wdata_i
net:   tb.dut.debug_we_i [1] = 0     // debug_we_i
net:   tb.dut.ext_perf_counters_i [2] = 00     // ext_perf_counters_i
net:   tb.dut.fetch_enable_i [1] = 0     // fetch_enable_i
net:   tb.dut.fflags [5] = 00000     // fflags
net:   tb.dut.fflags_we [1] = 0     // fflags_we
net:   tb.dut.fprec_csr [5] = 00000     // fprec_csr
net:   tb.dut.frm_csr [3] = 000     // frm_csr
net:   tb.dut.instr_gnt_i [1] = 0     // instr_gnt_i
net:   tb.dut.instr_rdata_i [32] = 00000000000000000000000000000000     // instr_rdata_i
net:   tb.dut.instr_rvalid_i [1] = 0     // instr_rvalid_i
net:   tb.dut.irq_i [1] = 0     // irq_i
net:   tb.dut.irq_id_i [5] = 00000     // irq_id_i
net:   tb.dut.irq_sec_i [1] = 0     // irq_sec_i
net:   tb.dut.is_interrupt [1] = 0     // is_interrupt
net:   tb.dut.perf_apu_cont [1] = 0     // perf_apu_cont
net:   tb.dut.perf_apu_type [1] = 0     // perf_apu_type
net:   tb.dut.perf_apu_wb [1] = 0     // perf_apu_wb
net:   tb.dut.rst_ni [1] = 1     // rst_ni
net:   tb.dut.sleeping [1] = 1     // sleeping
net:   tb.dut.test_en_i [1] = 0     // test_en_i
net:   tb.dut.wb_valid [1] = 1     // wb_valid
net:   tb.dut.utvec [24] = xxxxxxxxxxxxxxxxxxxxxxxx     // utvec
net:   tb.dut.useincr_addr_ex [1] = 0     // useincr_addr_ex
net:   tb.dut.u_irq_enable [1] = 0     // u_irq_enable
net:   tb.dut.trap_addr_mux [1] = 0     // trap_addr_mux
net:   tb.dut.sec_lvl_o [1] = 1     // sec_lvl_o
net:   tb.dut.regfile_we_wb [1] = 0     // regfile_we_wb
net:   tb.dut.regfile_we_ex [1] = 0     // regfile_we_ex
net:   tb.dut.regfile_wdata [32] = 00000000000000000000000000000000     // regfile_wdata
net:   tb.dut.regfile_waddr_fw_wb_o [6] = 000000     // regfile_waddr_fw_wb_o
net:   tb.dut.regfile_waddr_ex [6] = 000000     // regfile_waddr_ex
net:   tb.dut.regfile_alu_we_fw [1] = 0     // regfile_alu_we_fw
net:   tb.dut.regfile_alu_we_ex [1] = 0     // regfile_alu_we_ex
net:   tb.dut.regfile_alu_wdata_fw [32] = 00000000000000000000000000000000     // regfile_alu_wdata_fw
net:   tb.dut.regfile_alu_waddr_fw [6] = 000000     // regfile_alu_waddr_fw
net:   tb.dut.regfile_alu_waddr_ex [6] = 000000     // regfile_alu_waddr_ex
net:   tb.dut.perf_ld_stall [1] = 0     // perf_ld_stall
net:   tb.dut.perf_jump [1] = 0     // perf_jump
net:   tb.dut.perf_jr_stall [1] = 0     // perf_jr_stall
net:   tb.dut.perf_imiss [1] = 1     // perf_imiss
net:   tb.dut.perf_apu_dep [1] = 0     // perf_apu_dep
net:   tb.dut.pc_set [1] = 0     // pc_set
net:   tb.dut.pc_mux_id [3] = 000     // pc_mux_id
net:   tb.dut.pc_if [32] = 00000000000000000000000000000000     // pc_if
net:   tb.dut.pc_id [32] = 00000000000000000000000000000000     // pc_id
net:   tb.dut.pc_ex [32] = 00000000000000000000000000000000     // pc_ex
net:   tb.dut.mult_signed_mode_ex [2] = 00     // mult_signed_mode_ex
net:   tb.dut.mult_sel_subword_ex [1] = 0     // mult_sel_subword_ex
net:   tb.dut.mult_operator_ex [3] = 000     // mult_operator_ex
net:   tb.dut.mult_operand_c_ex [32] = 00000000000000000000000000000000     // mult_operand_c_ex
net:   tb.dut.mult_operand_b_ex [32] = 00000000000000000000000000000000     // mult_operand_b_ex
net:   tb.dut.mult_operand_a_ex [32] = 00000000000000000000000000000000     // mult_operand_a_ex
net:   tb.dut.mult_multicycle [1] = 0     // mult_multicycle
net:   tb.dut.mult_imm_ex [5] = 00000     // mult_imm_ex
net:   tb.dut.mult_en_ex [1] = 0     // mult_en_ex
net:   tb.dut.mult_dot_signed_ex [2] = 00     // mult_dot_signed_ex
net:   tb.dut.mult_dot_op_c_ex [32] = 00000000000000000000000000000000     // mult_dot_op_c_ex
net:   tb.dut.mult_dot_op_b_ex [32] = 00000000000000000000000000000000     // mult_dot_op_b_ex
net:   tb.dut.mult_dot_op_a_ex [32] = 00000000000000000000000000000000     // mult_dot_op_a_ex
net:   tb.dut.mtvec [24] = 000000000000000000000000     // mtvec
net:   tb.dut.m_irq_enable [1] = 0     // m_irq_enable
net:   tb.dut.lsu_store_err [1] = 0     // lsu_store_err
net:   tb.dut.lsu_ready_wb [1] = 1     // lsu_ready_wb
net:   tb.dut.lsu_ready_ex [1] = 1     // lsu_ready_ex
net:   tb.dut.lsu_rdata [32] = 00000000000000000000000000000000     // lsu_rdata
net:   tb.dut.lsu_load_err [1] = 0     // lsu_load_err
net:   tb.dut.lsu_busy [1] = 0     // lsu_busy
net:   tb.dut.jump_target_id [32] = 00000000000000000000000000000000     // jump_target_id
net:   tb.dut.jump_target_ex [32] = 00000000000000000000000000000000     // jump_target_ex
net:   tb.dut.is_hwlp_id [1] = 0     // is_hwlp_id
net:   tb.dut.is_decoding [1] = 0     // is_decoding
net:   tb.dut.is_compressed_id [1] = 0     // is_compressed_id
net:   tb.dut.irq_id_o [5] = 00000     // irq_id_o
net:   tb.dut.irq_ack_o [1] = 0     // irq_ack_o
net:   tb.dut.instr_valid_id [1] = 0     // instr_valid_id
net:   tb.dut.instr_req_o [1] = 0     // instr_req_o
net:   tb.dut.instr_req_int [1] = 0     // instr_req_int
net:   tb.dut.instr_rdata_id [32] = 00000000000000000000000000000000     // instr_rdata_id
net:   tb.dut.instr_addr_o [32] = 00000000000000000000000000000100     // instr_addr_o
net:   tb.dut.imm_vec_ext_ex [2] = 00     // imm_vec_ext_ex
net:   tb.dut.illegal_c_insn_id [1] = 0     // illegal_c_insn_id
net:   tb.dut.if_busy [1] = 0     // if_busy
net:   tb.dut.id_valid [1] = 1     // id_valid
net:   tb.dut.id_ready [1] = 1     // id_ready
net:   tb.dut.hwlp_start [64] = 0000000000000000000000000000000000000000000000000000000000000000     // hwlp_start
net:   tb.dut.hwlp_end [64] = 0000000000000000000000000000000000000000000000000000000000000000     // hwlp_end
net:   tb.dut.hwlp_dec_cnt_id [2] = 00     // hwlp_dec_cnt_id
net:   tb.dut.hwlp_cnt [64] = 0000000000000000000000000000000000000000000000000000000000000000     // hwlp_cnt
net:   tb.dut.halt_if [1] = 0     // halt_if
net:   tb.dut.fpu_op_ex [4] = 0000     // fpu_op_ex
net:   tb.dut.fflags_csr [5] = 00000     // fflags_csr
net:   tb.dut.exc_pc_mux_id [2] = 11     // exc_pc_mux_id
net:   tb.dut.exc_cause [6] = 000000     // exc_cause
net:   tb.dut.ex_valid [1] = 0     // ex_valid
net:   tb.dut.ex_ready [1] = 1     // ex_ready
net:   tb.dut.epc [32] = 00000000000000000000000000000000     // epc
net:   tb.dut.debug_rvalid_o [1] = 0     // debug_rvalid_o
net:   tb.dut.debug_rdata_o [32] = 00000000000000000000000000000000     // debug_rdata_o
net:   tb.dut.debug_halted_o [1] = 0     // debug_halted_o
net:   tb.dut.debug_gnt_o [1] = 0     // debug_gnt_o
net:   tb.dut.dbg_trap [1] = 0     // dbg_trap
net:   tb.dut.dbg_stall [1] = 0     // dbg_stall
net:   tb.dut.dbg_settings [6] = 000000     // dbg_settings
net:   tb.dut.dbg_req [1] = 0     // dbg_req
net:   tb.dut.dbg_reg_wreq [1] = 0     // dbg_reg_wreq
net:   tb.dut.dbg_reg_wdata [32] = 00000000000000000000000000000000     // dbg_reg_wdata
net:   tb.dut.dbg_reg_waddr [6] = 000000     // dbg_reg_waddr
net:   tb.dut.dbg_reg_rreq [1] = 0     // dbg_reg_rreq
net:   tb.dut.dbg_reg_rdata [32] = 00000000000000000000000000000000     // dbg_reg_rdata
net:   tb.dut.dbg_reg_raddr [6] = 000000     // dbg_reg_raddr
net:   tb.dut.dbg_jump_req [1] = 0     // dbg_jump_req
net:   tb.dut.dbg_jump_addr [32] = 00000000000000000000000000000000     // dbg_jump_addr
net:   tb.dut.dbg_csr_we [1] = 0     // dbg_csr_we
net:   tb.dut.dbg_csr_wdata [32] = 00000000000000000000000000000000     // dbg_csr_wdata
net:   tb.dut.dbg_csr_req [1] = 0     // dbg_csr_req
net:   tb.dut.dbg_csr_addr [12] = 000000000000     // dbg_csr_addr
net:   tb.dut.dbg_ack [1] = 0     // dbg_ack
net:   tb.dut.data_we_o [1] = 0     // data_we_o
net:   tb.dut.data_we_ex [1] = 0     // data_we_ex
net:   tb.dut.data_wdata_o [32] = 00000000000000000000000000000000     // data_wdata_o
net:   tb.dut.data_type_ex [2] = 00     // data_type_ex
net:   tb.dut.data_sign_ext_ex [1] = 0     // data_sign_ext_ex
net:   tb.dut.data_req_o [1] = 0     // data_req_o
net:   tb.dut.data_req_ex [1] = 0     // data_req_ex
net:   tb.dut.data_reg_offset_ex [2] = 00     // data_reg_offset_ex
net:   tb.dut.data_misaligned_ex [1] = 0     // data_misaligned_ex
net:   tb.dut.data_misaligned [1] = 0     // data_misaligned
net:   tb.dut.data_load_event_ex [1] = 0     // data_load_event_ex
net:   tb.dut.data_be_o [4] = 1111     // data_be_o
net:   tb.dut.data_addr_o [32] = 00000000000000000000000000000000     // data_addr_o
net:   tb.dut.current_priv_lvl [2] = 11     // current_priv_lvl
net:   tb.dut.ctrl_busy [1] = 0     // ctrl_busy
net:   tb.dut.csr_wdata [32] = 00000000000000000000000000000000     // csr_wdata
net:   tb.dut.csr_save_if [1] = 0     // csr_save_if
net:   tb.dut.csr_save_id [1] = 0     // csr_save_id
net:   tb.dut.csr_save_cause [1] = 0     // csr_save_cause
net:   tb.dut.csr_restore_uret_id [1] = 0     // csr_restore_uret_id
net:   tb.dut.csr_restore_mret_id [1] = 0     // csr_restore_mret_id
net:   tb.dut.csr_rdata [32] = 00000000000000000000000000000000     // csr_rdata
net:   tb.dut.csr_op_ex [2] = 00     // csr_op_ex
net:   tb.dut.csr_op [2] = 00     // csr_op
net:   tb.dut.csr_irq_sec [1] = 0     // csr_irq_sec
net:   tb.dut.csr_hwlp_we [3] = 000     // csr_hwlp_we
net:   tb.dut.csr_hwlp_regid [1] = 0     // csr_hwlp_regid
net:   tb.dut.csr_hwlp_data [32] = 00000000000000000000000000000000     // csr_hwlp_data
net:   tb.dut.csr_cause [6] = 000000     // csr_cause
net:   tb.dut.csr_addr_int [12] = 000000000000     // csr_addr_int
net:   tb.dut.csr_addr [12] = 000000000000     // csr_addr
net:   tb.dut.csr_access_ex [1] = 0     // csr_access_ex
net:   tb.dut.csr_access [1] = 0     // csr_access
net:   tb.dut.core_ctrl_firstfetch [1] = 0     // core_ctrl_firstfetch
net:   tb.dut.core_busy_o [1] = 0     // core_busy_o
net:   tb.dut.core_busy_int [1] = 0     // core_busy_int
net:   tb.dut.clk [1] = 0     // clk
net:   tb.dut.clear_instr_valid [1] = 1     // clear_instr_valid
net:   tb.dut.branch_in_ex [1] = 0     // branch_in_ex
net:   tb.dut.branch_decision [1] = 0     // branch_decision
net:   tb.dut.bmask_b_ex [5] = 00000     // bmask_b_ex
net:   tb.dut.bmask_a_ex [5] = 00000     // bmask_a_ex
net:   tb.dut.apu_waddr_ex [6] = 000000     // apu_waddr_ex
net:   tb.dut.apu_type_ex [2] = 00     // apu_type_ex
net:   tb.dut.apu_operands_ex [96] = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx000000000     // apu_operands_ex
net:   tb.dut.apu_op_ex [6] = 000000     // apu_op_ex
net:   tb.dut.apu_lat_ex [2] = 00     // apu_lat_ex
net:   tb.dut.apu_flags_ex [15] = 000000000000000     // apu_flags_ex
net:   tb.dut.apu_en_ex [1] = 0     // apu_en_ex
net:   tb.dut.apu_busy [1] = 0     // apu_busy
net:   tb.dut.alu_vec_mode_ex [2] = 00     // alu_vec_mode_ex
net:   tb.dut.alu_operator_ex [7] = 0000011     // alu_operator_ex
net:   tb.dut.alu_operand_c_ex [32] = 00000000000000000000000000000000     // alu_operand_c_ex
net:   tb.dut.alu_operand_b_ex [32] = 00000000000000000000000000000000     // alu_operand_b_ex
net:   tb.dut.alu_operand_a_ex [32] = 00000000000000000000000000000000     // alu_operand_a_ex
net:   tb.dut.alu_en_ex [1] = 0     // alu_en_ex
reg:   core_busy_q [1] = 0 // core_busy_q
son:   tb.dut.core_clock_gate_i
son:   tb.dut.cs_registers_i
son:   tb.dut.debug_unit_i
son:   tb.dut.ex_stage_i
son:   tb.dut.id_stage_i
son:   tb.dut.if_stage_i
son:   tb.dut.load_store_unit_i
module: cluster_clock_gating tb.dut.core_clock_gate_i
net:   tb.dut.core_clock_gate_i.clk_i [1] = 1     // clk_i
net:   tb.dut.core_clock_gate_i.clk_o [1] = 0     // clk_o
net:   tb.dut.core_clock_gate_i.en_i [1] = 0     // en_i
net:   tb.dut.core_clock_gate_i.test_en_i [1] = 0     // test_en_i
reg:   clk_en [1] = 0 // clk_en
module: riscv_cs_registers tb.dut.cs_registers_i
net:   tb.dut.cs_registers_i.apu_contention_i [1] = 0     // apu_contention_i
net:   tb.dut.cs_registers_i.apu_typeconflict_i [1] = 0     // apu_typeconflict_i
net:   tb.dut.cs_registers_i.apu_wb_i [1] = 0     // apu_wb_i
net:   tb.dut.cs_registers_i.boot_addr_i [24] = 000000000000000000000000     // boot_addr_i
net:   tb.dut.cs_registers_i.clk [1] = 0     // clk
net:   tb.dut.cs_registers_i.cluster_id_i [6] = 000000     // cluster_id_i
net:   tb.dut.cs_registers_i.core_id_i [4] = 0000     // core_id_i
net:   tb.dut.cs_registers_i.csr_access_i [1] = 0     // csr_access_i
net:   tb.dut.cs_registers_i.csr_addr_i [12] = 000000000000     // csr_addr_i
net:   tb.dut.cs_registers_i.csr_op_i [2] = 00     // csr_op_i
net:   tb.dut.cs_registers_i.csr_wdata_i [32] = 00000000000000000000000000000000     // csr_wdata_i
net:   tb.dut.cs_registers_i.ext_counters_i [2] = 00     // ext_counters_i
net:   tb.dut.cs_registers_i.fflags_we_i [1] = 0     // fflags_we_i
net:   tb.dut.cs_registers_i.fprec_o [5] = 00000     // fprec_o
net:   tb.dut.cs_registers_i.frm_o [3] = 000     // frm_o
net:   tb.dut.cs_registers_i.hwlp_data_o [32] = 00000000000000000000000000000000     // hwlp_data_o
net:   tb.dut.cs_registers_i.m_irq_enable_o [1] = 0     // m_irq_enable_o
net:   tb.dut.cs_registers_i.mem_load_i [1] = 0     // mem_load_i
net:   tb.dut.cs_registers_i.mem_store_i [1] = 0     // mem_store_i
net:   tb.dut.cs_registers_i.mtvec_o [24] = 000000000000000000000000     // mtvec_o
net:   tb.dut.cs_registers_i.mtvec_q [24] = 000000000000000000000000     // mtvec_q
net:   tb.dut.cs_registers_i.priv_lvl_o [2] = 11     // priv_lvl_o
net:   tb.dut.cs_registers_i.rst_n [1] = 1     // rst_n
net:   tb.dut.cs_registers_i.u_irq_enable_o [1] = 0     // u_irq_enable_o
net:   tb.dut.cs_registers_i.utvec_o [24] = xxxxxxxxxxxxxxxxxxxxxxxx     // utvec_o
net:   tb.dut.cs_registers_i.sec_lvl_o [1] = 1     // sec_lvl_o
net:   tb.dut.cs_registers_i.pc_set_i [1] = 0     // pc_set_i
net:   tb.dut.cs_registers_i.pc_if_i [32] = 00000000000000000000000000000000     // pc_if_i
net:   tb.dut.cs_registers_i.pc_id_i [32] = 00000000000000000000000000000000     // pc_id_i
net:   tb.dut.cs_registers_i.ld_stall_i [1] = 0     // ld_stall_i
net:   tb.dut.cs_registers_i.jump_i [1] = 0     // jump_i
net:   tb.dut.cs_registers_i.jr_stall_i [1] = 0     // jr_stall_i
net:   tb.dut.cs_registers_i.is_irq [1] = 0     // is_irq
net:   tb.dut.cs_registers_i.is_decoding_i [1] = 0     // is_decoding_i
net:   tb.dut.cs_registers_i.is_compressed_i [1] = 0     // is_compressed_i
net:   tb.dut.cs_registers_i.imiss_i [1] = 1     // imiss_i
net:   tb.dut.cs_registers_i.id_valid_i [1] = 1     // id_valid_i
net:   tb.dut.cs_registers_i.hwlp_start_i [64] = 0000000000000000000000000000000000000000000000000000000000000000     // hwlp_start_i
net:   tb.dut.cs_registers_i.hwlp_end_i [64] = 0000000000000000000000000000000000000000000000000000000000000000     // hwlp_end_i
net:   tb.dut.cs_registers_i.hwlp_cnt_i [64] = 0000000000000000000000000000000000000000000000000000000000000000     // hwlp_cnt_i
net:   tb.dut.cs_registers_i.fflags_i [5] = 00000     // fflags_i
net:   tb.dut.cs_registers_i.csr_save_if_i [1] = 0     // csr_save_if_i
net:   tb.dut.cs_registers_i.csr_save_id_i [1] = 0     // csr_save_id_i
net:   tb.dut.cs_registers_i.csr_save_cause_i [1] = 0     // csr_save_cause_i
net:   tb.dut.cs_registers_i.csr_restore_uret_i [1] = 0     // csr_restore_uret_i
net:   tb.dut.cs_registers_i.csr_restore_mret_i [1] = 0     // csr_restore_mret_i
net:   tb.dut.cs_registers_i.csr_irq_sec_i [1] = 0     // csr_irq_sec_i
net:   tb.dut.cs_registers_i.csr_cause_i [6] = 000000     // csr_cause_i
net:   tb.dut.cs_registers_i.branch_taken_i [1] = 0     // branch_taken_i
net:   tb.dut.cs_registers_i.branch_i [1] = 0     // branch_i
net:   tb.dut.cs_registers_i.apu_dep_i [1] = 0     // apu_dep_i
net:   tb.dut.cs_registers_i.PCCR_inc [14] = zzzzzzzzzzzzz0     // PCCR_inc
net:   tb.dut.cs_registers_i.PCCR_in [14] = z0000000010001     // PCCR_in
reg:   PCCR_inc_q [14] = xxxxxxxxxxxxx0 // PCCR_inc_q
reg:   PCCR_n [32] = 00000000000000000000000000000000 // PCCR_n
reg:   PCCR_q [32] = 00000000000000000000000000000000 // PCCR_q
reg:   PCER_n [14] = 00000000000000 // PCER_n
reg:   PCER_q [14] = 00000000000000 // PCER_q
reg:   PCMR_n [2] = 11 // PCMR_n
reg:   PCMR_q [2] = 11 // PCMR_q
reg:   csr_rdata_int [32] = 00000000000000000000000000000000 // csr_rdata_int
reg:   csr_rdata_o [32] = 00000000000000000000000000000000 // csr_rdata_o
reg:   csr_wdata_int [32] = 00000000000000000000000000000000 // csr_wdata_int
reg:   csr_we_int [1] = 0 // csr_we_int
reg:   epc_o [32] = 00000000000000000000000000000000 // epc_o
reg:   exception_pc [32] = 00000000000000000000000000000000 // exception_pc
reg:   fflags_n [5] = xxxxx // fflags_n
reg:   fflags_q [5] = xxxxx // fflags_q
reg:   fprec_n [5] = xxxxx // fprec_n
reg:   fprec_q [5] = xxxxx // fprec_q
reg:   frm_n [3] = xxx // frm_n
reg:   frm_q [3] = xxx // frm_q
reg:   hwlp_regid_o [1] = 0 // hwlp_regid_o
reg:   hwlp_we_o [3] = 000 // hwlp_we_o
reg:   i [32] = 00000000000000000000000000000001 // i
reg:   id_valid_q [1] = 0 // id_valid_q
reg:   is_pccr [1] = 0 // is_pccr
reg:   is_pcer [1] = 0 // is_pcer
reg:   is_pcmr [1] = 0 // is_pcmr
reg:   mcause_n [6] = 000000 // mcause_n
reg:   mcause_q [6] = 000000 // mcause_q
reg:   mepc_n [32] = 00000000000000000000000000000000 // mepc_n
reg:   mepc_q [32] = 00000000000000000000000000000000 // mepc_q
reg:   mstatus_n [6] = 000011 // mstatus_n
reg:   mstatus_q [6] = 000011 // mstatus_q
reg:   mtvec_n [24] = 000000000000000000000000 // mtvec_n
reg:   pccr_all_sel [1] = 0 // pccr_all_sel
reg:   pccr_index [5] = 00000 // pccr_index
reg:   perf_rdata [32] = 00000000000000000000000000000000 // perf_rdata
reg:   priv_lvl_n [2] = 11 // priv_lvl_n
reg:   priv_lvl_q [2] = 11 // priv_lvl_q
reg:   utvec_q [24] = xxxxxxxxxxxxxxxxxxxxxxxx // utvec_q
module: riscv_debug_unit tb.dut.debug_unit_i
net:   tb.dut.debug_unit_i.clk [1] = 1     // clk
net:   tb.dut.debug_unit_i.csr_rdata_i [32] = 00000000000000000000000000000000     // csr_rdata_i
net:   tb.dut.debug_unit_i.csr_wdata_o [32] = 00000000000000000000000000000000     // csr_wdata_o
net:   tb.dut.debug_unit_i.debug_addr_i [15] = 000000000000000     // debug_addr_i
net:   tb.dut.debug_unit_i.debug_halt_i [1] = 0     // debug_halt_i
net:   tb.dut.debug_unit_i.debug_req_i [1] = 0     // debug_req_i
net:   tb.dut.debug_unit_i.debug_resume_i [1] = 0     // debug_resume_i
net:   tb.dut.debug_unit_i.debug_wdata_i [32] = 00000000000000000000000000000000     // debug_wdata_i
net:   tb.dut.debug_unit_i.debug_we_i [1] = 0     // debug_we_i
net:   tb.dut.debug_unit_i.jump_addr_o [32] = 00000000000000000000000000000000     // jump_addr_o
net:   tb.dut.debug_unit_i.regfile_wdata_o [32] = 00000000000000000000000000000000     // regfile_wdata_o
net:   tb.dut.debug_unit_i.regfile_wreq_o [1] = 0     // regfile_wreq_o
net:   tb.dut.debug_unit_i.rst_n [1] = 1     // rst_n
net:   tb.dut.debug_unit_i.settings_o [6] = 000000     // settings_o
net:   tb.dut.debug_unit_i.sleeping_i [1] = 1     // sleeping_i
net:   tb.dut.debug_unit_i.trap_i [1] = 0     // trap_i
net:   tb.dut.debug_unit_i.regfile_waddr_o [6] = 000000     // regfile_waddr_o
net:   tb.dut.debug_unit_i.regfile_rreq_o [1] = 0     // regfile_rreq_o
net:   tb.dut.debug_unit_i.regfile_rdata_i [32] = 00000000000000000000000000000000     // regfile_rdata_i
net:   tb.dut.debug_unit_i.regfile_raddr_o [6] = 000000     // regfile_raddr_o
net:   tb.dut.debug_unit_i.pc_if_i [32] = 00000000000000000000000000000000     // pc_if_i
net:   tb.dut.debug_unit_i.pc_id_i [32] = 00000000000000000000000000000000     // pc_id_i
net:   tb.dut.debug_unit_i.pc_ex_i [32] = 00000000000000000000000000000000     // pc_ex_i
net:   tb.dut.debug_unit_i.jump_req_o [1] = 0     // jump_req_o
net:   tb.dut.debug_unit_i.instr_valid_id_i [1] = 0     // instr_valid_id_i
net:   tb.dut.debug_unit_i.exc_cause_i [6] = 000000     // exc_cause_i
net:   tb.dut.debug_unit_i.dbg_ack_i [1] = 0     // dbg_ack_i
net:   tb.dut.debug_unit_i.data_load_event_i [1] = 0     // data_load_event_i
net:   tb.dut.debug_unit_i.csr_req_o [1] = 0     // csr_req_o
net:   tb.dut.debug_unit_i.csr_addr_o [12] = 000000000000     // csr_addr_o
net:   tb.dut.debug_unit_i.branch_taken_i [1] = 0     // branch_taken_i
net:   tb.dut.debug_unit_i.branch_in_ex_i [1] = 0     // branch_in_ex_i
reg:   addr_q [15] = 000000000000000 // addr_q
reg:   csr_req_n [1] = 0 // csr_req_n
reg:   csr_req_q [1] = 0 // csr_req_q
reg:   csr_we_o [1] = 0 // csr_we_o
reg:   dbg_cause_n [6] = 011111 // dbg_cause_n
reg:   dbg_cause_q [6] = 011111 // dbg_cause_q
reg:   dbg_halt [1] = 0 // dbg_halt
reg:   dbg_rdata [32] = 00000000000000000000000000000000 // dbg_rdata
reg:   dbg_req_o [1] = 0 // dbg_req_o
reg:   dbg_resume [1] = 0 // dbg_resume
reg:   dbg_ssth_n [1] = 0 // dbg_ssth_n
reg:   dbg_ssth_q [1] = 0 // dbg_ssth_q
reg:   debug_gnt_o [1] = 0 // debug_gnt_o
reg:   debug_halted_o [1] = 0 // debug_halted_o
reg:   debug_rdata_o [32] = 00000000000000000000000000000000 // debug_rdata_o
reg:   debug_rvalid_o [1] = 0 // debug_rvalid_o
reg:   jump_req_n [1] = 0 // jump_req_n
reg:   jump_req_q [1] = 0 // jump_req_q
reg:   npc_int [32] = 00000000000000000000000000000000 // npc_int
reg:   pc_tracking_fsm_cs [2] = 00 // pc_tracking_fsm_cs
reg:   pc_tracking_fsm_ns [2] = 00 // pc_tracking_fsm_ns
reg:   ppc_int [32] = 00000000000000000000000000000000 // ppc_int
reg:   rdata_sel_n [3] = 000 // rdata_sel_n
reg:   rdata_sel_q [3] = 000 // rdata_sel_q
reg:   regfile_fp_sel_n [1] = 0 // regfile_fp_sel_n
reg:   regfile_fp_sel_q [1] = 0 // regfile_fp_sel_q
reg:   regfile_fp_wr [1] = 0 // regfile_fp_wr
reg:   regfile_rreq_n [1] = 0 // regfile_rreq_n
reg:   regfile_rreq_q [1] = 0 // regfile_rreq_q
reg:   regfile_wreq [1] = 0 // regfile_wreq
reg:   settings_n [6] = 000000 // settings_n
reg:   settings_q [6] = 000000 // settings_q
reg:   ssth_clear [1] = 0 // ssth_clear
reg:   stall_cs [2] = 00 // stall_cs
reg:   stall_ns [2] = 00 // stall_ns
reg:   stall_o [1] = 0 // stall_o
reg:   state_n [1] = 0 // state_n
reg:   state_q [1] = 0 // state_q
reg:   wdata_q [32] = 00000000000000000000000000000000 // wdata_q
module: riscv_ex_stage tb.dut.ex_stage_i
net:   tb.dut.ex_stage_i.apu_active [1] = 0     // apu_active
net:   tb.dut.ex_stage_i.apu_busy_o [1] = 0     // apu_busy_o
net:   tb.dut.ex_stage_i.apu_master_gnt_i [1] = 0     // apu_master_gnt_i
net:   tb.dut.ex_stage_i.apu_master_op_o [6] = 000000     // apu_master_op_o
net:   tb.dut.ex_stage_i.apu_master_operands_o [96] = zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz000000000     // apu_master_operands_o
net:   tb.dut.ex_stage_i.apu_master_ready_o [1] = 1     // apu_master_ready_o
net:   tb.dut.ex_stage_i.apu_master_req_o [1] = 0     // apu_master_req_o
net:   tb.dut.ex_stage_i.apu_master_result_i [32] = 00000000000000000000000000000000     // apu_master_result_i
net:   tb.dut.ex_stage_i.apu_master_valid_i [1] = 0     // apu_master_valid_i
net:   tb.dut.ex_stage_i.apu_multicycle [1] = 0     // apu_multicycle
net:   tb.dut.ex_stage_i.apu_perf_cont_o [1] = 0     // apu_perf_cont_o
net:   tb.dut.ex_stage_i.apu_perf_type_o [1] = 0     // apu_perf_type_o
net:   tb.dut.ex_stage_i.apu_perf_wb_o [1] = 0     // apu_perf_wb_o
net:   tb.dut.ex_stage_i.apu_read_dep_o [1] = 0     // apu_read_dep_o
net:   tb.dut.ex_stage_i.apu_read_regs_i [18] = 000000000000000000     // apu_read_regs_i
net:   tb.dut.ex_stage_i.apu_read_regs_valid_i [3] = 000     // apu_read_regs_valid_i
net:   tb.dut.ex_stage_i.apu_ready_wb_o [1] = 1     // apu_ready_wb_o
net:   tb.dut.ex_stage_i.apu_result [32] = zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz     // apu_result
net:   tb.dut.ex_stage_i.apu_singlecycle [1] = 0     // apu_singlecycle
net:   tb.dut.ex_stage_i.apu_stall [1] = 0     // apu_stall
net:   tb.dut.ex_stage_i.apu_valid [1] = 0     // apu_valid
net:   tb.dut.ex_stage_i.apu_waddr [6] = 000000     // apu_waddr
net:   tb.dut.ex_stage_i.apu_write_dep_o [1] = 0     // apu_write_dep_o
net:   tb.dut.ex_stage_i.apu_write_regs_i [12] = 000000000000     // apu_write_regs_i
net:   tb.dut.ex_stage_i.apu_write_regs_valid_i [2] = 00     // apu_write_regs_valid_i
net:   tb.dut.ex_stage_i.branch_decision_o [1] = 0     // branch_decision_o
net:   tb.dut.ex_stage_i.clk [1] = 0     // clk
net:   tb.dut.ex_stage_i.csr_rdata_i [32] = 00000000000000000000000000000000     // csr_rdata_i
net:   tb.dut.ex_stage_i.ex_ready_o [1] = 1     // ex_ready_o
net:   tb.dut.ex_stage_i.ex_valid_o [1] = 0     // ex_valid_o
net:   tb.dut.ex_stage_i.fpu_fflags_o [5] = 00000     // fpu_fflags_o
net:   tb.dut.ex_stage_i.fpu_fflags_we_o [1] = 0     // fpu_fflags_we_o
net:   tb.dut.ex_stage_i.fpu_prec_i [5] = 00000     // fpu_prec_i
net:   tb.dut.ex_stage_i.jump_target_o [32] = 00000000000000000000000000000000     // jump_target_o
net:   tb.dut.ex_stage_i.rst_n [1] = 1     // rst_n
net:   tb.dut.ex_stage_i.wb_ready_i [1] = 1     // wb_ready_i
net:   tb.dut.ex_stage_i.regfile_we_i [1] = 0     // regfile_we_i
net:   tb.dut.ex_stage_i.regfile_waddr_i [6] = 000000     // regfile_waddr_i
net:   tb.dut.ex_stage_i.regfile_alu_we_i [1] = 0     // regfile_alu_we_i
net:   tb.dut.ex_stage_i.regfile_alu_waddr_i [6] = 000000     // regfile_alu_waddr_i
net:   tb.dut.ex_stage_i.mult_signed_mode_i [2] = 00     // mult_signed_mode_i
net:   tb.dut.ex_stage_i.mult_sel_subword_i [1] = 0     // mult_sel_subword_i
net:   tb.dut.ex_stage_i.mult_result [32] = 00000000000000000000000000000000     // mult_result
net:   tb.dut.ex_stage_i.mult_ready [1] = 1     // mult_ready
net:   tb.dut.ex_stage_i.mult_operator_i [3] = 000     // mult_operator_i
net:   tb.dut.ex_stage_i.mult_operand_c_i [32] = 00000000000000000000000000000000     // mult_operand_c_i
net:   tb.dut.ex_stage_i.mult_operand_b_i [32] = 00000000000000000000000000000000     // mult_operand_b_i
net:   tb.dut.ex_stage_i.mult_operand_a_i [32] = 00000000000000000000000000000000     // mult_operand_a_i
net:   tb.dut.ex_stage_i.mult_multicycle_o [1] = 0     // mult_multicycle_o
net:   tb.dut.ex_stage_i.mult_imm_i [5] = 00000     // mult_imm_i
net:   tb.dut.ex_stage_i.mult_en_i [1] = 0     // mult_en_i
net:   tb.dut.ex_stage_i.mult_dot_signed_i [2] = 00     // mult_dot_signed_i
net:   tb.dut.ex_stage_i.mult_dot_op_c_i [32] = 00000000000000000000000000000000     // mult_dot_op_c_i
net:   tb.dut.ex_stage_i.mult_dot_op_b_i [32] = 00000000000000000000000000000000     // mult_dot_op_b_i
net:   tb.dut.ex_stage_i.mult_dot_op_a_i [32] = 00000000000000000000000000000000     // mult_dot_op_a_i
net:   tb.dut.ex_stage_i.lsu_ready_ex_i [1] = 1     // lsu_ready_ex_i
net:   tb.dut.ex_stage_i.lsu_rdata_i [32] = 00000000000000000000000000000000     // lsu_rdata_i
net:   tb.dut.ex_stage_i.lsu_en_i [1] = 0     // lsu_en_i
net:   tb.dut.ex_stage_i.imm_vec_ext_i [2] = 00     // imm_vec_ext_i
net:   tb.dut.ex_stage_i.fpu_op_i [4] = 0000     // fpu_op_i
net:   tb.dut.ex_stage_i.csr_access_i [1] = 0     // csr_access_i
net:   tb.dut.ex_stage_i.branch_in_ex_i [1] = 0     // branch_in_ex_i
net:   tb.dut.ex_stage_i.bmask_b_i [5] = 00000     // bmask_b_i
net:   tb.dut.ex_stage_i.bmask_a_i [5] = 00000     // bmask_a_i
net:   tb.dut.ex_stage_i.apu_waddr_i [6] = 000000     // apu_waddr_i
net:   tb.dut.ex_stage_i.apu_operands_i [96] = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx000000000     // apu_operands_i
net:   tb.dut.ex_stage_i.apu_op_i [6] = 000000     // apu_op_i
net:   tb.dut.ex_stage_i.apu_lat_i [2] = 00     // apu_lat_i
net:   tb.dut.ex_stage_i.apu_flags_i [15] = 000000000000000     // apu_flags_i
net:   tb.dut.ex_stage_i.apu_en_i [1] = 0     // apu_en_i
net:   tb.dut.ex_stage_i.alu_vec_mode_i [2] = 00     // alu_vec_mode_i
net:   tb.dut.ex_stage_i.alu_result [32] = 00000000000000000000000000000000     // alu_result
net:   tb.dut.ex_stage_i.alu_ready [1] = 1     // alu_ready
net:   tb.dut.ex_stage_i.alu_operator_i [7] = 0000011     // alu_operator_i
net:   tb.dut.ex_stage_i.alu_operand_c_i [32] = 00000000000000000000000000000000     // alu_operand_c_i
net:   tb.dut.ex_stage_i.alu_operand_b_i [32] = 00000000000000000000000000000000     // alu_operand_b_i
net:   tb.dut.ex_stage_i.alu_operand_a_i [32] = 00000000000000000000000000000000     // alu_operand_a_i
net:   tb.dut.ex_stage_i.alu_en_i [1] = 0     // alu_en_i
net:   tb.dut.ex_stage_i.alu_cmp_result [1] = 0     // alu_cmp_result
reg:   regfile_alu_waddr_fw_o [6] = 000000 // regfile_alu_waddr_fw_o
reg:   regfile_alu_wdata_fw_o [32] = 00000000000000000000000000000000 // regfile_alu_wdata_fw_o
reg:   regfile_alu_we_fw_o [1] = 0 // regfile_alu_we_fw_o
reg:   regfile_waddr_lsu [6] = 000000 // regfile_waddr_lsu
reg:   regfile_waddr_wb_o [6] = 000000 // regfile_waddr_wb_o
reg:   regfile_wdata_wb_o [32] = 00000000000000000000000000000000 // regfile_wdata_wb_o
reg:   regfile_we_lsu [1] = 0 // regfile_we_lsu
reg:   regfile_we_wb_o [1] = 0 // regfile_we_wb_o
reg:   wb_contention [1] = 0 // wb_contention
reg:   wb_contention_lsu [1] = 0 // wb_contention_lsu
son:   tb.dut.ex_stage_i.alu_i
son:   tb.dut.ex_stage_i.mult_i
module: riscv_alu tb.dut.ex_stage_i.alu_i
net:   tb.dut.ex_stage_i.alu_i.adder_op_b_negate [1] = 0     // adder_op_b_negate
net:   tb.dut.ex_stage_i.alu_i.bclr_result [32] = 00000000000000000000000000000000     // bclr_result
net:   tb.dut.ex_stage_i.alu_i.bextins_result [32] = 00000000000000000000000000000000     // bextins_result
net:   tb.dut.ex_stage_i.alu_i.bmask_inv [32] = 11111111111111111111111111111110     // bmask_inv
net:   tb.dut.ex_stage_i.alu_i.bset_result [32] = 00000000000000000000000000000001     // bset_result
net:   tb.dut.ex_stage_i.alu_i.clip_is_lower_u [1] = 0     // clip_is_lower_u
net:   tb.dut.ex_stage_i.alu_i.clk [1] = 0     // clk
net:   tb.dut.ex_stage_i.alu_i.do_min [1] = 0     // do_min
net:   tb.dut.ex_stage_i.alu_i.ex_ready_i [1] = 1     // ex_ready_i
net:   tb.dut.ex_stage_i.alu_i.extract_sign [1] = 0     // extract_sign
net:   tb.dut.ex_stage_i.alu_i.f_is_qnan [1] = 0     // f_is_qnan
net:   tb.dut.ex_stage_i.alu_i.f_is_snan [1] = 0     // f_is_snan
net:   tb.dut.ex_stage_i.alu_i.fclass_result [32] = 00000000000000000000000000000000     // fclass_result
net:   tb.dut.ex_stage_i.alu_i.fp_canonical_nan [32] = 00000000000000000000000000000000     // fp_canonical_nan
net:   tb.dut.ex_stage_i.alu_i.minmax_is_fp_special [1] = 0     // minmax_is_fp_special
net:   tb.dut.ex_stage_i.alu_i.operand_a_neg [32] = 11111111111111111111111111111111     // operand_a_neg
net:   tb.dut.ex_stage_i.alu_i.operand_b_neg [32] = 11111111111111111111111111111111     // operand_b_neg
net:   tb.dut.ex_stage_i.alu_i.ready_o [1] = 1     // ready_o
net:   tb.dut.ex_stage_i.alu_i.rst_n [1] = 1     // rst_n
net:   tb.dut.ex_stage_i.alu_i.shift_arithmetic [1] = 0     // shift_arithmetic
net:   tb.dut.ex_stage_i.alu_i.shift_left [1] = 0     // shift_left
net:   tb.dut.ex_stage_i.alu_i.shift_use_round [1] = 0     // shift_use_round
net:   tb.dut.ex_stage_i.alu_i.vector_mode_i [2] = 00     // vector_mode_i
net:   tb.dut.ex_stage_i.alu_i.shuffle_result [32] = 00000000000000000000000000000000     // shuffle_result
net:   tb.dut.ex_stage_i.alu_i.shuffle_r1_in [32] = 00000000000000000000000000000000     // shuffle_r1_in
net:   tb.dut.ex_stage_i.alu_i.shuffle_r1 [32] = 00000000000000000000000000000000     // shuffle_r1
net:   tb.dut.ex_stage_i.alu_i.shuffle_r0_in [32] = 00000000000000000000000000000000     // shuffle_r0_in
net:   tb.dut.ex_stage_i.alu_i.shuffle_r0 [32] = 00000000000000000000000000000000     // shuffle_r0
net:   tb.dut.ex_stage_i.alu_i.shift_result [32] = 00000000000000000000000000000000     // shift_result
net:   tb.dut.ex_stage_i.alu_i.shift_op_a_32 [64] = 0000000000000000000000000000000000000000000000000000000000000000     // shift_op_a_32
net:   tb.dut.ex_stage_i.alu_i.shift_op_a [32] = 00000000000000000000000000000000     // shift_op_a
net:   tb.dut.ex_stage_i.alu_i.shift_left_result [32] = 00000000000000000000000000000000     // shift_left_result
net:   tb.dut.ex_stage_i.alu_i.shift_amt_norm [32] = 00000000000000000000000000000000     // shift_amt_norm
net:   tb.dut.ex_stage_i.alu_i.shift_amt_int [32] = 00000000000000000000000000000000     // shift_amt_int
net:   tb.dut.ex_stage_i.alu_i.shift_amt [32] = 00000000000000000000000000000000     // shift_amt
net:   tb.dut.ex_stage_i.alu_i.sel_minmax [4] = 0000     // sel_minmax
net:   tb.dut.ex_stage_i.alu_i.result_minmax [32] = 00000000000000000000000000000000     // result_minmax
net:   tb.dut.ex_stage_i.alu_i.result_div [32] = 00000000000000000000000000000000     // result_div
net:   tb.dut.ex_stage_i.alu_i.pack_result [32] = 00000000000000000000000000000000     // pack_result
net:   tb.dut.ex_stage_i.alu_i.operator_i [7] = 0000011     // operator_i
net:   tb.dut.ex_stage_i.alu_i.operand_c_i [32] = 00000000000000000000000000000000     // operand_c_i
net:   tb.dut.ex_stage_i.alu_i.operand_b_i [32] = 00000000000000000000000000000000     // operand_b_i
net:   tb.dut.ex_stage_i.alu_i.operand_a_rev [32] = 00000000000000000000000000000000     // operand_a_rev
net:   tb.dut.ex_stage_i.alu_i.operand_a_neg_rev [32] = 11111111111111111111111111111111     // operand_a_neg_rev
net:   tb.dut.ex_stage_i.alu_i.operand_a_i [32] = 00000000000000000000000000000000     // operand_a_i
net:   tb.dut.ex_stage_i.alu_i.minmax_b [32] = 00000000000000000000000000000000     // minmax_b
net:   tb.dut.ex_stage_i.alu_i.is_greater_vec [4] = 0000     // is_greater_vec
net:   tb.dut.ex_stage_i.alu_i.is_equal_vec [4] = 1111     // is_equal_vec
net:   tb.dut.ex_stage_i.alu_i.imm_vec_ext_i [2] = 00     // imm_vec_ext_i
net:   tb.dut.ex_stage_i.alu_i.fl1_result [5] = xxxxx     // fl1_result
net:   tb.dut.ex_stage_i.alu_i.ff_no_one [1] = 1     // ff_no_one
net:   tb.dut.ex_stage_i.alu_i.ff1_result [5] = xxxxx     // ff1_result
net:   tb.dut.ex_stage_i.alu_i.f_is_greater [4] = 0000     // f_is_greater
net:   tb.dut.ex_stage_i.alu_i.extract_is_signed [1] = 0     // extract_is_signed
net:   tb.dut.ex_stage_i.alu_i.enable_i [1] = 0     // enable_i
net:   tb.dut.ex_stage_i.alu_i.div_valid [1] = 0     // div_valid
net:   tb.dut.ex_stage_i.alu_i.div_shift [6] = 000000     // div_shift
net:   tb.dut.ex_stage_i.alu_i.div_ready [1] = 1     // div_ready
net:   tb.dut.ex_stage_i.alu_i.comparison_result_o [1] = 0     // comparison_result_o
net:   tb.dut.ex_stage_i.alu_i.cnt_result [6] = 000000     // cnt_result
net:   tb.dut.ex_stage_i.alu_i.clip_result [32] = 00000000000000000000000000000000     // clip_result
net:   tb.dut.ex_stage_i.alu_i.clip_is_lower_neg [1] = 0     // clip_is_lower_neg
net:   tb.dut.ex_stage_i.alu_i.clb_result [6] = xxxxxx     // clb_result
net:   tb.dut.ex_stage_i.alu_i.bmask_first [32] = 11111111111111111111111111111110     // bmask_first
net:   tb.dut.ex_stage_i.alu_i.bmask_b_i [5] = 00000     // bmask_b_i
net:   tb.dut.ex_stage_i.alu_i.bmask_a_i [5] = 00000     // bmask_a_i
net:   tb.dut.ex_stage_i.alu_i.bmask [32] = 00000000000000000000000000000001     // bmask
net:   tb.dut.ex_stage_i.alu_i.bextins_and [32] = 00000000000000000000000000000000     // bextins_and
net:   tb.dut.ex_stage_i.alu_i.adder_round_value [32] = 00000000000000000000000000000000     // adder_round_value
net:   tb.dut.ex_stage_i.alu_i.adder_round_result [32] = 00000000000000000000000000000000     // adder_round_result
net:   tb.dut.ex_stage_i.alu_i.adder_result_expanded [37] = 0000000001000000001000000001000000001     // adder_result_expanded
net:   tb.dut.ex_stage_i.alu_i.adder_result [32] = 00000000000000000000000000000000     // adder_result
net:   tb.dut.ex_stage_i.alu_i.adder_op_b [32] = 00000000000000000000000000000000     // adder_op_b
net:   tb.dut.ex_stage_i.alu_i.adder_op_a [32] = 00000000000000000000000000000000     // adder_op_a
reg:   adder_in_a [36] = 000000001000000001000000001000000001 // adder_in_a
reg:   adder_in_b [36] = 000000000000000000000000000000000000 // adder_in_b
reg:   bitop_result [6] = 000000 // bitop_result
reg:   cmp_result [4] = 0000 // cmp_result
reg:   cmp_signed [4] = 0000 // cmp_signed
reg:   f_is_nan [4] = 0000 // f_is_nan
reg:   f_sign_inject_result [32] = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx // f_sign_inject_result
reg:   ff_input [32] = 00000000000000000000000000000000 // ff_input
reg:   is_equal [4] = 1111 // is_equal
reg:   is_greater [4] = 0000 // is_greater
reg:   result_o [32] = 00000000000000000000000000000000 // result_o
reg:   shift_amt_left [32] = 00000000000000000000000000000000 // shift_amt_left
reg:   shift_right_result [32] = 00000000000000000000000000000000 // shift_right_result
reg:   shuffle_byte_sel [8] = 00000000 // shuffle_byte_sel
reg:   shuffle_reg0_sel [2] = 10 // shuffle_reg0_sel
reg:   shuffle_reg1_sel [2] = 01 // shuffle_reg1_sel
reg:   shuffle_reg_sel [4] = 0000 // shuffle_reg_sel
reg:   shuffle_through [4] = 0001 // shuffle_through
son:   tb.dut.ex_stage_i.alu_i.alu_ff_i
son:   tb.dut.ex_stage_i.alu_i.alu_popcnt_i
module: alu_ff tb.dut.ex_stage_i.alu_i.alu_ff_i
net:   tb.dut.ex_stage_i.alu_i.alu_ff_i.in_i [32] = 00000000000000000000000000000000     // in_i
net:   tb.dut.ex_stage_i.alu_i.alu_ff_i.index_nodes [160] = zzzzz1111x1110x1101x1100x1011x1010x1001x1000x0111x0110x0101x0100x0011x0010x0001x0000xx111xx1xxxxxx1xxx0xx0x11x0xxxx00x1x000xxxx11xxxxxx0xx1x00xxxxxx1x0xxxxxxxxx     // index_nodes
net:   tb.dut.ex_stage_i.alu_i.alu_ff_i.no_ones_o [1] = 1     // no_ones_o
net:   tb.dut.ex_stage_i.alu_i.alu_ff_i.sel_nodes [32] = z0000000000000000000000000000000     // sel_nodes
net:   tb.dut.ex_stage_i.alu_i.alu_ff_i.index_lut [160] = 1111111110111011110011011110101100111000101111011010101101001001110010100011000001111011100110101100010110101001001010000011100110001010010000011000100000100000     // index_lut
net:   tb.dut.ex_stage_i.alu_i.alu_ff_i.first_one_o [5] = xxxxx     // first_one_o
module: alu_popcnt tb.dut.ex_stage_i.alu_i.alu_popcnt_i
net:   tb.dut.ex_stage_i.alu_i.alu_popcnt_i.result_o [6] = 000000     // result_o
net:   tb.dut.ex_stage_i.alu_i.alu_popcnt_i.in_i [32] = 00000000000000000000000000000000     // in_i
net:   tb.dut.ex_stage_i.alu_i.alu_popcnt_i.cnt_l4 [10] = 0000000000     // cnt_l4
net:   tb.dut.ex_stage_i.alu_i.alu_popcnt_i.cnt_l3 [16] = 0000000000000000     // cnt_l3
net:   tb.dut.ex_stage_i.alu_i.alu_popcnt_i.cnt_l2 [24] = 000000000000000000000000     // cnt_l2
net:   tb.dut.ex_stage_i.alu_i.alu_popcnt_i.cnt_l1 [32] = 00000000000000000000000000000000     // cnt_l1
module: riscv_mult tb.dut.ex_stage_i.mult_i
net:   tb.dut.ex_stage_i.mult_i.clk [1] = 0     // clk
net:   tb.dut.ex_stage_i.mult_i.ex_ready_i [1] = 1     // ex_ready_i
net:   tb.dut.ex_stage_i.mult_i.int_op_a_msu [32] = 00000000000000000000000000000000     // int_op_a_msu
net:   tb.dut.ex_stage_i.mult_i.int_op_b_msu [32] = 00000000000000000000000000000000     // int_op_b_msu
net:   tb.dut.ex_stage_i.mult_i.ready_o [1] = 1     // ready_o
net:   tb.dut.ex_stage_i.mult_i.rst_n [1] = 1     // rst_n
net:   tb.dut.ex_stage_i.mult_i.short_subword_i [1] = 0     // short_subword_i
net:   tb.dut.ex_stage_i.mult_i.short_subword [2] = 00     // short_subword
net:   tb.dut.ex_stage_i.mult_i.short_signed_i [2] = 00     // short_signed_i
net:   tb.dut.ex_stage_i.mult_i.short_signed [2] = 00     // short_signed
net:   tb.dut.ex_stage_i.mult_i.short_shift_arith [1] = 0     // short_shift_arith
net:   tb.dut.ex_stage_i.mult_i.short_round_tmp [32] = 00000000000000000000000000000001     // short_round_tmp
net:   tb.dut.ex_stage_i.mult_i.short_round [32] = 00000000000000000000000000000000     // short_round
net:   tb.dut.ex_stage_i.mult_i.short_result [34] = 0000000000000000000000000000000000     // short_result
net:   tb.dut.ex_stage_i.mult_i.short_op_c [33] = 000000000000000000000000000000000     // short_op_c
net:   tb.dut.ex_stage_i.mult_i.short_op_b [17] = 00000000000000000     // short_op_b
net:   tb.dut.ex_stage_i.mult_i.short_op_a [17] = 00000000000000000     // short_op_a
net:   tb.dut.ex_stage_i.mult_i.short_mul [34] = 0000000000000000000000000000000000     // short_mul
net:   tb.dut.ex_stage_i.mult_i.short_mac_msb1 [1] = 0     // short_mac_msb1
net:   tb.dut.ex_stage_i.mult_i.short_mac_msb0 [1] = 0     // short_mac_msb0
net:   tb.dut.ex_stage_i.mult_i.short_mac [34] = 0000000000000000000000000000000000     // short_mac
net:   tb.dut.ex_stage_i.mult_i.short_imm [5] = 00000     // short_imm
net:   tb.dut.ex_stage_i.mult_i.operator_i [3] = 000     // operator_i
net:   tb.dut.ex_stage_i.mult_i.op_c_i [32] = 00000000000000000000000000000000     // op_c_i
net:   tb.dut.ex_stage_i.mult_i.op_b_i [32] = 00000000000000000000000000000000     // op_b_i
net:   tb.dut.ex_stage_i.mult_i.op_a_i [32] = 00000000000000000000000000000000     // op_a_i
net:   tb.dut.ex_stage_i.mult_i.int_result [32] = 00000000000000000000000000000000     // int_result
net:   tb.dut.ex_stage_i.mult_i.int_is_msu [1] = 0     // int_is_msu
net:   tb.dut.ex_stage_i.mult_i.imm_i [5] = 00000     // imm_i
net:   tb.dut.ex_stage_i.mult_i.enable_i [1] = 0     // enable_i
net:   tb.dut.ex_stage_i.mult_i.dot_signed_i [2] = 00     // dot_signed_i
net:   tb.dut.ex_stage_i.mult_i.dot_short_result [32] = 00000000000000000000000000000000     // dot_short_result
net:   tb.dut.ex_stage_i.mult_i.dot_op_c_i [32] = 00000000000000000000000000000000     // dot_op_c_i
net:   tb.dut.ex_stage_i.mult_i.dot_op_b_i [32] = 00000000000000000000000000000000     // dot_op_b_i
net:   tb.dut.ex_stage_i.mult_i.dot_op_a_i [32] = 00000000000000000000000000000000     // dot_op_a_i
net:   tb.dut.ex_stage_i.mult_i.dot_char_result [32] = 00000000000000000000000000000000     // dot_char_result
reg:   mulh_CS [3] = 000 // mulh_CS
reg:   mulh_NS [3] = 000 // mulh_NS
reg:   mulh_active [1] = 0 // mulh_active
reg:   mulh_carry_q [1] = 0 // mulh_carry_q
reg:   mulh_clearcarry [1] = 0 // mulh_clearcarry
reg:   mulh_imm [5] = 00000 // mulh_imm
reg:   mulh_ready [1] = 1 // mulh_ready
reg:   mulh_save [1] = 0 // mulh_save
reg:   mulh_shift_arith [1] = 0 // mulh_shift_arith
reg:   mulh_signed [2] = 00 // mulh_signed
reg:   mulh_subword [2] = 00 // mulh_subword
reg:   multicycle_o [1] = 0 // multicycle_o
reg:   result_o [32] = 00000000000000000000000000000000 // result_o
module: riscv_id_stage tb.dut.id_stage_i
net:   tb.dut.id_stage_i.apu_busy_i [1] = 0     // apu_busy_i
net:   tb.dut.id_stage_i.apu_flags [15] = 000000000000000     // apu_flags
net:   tb.dut.id_stage_i.apu_operands [96] = zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz000000000     // apu_operands
net:   tb.dut.id_stage_i.apu_perf_dep_o [1] = 0     // apu_perf_dep_o
net:   tb.dut.id_stage_i.apu_read_dep_i [1] = 0     // apu_read_dep_i
net:   tb.dut.id_stage_i.apu_read_regs_o [18] = 000000000000000000     // apu_read_regs_o
net:   tb.dut.id_stage_i.apu_read_regs_valid_o [3] = 000     // apu_read_regs_valid_o
net:   tb.dut.id_stage_i.apu_waddr [6] = 000000     // apu_waddr
net:   tb.dut.id_stage_i.apu_write_dep_i [1] = 0     // apu_write_dep_i
net:   tb.dut.id_stage_i.apu_write_regs_o [12] = 000000000000     // apu_write_regs_o
net:   tb.dut.id_stage_i.apu_write_regs_valid_o [2] = 00     // apu_write_regs_valid_o
net:   tb.dut.id_stage_i.branch_decision_i [1] = 0     // branch_decision_i
net:   tb.dut.id_stage_i.branch_taken_ex [1] = 0     // branch_taken_ex
net:   tb.dut.id_stage_i.clear_instr_valid_o [1] = 1     // clear_instr_valid_o
net:   tb.dut.id_stage_i.clk [1] = 0     // clk
net:   tb.dut.id_stage_i.csr_apu_stall [1] = 0     // csr_apu_stall
net:   tb.dut.id_stage_i.csr_hwlp_data_i [32] = 00000000000000000000000000000000     // csr_hwlp_data_i
net:   tb.dut.id_stage_i.csr_hwlp_regid_i [1] = 0     // csr_hwlp_regid_i
net:   tb.dut.id_stage_i.csr_hwlp_we_i [3] = 000     // csr_hwlp_we_i
net:   tb.dut.id_stage_i.current_priv_lvl_i [2] = 11     // current_priv_lvl_i
net:   tb.dut.id_stage_i.dbg_jump_req_i [1] = 0     // dbg_jump_req_i
net:   tb.dut.id_stage_i.dbg_reg_raddr_i [6] = 000000     // dbg_reg_raddr_i
net:   tb.dut.id_stage_i.dbg_reg_rdata_o [32] = 00000000000000000000000000000000     // dbg_reg_rdata_o
net:   tb.dut.id_stage_i.dbg_reg_rreq_i [1] = 0     // dbg_reg_rreq_i
net:   tb.dut.id_stage_i.dbg_reg_waddr_i [6] = 000000     // dbg_reg_waddr_i
net:   tb.dut.id_stage_i.dbg_reg_wdata_i [32] = 00000000000000000000000000000000     // dbg_reg_wdata_i
net:   tb.dut.id_stage_i.dbg_reg_wreq_i [1] = 0     // dbg_reg_wreq_i
net:   tb.dut.id_stage_i.dbg_req_i [1] = 0     // dbg_req_i
net:   tb.dut.id_stage_i.dbg_settings_i [6] = 000000     // dbg_settings_i
net:   tb.dut.id_stage_i.dbg_stall_i [1] = 0     // dbg_stall_i
net:   tb.dut.id_stage_i.ex_ready_i [1] = 1     // ex_ready_i
net:   tb.dut.id_stage_i.ex_valid_i [1] = 0     // ex_valid_i
net:   tb.dut.id_stage_i.fetch_enable_i [1] = 0     // fetch_enable_i
net:   tb.dut.id_stage_i.frm_i [3] = 000     // frm_i
net:   tb.dut.id_stage_i.hwloop_valid [1] = 0     // hwloop_valid
net:   tb.dut.id_stage_i.id_ready_o [1] = 1     // id_ready_o
net:   tb.dut.id_stage_i.id_valid_o [1] = 1     // id_valid_o
net:   tb.dut.id_stage_i.instr [32] = 00000000000000000000000000000000     // instr
net:   tb.dut.id_stage_i.irq_i [1] = 0     // irq_i
net:   tb.dut.id_stage_i.irq_id_i [5] = 00000     // irq_id_i
net:   tb.dut.id_stage_i.irq_sec_i [1] = 0     // irq_sec_i
net:   tb.dut.id_stage_i.jump_target_o [32] = 00000000000000000000000000000000     // jump_target_o
net:   tb.dut.id_stage_i.m_irq_enable_i [1] = 0     // m_irq_enable_i
net:   tb.dut.id_stage_i.mult_en [1] = 0     // mult_en
net:   tb.dut.id_stage_i.mult_multicycle_i [1] = 0     // mult_multicycle_i
net:   tb.dut.id_stage_i.reg_d_alu_is_reg_a_id [1] = 0     // reg_d_alu_is_reg_a_id
net:   tb.dut.id_stage_i.reg_d_alu_is_reg_b_id [1] = 0     // reg_d_alu_is_reg_b_id
net:   tb.dut.id_stage_i.reg_d_alu_is_reg_c_id [1] = 0     // reg_d_alu_is_reg_c_id
net:   tb.dut.id_stage_i.reg_d_ex_is_reg_a_id [1] = 0     // reg_d_ex_is_reg_a_id
net:   tb.dut.id_stage_i.reg_d_ex_is_reg_b_id [1] = 0     // reg_d_ex_is_reg_b_id
net:   tb.dut.id_stage_i.reg_d_ex_is_reg_c_id [1] = 0     // reg_d_ex_is_reg_c_id
net:   tb.dut.id_stage_i.reg_d_wb_is_reg_a_id [1] = 0     // reg_d_wb_is_reg_a_id
net:   tb.dut.id_stage_i.reg_d_wb_is_reg_b_id [1] = 0     // reg_d_wb_is_reg_b_id
net:   tb.dut.id_stage_i.reg_d_wb_is_reg_c_id [1] = 0     // reg_d_wb_is_reg_c_id
net:   tb.dut.id_stage_i.regfile_alu_waddr_fw_i [6] = 000000     // regfile_alu_waddr_fw_i
net:   tb.dut.id_stage_i.regfile_alu_wdata_fw_i [32] = 00000000000000000000000000000000     // regfile_alu_wdata_fw_i
net:   tb.dut.id_stage_i.regfile_alu_we_fw_i [1] = 0     // regfile_alu_we_fw_i
net:   tb.dut.id_stage_i.regfile_waddr_wb_i [6] = 000000     // regfile_waddr_wb_i
net:   tb.dut.id_stage_i.regfile_wdata_wb_i [32] = 00000000000000000000000000000000     // regfile_wdata_wb_i
net:   tb.dut.id_stage_i.regfile_we_wb_i [1] = 0     // regfile_we_wb_i
net:   tb.dut.id_stage_i.rst_n [1] = 1     // rst_n
net:   tb.dut.id_stage_i.test_en_i [1] = 0     // test_en_i
net:   tb.dut.id_stage_i.u_irq_enable_i [1] = 0     // u_irq_enable_i
net:   tb.dut.id_stage_i.wb_ready_i [1] = 1     // wb_ready_i
net:   tb.dut.id_stage_i.uret_insn_dec [1] = 0     // uret_insn_dec
net:   tb.dut.id_stage_i.trap_addr_mux_o [1] = 0     // trap_addr_mux_o
net:   tb.dut.id_stage_i.scalar_replication [1] = 0     // scalar_replication
net:   tb.dut.id_stage_i.regfile_we_id [1] = 0     // regfile_we_id
net:   tb.dut.id_stage_i.regfile_waddr_id [6] = 000000     // regfile_waddr_id
net:   tb.dut.id_stage_i.regfile_fp_d [1] = 0     // regfile_fp_d
net:   tb.dut.id_stage_i.regfile_fp_c [1] = 0     // regfile_fp_c
net:   tb.dut.id_stage_i.regfile_fp_b [1] = 0     // regfile_fp_b
net:   tb.dut.id_stage_i.regfile_fp_a [1] = 0     // regfile_fp_a
net:   tb.dut.id_stage_i.regfile_data_rc_id [32] = 00000000000000000000000000000000     // regfile_data_rc_id
net:   tb.dut.id_stage_i.regfile_data_rb_id [32] = 00000000000000000000000000000000     // regfile_data_rb_id
net:   tb.dut.id_stage_i.regfile_data_ra_id [32] = 00000000000000000000000000000000     // regfile_data_ra_id
net:   tb.dut.id_stage_i.regfile_alu_we_id [1] = 0     // regfile_alu_we_id
net:   tb.dut.id_stage_i.regfile_alu_waddr_mux_sel [1] = 1     // regfile_alu_waddr_mux_sel
net:   tb.dut.id_stage_i.regfile_alu_waddr_id [6] = 000000     // regfile_alu_waddr_id
net:   tb.dut.id_stage_i.regfile_addr_rb_id [6] = 000000     // regfile_addr_rb_id
net:   tb.dut.id_stage_i.regfile_addr_ra_id [6] = 000000     // regfile_addr_ra_id
net:   tb.dut.id_stage_i.regc_used_dec [1] = 0     // regc_used_dec
net:   tb.dut.id_stage_i.regc_mux [2] = 11     // regc_mux
net:   tb.dut.id_stage_i.regb_used_dec [1] = 0     // regb_used_dec
net:   tb.dut.id_stage_i.rega_used_dec [1] = 0     // rega_used_dec
net:   tb.dut.id_stage_i.prepost_useincr [1] = 1     // prepost_useincr
net:   tb.dut.id_stage_i.pipe_flush_dec [1] = 0     // pipe_flush_dec
net:   tb.dut.id_stage_i.perf_ld_stall_o [1] = 0     // perf_ld_stall_o
net:   tb.dut.id_stage_i.perf_jump_o [1] = 0     // perf_jump_o
net:   tb.dut.id_stage_i.perf_jr_stall_o [1] = 0     // perf_jr_stall_o
net:   tb.dut.id_stage_i.pc_set_o [1] = 0     // pc_set_o
net:   tb.dut.id_stage_i.pc_mux_o [3] = 000     // pc_mux_o
net:   tb.dut.id_stage_i.pc_if_i [32] = 00000000000000000000000000000000     // pc_if_i
net:   tb.dut.id_stage_i.pc_id_i [32] = 00000000000000000000000000000000     // pc_id_i
net:   tb.dut.id_stage_i.operand_c_fw_mux_sel [2] = 00     // operand_c_fw_mux_sel
net:   tb.dut.id_stage_i.operand_b_fw_mux_sel [2] = 00     // operand_b_fw_mux_sel
net:   tb.dut.id_stage_i.operand_a_fw_mux_sel [2] = 00     // operand_a_fw_mux_sel
net:   tb.dut.id_stage_i.mult_signed_mode [2] = 00     // mult_signed_mode
net:   tb.dut.id_stage_i.mult_sel_subword [1] = 0     // mult_sel_subword
net:   tb.dut.id_stage_i.mult_operator [3] = 010     // mult_operator
net:   tb.dut.id_stage_i.mult_int_en [1] = 0     // mult_int_en
net:   tb.dut.id_stage_i.mult_imm_mux [1] = 0     // mult_imm_mux
net:   tb.dut.id_stage_i.mult_dot_signed [2] = 00     // mult_dot_signed
net:   tb.dut.id_stage_i.mult_dot_en [1] = 0     // mult_dot_en
net:   tb.dut.id_stage_i.mret_insn_dec [1] = 0     // mret_insn_dec
net:   tb.dut.id_stage_i.misaligned_stall [1] = 0     // misaligned_stall
net:   tb.dut.id_stage_i.lsu_store_err_i [1] = 0     // lsu_store_err_i
net:   tb.dut.id_stage_i.lsu_load_err_i [1] = 0     // lsu_load_err_i
net:   tb.dut.id_stage_i.load_stall [1] = 0     // load_stall
net:   tb.dut.id_stage_i.jump_target_mux_sel [2] = 01     // jump_target_mux_sel
net:   tb.dut.id_stage_i.jump_in_id [2] = 00     // jump_in_id
net:   tb.dut.id_stage_i.jump_in_dec [2] = 00     // jump_in_dec
net:   tb.dut.id_stage_i.jr_stall [1] = 0     // jr_stall
net:   tb.dut.id_stage_i.is_hwlp_i [1] = 0     // is_hwlp_i
net:   tb.dut.id_stage_i.is_decoding_o [1] = 0     // is_decoding_o
net:   tb.dut.id_stage_i.is_compressed_i [1] = 0     // is_compressed_i
net:   tb.dut.id_stage_i.irq_sec_ctrl [1] = 0     // irq_sec_ctrl
net:   tb.dut.id_stage_i.irq_req_ctrl [1] = 0     // irq_req_ctrl
net:   tb.dut.id_stage_i.irq_id_o [5] = 00000     // irq_id_o
net:   tb.dut.id_stage_i.irq_id_ctrl [5] = 00000     // irq_id_ctrl
net:   tb.dut.id_stage_i.irq_ack_o [1] = 0     // irq_ack_o
net:   tb.dut.id_stage_i.instr_valid_i [1] = 0     // instr_valid_i
net:   tb.dut.id_stage_i.instr_req_o [1] = 0     // instr_req_o
net:   tb.dut.id_stage_i.instr_rdata_i [32] = 00000000000000000000000000000000     // instr_rdata_i
net:   tb.dut.id_stage_i.instr_multicycle [1] = 0     // instr_multicycle
net:   tb.dut.id_stage_i.imm_z_type [32] = 00000000000000000000000000000000     // imm_z_type
net:   tb.dut.id_stage_i.imm_vu_type [32] = 00000000000000000000000000000000     // imm_vu_type
net:   tb.dut.id_stage_i.imm_vs_type [32] = 00000000000000000000000000000000     // imm_vs_type
net:   tb.dut.id_stage_i.imm_vec_ext_id [2] = 00     // imm_vec_ext_id
net:   tb.dut.id_stage_i.imm_uj_type [32] = 00000000000000000000000000000000     // imm_uj_type
net:   tb.dut.id_stage_i.imm_u_type [32] = 00000000000000000000000000000000     // imm_u_type
net:   tb.dut.id_stage_i.imm_shuffleh_type [32] = 00000000000000000000000000000000     // imm_shuffleh_type
net:   tb.dut.id_stage_i.imm_shuffleb_type [32] = 00000000000000000000000000000000     // imm_shuffleb_type
net:   tb.dut.id_stage_i.imm_sb_type [32] = 00000000000000000000000000000000     // imm_sb_type
net:   tb.dut.id_stage_i.imm_s_type [32] = 00000000000000000000000000000000     // imm_s_type
net:   tb.dut.id_stage_i.imm_s3_type [32] = 00000000000000000000000000000000     // imm_s3_type
net:   tb.dut.id_stage_i.imm_s2_type [32] = 00000000000000000000000000000000     // imm_s2_type
net:   tb.dut.id_stage_i.imm_iz_type [32] = 00000000000000000000000000000000     // imm_iz_type
net:   tb.dut.id_stage_i.imm_i_type [32] = 00000000000000000000000000000000     // imm_i_type
net:   tb.dut.id_stage_i.imm_clip_type [32] = 00000000000000000000000000000000     // imm_clip_type
net:   tb.dut.id_stage_i.imm_bi_type [32] = 00000000000000000000000000000000     // imm_bi_type
net:   tb.dut.id_stage_i.imm_b_mux_sel [4] = 0000     // imm_b_mux_sel
net:   tb.dut.id_stage_i.imm_a_mux_sel [1] = 1     // imm_a_mux_sel
net:   tb.dut.id_stage_i.illegal_insn_dec [1] = 1     // illegal_insn_dec
net:   tb.dut.id_stage_i.illegal_c_insn_i [1] = 0     // illegal_c_insn_i
net:   tb.dut.id_stage_i.hwlp_start_o [64] = 0000000000000000000000000000000000000000000000000000000000000000     // hwlp_start_o
net:   tb.dut.id_stage_i.hwlp_end_o [64] = 0000000000000000000000000000000000000000000000000000000000000000     // hwlp_end_o
net:   tb.dut.id_stage_i.hwlp_dec_cnt_i [2] = 00     // hwlp_dec_cnt_i
net:   tb.dut.id_stage_i.hwlp_cnt_o [64] = 0000000000000000000000000000000000000000000000000000000000000000     // hwlp_cnt_o
net:   tb.dut.id_stage_i.hwloop_we_int [3] = 000     // hwloop_we_int
net:   tb.dut.id_stage_i.hwloop_we [3] = 000     // hwloop_we
net:   tb.dut.id_stage_i.hwloop_target_mux_sel [1] = 0     // hwloop_target_mux_sel
net:   tb.dut.id_stage_i.hwloop_start_mux_sel [1] = 0     // hwloop_start_mux_sel
net:   tb.dut.id_stage_i.hwloop_start [32] = 00000000000000000000000000000000     // hwloop_start
net:   tb.dut.id_stage_i.hwloop_regid_int [1] = 0     // hwloop_regid_int
net:   tb.dut.id_stage_i.hwloop_regid [1] = 0     // hwloop_regid
net:   tb.dut.id_stage_i.hwloop_end [32] = 00000000000000000000000000000000     // hwloop_end
net:   tb.dut.id_stage_i.hwloop_cnt_mux_sel [1] = 0     // hwloop_cnt_mux_sel
net:   tb.dut.id_stage_i.hwloop_cnt [32] = 00000000000000000000000000000000     // hwloop_cnt
net:   tb.dut.id_stage_i.halt_if_o [1] = 0     // halt_if_o
net:   tb.dut.id_stage_i.halt_id [1] = 0     // halt_id
net:   tb.dut.id_stage_i.fpu_op [4] = 0000     // fpu_op
net:   tb.dut.id_stage_i.fp_rnd_mode [3] = 000     // fp_rnd_mode
net:   tb.dut.id_stage_i.exc_pc_mux_o [2] = 11     // exc_pc_mux_o
net:   tb.dut.id_stage_i.exc_kill [1] = 0     // exc_kill
net:   tb.dut.id_stage_i.exc_cause_o [6] = 000000     // exc_cause_o
net:   tb.dut.id_stage_i.exc_ack [1] = 0     // exc_ack
net:   tb.dut.id_stage_i.ecall_insn_dec [1] = 0     // ecall_insn_dec
net:   tb.dut.id_stage_i.ebrk_insn [1] = 0     // ebrk_insn
net:   tb.dut.id_stage_i.deassert_we [1] = 1     // deassert_we
net:   tb.dut.id_stage_i.dbg_trap_o [1] = 0     // dbg_trap_o
net:   tb.dut.id_stage_i.dbg_ack_o [1] = 0     // dbg_ack_o
net:   tb.dut.id_stage_i.data_we_id [1] = 0     // data_we_id
net:   tb.dut.id_stage_i.data_type_id [2] = 00     // data_type_id
net:   tb.dut.id_stage_i.data_sign_ext_id [1] = 0     // data_sign_ext_id
net:   tb.dut.id_stage_i.data_req_id [1] = 0     // data_req_id
net:   tb.dut.id_stage_i.data_reg_offset_id [2] = 00     // data_reg_offset_id
net:   tb.dut.id_stage_i.data_misaligned_i [1] = 0     // data_misaligned_i
net:   tb.dut.id_stage_i.data_load_event_id [1] = 0     // data_load_event_id
net:   tb.dut.id_stage_i.ctrl_busy_o [1] = 0     // ctrl_busy_o
net:   tb.dut.id_stage_i.csr_status [1] = 0     // csr_status
net:   tb.dut.id_stage_i.csr_save_if_o [1] = 0     // csr_save_if_o
net:   tb.dut.id_stage_i.csr_save_id_o [1] = 0     // csr_save_id_o
net:   tb.dut.id_stage_i.csr_save_cause_o [1] = 0     // csr_save_cause_o
net:   tb.dut.id_stage_i.csr_restore_uret_id_o [1] = 0     // csr_restore_uret_id_o
net:   tb.dut.id_stage_i.csr_restore_mret_id_o [1] = 0     // csr_restore_mret_id_o
net:   tb.dut.id_stage_i.csr_op [2] = 00     // csr_op
net:   tb.dut.id_stage_i.csr_irq_sec_o [1] = 0     // csr_irq_sec_o
net:   tb.dut.id_stage_i.csr_cause_o [6] = 000000     // csr_cause_o
net:   tb.dut.id_stage_i.csr_access [1] = 0     // csr_access
net:   tb.dut.id_stage_i.core_ctrl_firstfetch_o [1] = 0     // core_ctrl_firstfetch_o
net:   tb.dut.id_stage_i.bmask_b_mux [2] = 10     // bmask_b_mux
net:   tb.dut.id_stage_i.bmask_a_mux [1] = 0     // bmask_a_mux
net:   tb.dut.id_stage_i.apu_type [2] = 00     // apu_type
net:   tb.dut.id_stage_i.apu_stall [1] = 0     // apu_stall
net:   tb.dut.id_stage_i.apu_op [6] = 000000     // apu_op
net:   tb.dut.id_stage_i.apu_lat [2] = 00     // apu_lat
net:   tb.dut.id_stage_i.apu_flags_src [2] = 00     // apu_flags_src
net:   tb.dut.id_stage_i.apu_en [1] = 0     // apu_en
net:   tb.dut.id_stage_i.alu_vec_mode [2] = 00     // alu_vec_mode
net:   tb.dut.id_stage_i.alu_operator [7] = 0000011     // alu_operator
net:   tb.dut.id_stage_i.alu_operand_b [32] = 00000000000000000000000000000000     // alu_operand_b
net:   tb.dut.id_stage_i.alu_op_c_mux_sel [2] = 00     // alu_op_c_mux_sel
net:   tb.dut.id_stage_i.alu_op_b_mux_sel [3] = 000     // alu_op_b_mux_sel
net:   tb.dut.id_stage_i.alu_op_a_mux_sel [3] = 000     // alu_op_a_mux_sel
net:   tb.dut.id_stage_i.alu_en [1] = 1     // alu_en
net:   tb.dut.id_stage_i.alu_bmask_b_mux_sel [1] = 1     // alu_bmask_b_mux_sel
net:   tb.dut.id_stage_i.alu_bmask_a_mux_sel [1] = 1     // alu_bmask_a_mux_sel
reg:   alu_en_ex_o [1] = 0 // alu_en_ex_o
reg:   alu_operand_a [32] = 00000000000000000000000000000000 // alu_operand_a
reg:   alu_operand_a_ex_o [32] = 00000000000000000000000000000000 // alu_operand_a_ex_o
reg:   alu_operand_b_ex_o [32] = 00000000000000000000000000000000 // alu_operand_b_ex_o
reg:   alu_operand_c [32] = 00000000000000000000000000000000 // alu_operand_c
reg:   alu_operand_c_ex_o [32] = 00000000000000000000000000000000 // alu_operand_c_ex_o
reg:   alu_operator_ex_o [7] = 0000011 // alu_operator_ex_o
reg:   alu_vec_mode_ex_o [2] = 00 // alu_vec_mode_ex_o
reg:   apu_en_ex_o [1] = 0 // apu_en_ex_o
reg:   apu_flags_ex_o [15] = 000000000000000 // apu_flags_ex_o
reg:   apu_lat_ex_o [2] = 00 // apu_lat_ex_o
reg:   apu_op_ex_o [6] = 000000 // apu_op_ex_o
reg:   apu_operands_ex_o [96] = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx000000000 // apu_operands_ex_o
reg:   apu_type_ex_o [2] = 00 // apu_type_ex_o
reg:   apu_waddr_ex_o [6] = 000000 // apu_waddr_ex_o
reg:   bmask_a_ex_o [5] = 00000 // bmask_a_ex_o
reg:   bmask_a_id [5] = 00000 // bmask_a_id
reg:   bmask_a_id_imm [5] = 00000 // bmask_a_id_imm
reg:   bmask_b_ex_o [5] = 00000 // bmask_b_ex_o
reg:   bmask_b_id [5] = 00000 // bmask_b_id
reg:   bmask_b_id_imm [5] = 00000 // bmask_b_id_imm
reg:   branch_in_ex_o [1] = 0 // branch_in_ex_o
reg:   csr_access_ex_o [1] = 0 // csr_access_ex_o
reg:   csr_op_ex_o [2] = 00 // csr_op_ex_o
reg:   data_load_event_ex_o [1] = 0 // data_load_event_ex_o
reg:   data_misaligned_ex_o [1] = 0 // data_misaligned_ex_o
reg:   data_reg_offset_ex_o [2] = 00 // data_reg_offset_ex_o
reg:   data_req_ex_o [1] = 0 // data_req_ex_o
reg:   data_sign_ext_ex_o [1] = 0 // data_sign_ext_ex_o
reg:   data_type_ex_o [2] = 00 // data_type_ex_o
reg:   data_we_ex_o [1] = 0 // data_we_ex_o
reg:   fpu_op_ex_o [4] = 0000 // fpu_op_ex_o
reg:   hwloop_cnt_int [32] = 00000000000000000000000000000000 // hwloop_cnt_int
reg:   hwloop_start_int [32] = 00000000000000000000000000000000 // hwloop_start_int
reg:   hwloop_target [32] = 00000000000000000000000000000000 // hwloop_target
reg:   imm_a [32] = 00000000000000000000000000000000 // imm_a
reg:   imm_b [32] = 00000000000000000000000000000000 // imm_b
reg:   imm_shuffle_type [32] = 00000000000000000000000000000000 // imm_shuffle_type
reg:   imm_vec_ext_ex_o [2] = 00 // imm_vec_ext_ex_o
reg:   jump_target [32] = 00000000000000000000000000000000 // jump_target
reg:   mult_dot_op_a_ex_o [32] = 00000000000000000000000000000000 // mult_dot_op_a_ex_o
reg:   mult_dot_op_b_ex_o [32] = 00000000000000000000000000000000 // mult_dot_op_b_ex_o
reg:   mult_dot_op_c_ex_o [32] = 00000000000000000000000000000000 // mult_dot_op_c_ex_o
reg:   mult_dot_signed_ex_o [2] = 00 // mult_dot_signed_ex_o
reg:   mult_en_ex_o [1] = 0 // mult_en_ex_o
reg:   mult_imm_ex_o [5] = 00000 // mult_imm_ex_o
reg:   mult_imm_id [5] = 00000 // mult_imm_id
reg:   mult_operand_a_ex_o [32] = 00000000000000000000000000000000 // mult_operand_a_ex_o
reg:   mult_operand_b_ex_o [32] = 00000000000000000000000000000000 // mult_operand_b_ex_o
reg:   mult_operand_c_ex_o [32] = 00000000000000000000000000000000 // mult_operand_c_ex_o
reg:   mult_operator_ex_o [3] = 000 // mult_operator_ex_o
reg:   mult_sel_subword_ex_o [1] = 0 // mult_sel_subword_ex_o
reg:   mult_signed_mode_ex_o [2] = 00 // mult_signed_mode_ex_o
reg:   operand_a_fw_id [32] = 00000000000000000000000000000000 // operand_a_fw_id
reg:   operand_b [32] = 00000000000000000000000000000000 // operand_b
reg:   operand_b_fw_id [32] = 00000000000000000000000000000000 // operand_b_fw_id
reg:   operand_b_vec [32] = 00000000000000000000000000000000 // operand_b_vec
reg:   operand_c_fw_id [32] = 00000000000000000000000000000000 // operand_c_fw_id
reg:   pc_ex_o [32] = 00000000000000000000000000000000 // pc_ex_o
reg:   prepost_useincr_ex_o [1] = 0 // prepost_useincr_ex_o
reg:   regfile_addr_rc_id [6] = 000000 // regfile_addr_rc_id
reg:   regfile_alu_waddr_ex_o [6] = 000000 // regfile_alu_waddr_ex_o
reg:   regfile_alu_we_ex_o [1] = 0 // regfile_alu_we_ex_o
reg:   regfile_waddr_ex_o [6] = 000000 // regfile_waddr_ex_o
reg:   regfile_we_ex_o [1] = 0 // regfile_we_ex_o
son:   tb.dut.id_stage_i.controller_i
son:   tb.dut.id_stage_i.decoder_i
son:   tb.dut.id_stage_i.hwloop_regs_i
son:   tb.dut.id_stage_i.int_controller_i
son:   tb.dut.id_stage_i.registers_i
module: riscv_controller tb.dut.id_stage_i.controller_i
net:   tb.dut.id_stage_i.controller_i.apu_read_dep_i [1] = 0     // apu_read_dep_i
net:   tb.dut.id_stage_i.controller_i.apu_stall_o [1] = 0     // apu_stall_o
net:   tb.dut.id_stage_i.controller_i.apu_write_dep_i [1] = 0     // apu_write_dep_i
net:   tb.dut.id_stage_i.controller_i.branch_taken_ex_i [1] = 0     // branch_taken_ex_i
net:   tb.dut.id_stage_i.controller_i.clk [1] = 0     // clk
net:   tb.dut.id_stage_i.controller_i.current_priv_lvl_i [2] = 11     // current_priv_lvl_i
net:   tb.dut.id_stage_i.controller_i.data_req_ex_i [1] = 0     // data_req_ex_i
net:   tb.dut.id_stage_i.controller_i.dbg_jump_req_i [1] = 0     // dbg_jump_req_i
net:   tb.dut.id_stage_i.controller_i.dbg_req_i [1] = 0     // dbg_req_i
net:   tb.dut.id_stage_i.controller_i.dbg_settings_i [6] = 000000     // dbg_settings_i
net:   tb.dut.id_stage_i.controller_i.dbg_stall_i [1] = 0     // dbg_stall_i
net:   tb.dut.id_stage_i.controller_i.ex_valid_i [1] = 0     // ex_valid_i
net:   tb.dut.id_stage_i.controller_i.fetch_enable_i [1] = 0     // fetch_enable_i
net:   tb.dut.id_stage_i.controller_i.id_ready_i [1] = 1     // id_ready_i
net:   tb.dut.id_stage_i.controller_i.m_IE_i [1] = 0     // m_IE_i
net:   tb.dut.id_stage_i.controller_i.misaligned_stall_o [1] = 0     // misaligned_stall_o
net:   tb.dut.id_stage_i.controller_i.mult_multicycle_i [1] = 0     // mult_multicycle_i
net:   tb.dut.id_stage_i.controller_i.perf_jr_stall_o [1] = 0     // perf_jr_stall_o
net:   tb.dut.id_stage_i.controller_i.perf_jump_o [1] = 0     // perf_jump_o
net:   tb.dut.id_stage_i.controller_i.perf_ld_stall_o [1] = 0     // perf_ld_stall_o
net:   tb.dut.id_stage_i.controller_i.reg_d_alu_is_reg_a_i [1] = 0     // reg_d_alu_is_reg_a_i
net:   tb.dut.id_stage_i.controller_i.reg_d_alu_is_reg_b_i [1] = 0     // reg_d_alu_is_reg_b_i
net:   tb.dut.id_stage_i.controller_i.reg_d_alu_is_reg_c_i [1] = 0     // reg_d_alu_is_reg_c_i
net:   tb.dut.id_stage_i.controller_i.reg_d_ex_is_reg_a_i [1] = 0     // reg_d_ex_is_reg_a_i
net:   tb.dut.id_stage_i.controller_i.reg_d_ex_is_reg_b_i [1] = 0     // reg_d_ex_is_reg_b_i
net:   tb.dut.id_stage_i.controller_i.reg_d_ex_is_reg_c_i [1] = 0     // reg_d_ex_is_reg_c_i
net:   tb.dut.id_stage_i.controller_i.reg_d_wb_is_reg_a_i [1] = 0     // reg_d_wb_is_reg_a_i
net:   tb.dut.id_stage_i.controller_i.reg_d_wb_is_reg_b_i [1] = 0     // reg_d_wb_is_reg_b_i
net:   tb.dut.id_stage_i.controller_i.reg_d_wb_is_reg_c_i [1] = 0     // reg_d_wb_is_reg_c_i
net:   tb.dut.id_stage_i.controller_i.regfile_alu_waddr_id_i [6] = 000000     // regfile_alu_waddr_id_i
net:   tb.dut.id_stage_i.controller_i.regfile_alu_we_fw_i [1] = 0     // regfile_alu_we_fw_i
net:   tb.dut.id_stage_i.controller_i.regfile_waddr_ex_i [6] = 000000     // regfile_waddr_ex_i
net:   tb.dut.id_stage_i.controller_i.regfile_we_ex_i [1] = 0     // regfile_we_ex_i
net:   tb.dut.id_stage_i.controller_i.regfile_we_wb_i [1] = 0     // regfile_we_wb_i
net:   tb.dut.id_stage_i.controller_i.rst_n [1] = 1     // rst_n
net:   tb.dut.id_stage_i.controller_i.u_IE_i [1] = 0     // u_IE_i
net:   tb.dut.id_stage_i.controller_i.wb_ready_i [1] = 1     // wb_ready_i
net:   tb.dut.id_stage_i.controller_i.uret_insn_i [1] = 0     // uret_insn_i
net:   tb.dut.id_stage_i.controller_i.pipe_flush_i [1] = 0     // pipe_flush_i
net:   tb.dut.id_stage_i.controller_i.mret_insn_i [1] = 0     // mret_insn_i
net:   tb.dut.id_stage_i.controller_i.jump_in_id_i [2] = 00     // jump_in_id_i
net:   tb.dut.id_stage_i.controller_i.jump_in_dec_i [2] = 00     // jump_in_dec_i
net:   tb.dut.id_stage_i.controller_i.irq_sec_ctrl_i [1] = 0     // irq_sec_ctrl_i
net:   tb.dut.id_stage_i.controller_i.irq_req_ctrl_i [1] = 0     // irq_req_ctrl_i
net:   tb.dut.id_stage_i.controller_i.irq_id_ctrl_i [5] = 00000     // irq_id_ctrl_i
net:   tb.dut.id_stage_i.controller_i.instr_valid_i [1] = 0     // instr_valid_i
net:   tb.dut.id_stage_i.controller_i.instr_multicycle_i [1] = 0     // instr_multicycle_i
net:   tb.dut.id_stage_i.controller_i.illegal_insn_i [1] = 1     // illegal_insn_i
net:   tb.dut.id_stage_i.controller_i.ecall_insn_i [1] = 0     // ecall_insn_i
net:   tb.dut.id_stage_i.controller_i.ebrk_insn_i [1] = 0     // ebrk_insn_i
net:   tb.dut.id_stage_i.controller_i.data_misaligned_i [1] = 0     // data_misaligned_i
net:   tb.dut.id_stage_i.controller_i.data_load_event_i [1] = 0     // data_load_event_i
net:   tb.dut.id_stage_i.controller_i.csr_status_i [1] = 0     // csr_status_i
net:   tb.dut.id_stage_i.controller_i.apu_en_i [1] = 0     // apu_en_i
reg:   boot_done [1] = 0 // boot_done
reg:   boot_done_q [1] = 0 // boot_done_q
reg:   branch_in_id [1] = 0 // branch_in_id
reg:   csr_cause_o [6] = 000000 // csr_cause_o
reg:   csr_irq_sec_o [1] = 0 // csr_irq_sec_o
reg:   csr_restore_mret_id_o [1] = 0 // csr_restore_mret_id_o
reg:   csr_restore_uret_id_o [1] = 0 // csr_restore_uret_id_o
reg:   csr_save_cause_o [1] = 0 // csr_save_cause_o
reg:   csr_save_id_o [1] = 0 // csr_save_id_o
reg:   csr_save_if_o [1] = 0 // csr_save_if_o
reg:   ctrl_busy_o [1] = 0 // ctrl_busy_o
reg:   ctrl_fsm_cs [5] = 00000 // ctrl_fsm_cs
reg:   ctrl_fsm_ns [5] = 00000 // ctrl_fsm_ns
reg:   dbg_ack_o [1] = 0 // dbg_ack_o
reg:   dbg_trap_o [1] = 0 // dbg_trap_o
reg:   deassert_we_o [1] = 1 // deassert_we_o
reg:   exc_ack_o [1] = 0 // exc_ack_o
reg:   exc_cause_o [6] = 000000 // exc_cause_o
reg:   exc_kill_o [1] = 0 // exc_kill_o
reg:   exc_pc_mux_o [2] = 11 // exc_pc_mux_o
reg:   first_fetch_o [1] = 0 // first_fetch_o
reg:   halt_id_o [1] = 0 // halt_id_o
reg:   halt_if_o [1] = 0 // halt_if_o
reg:   instr_req_o [1] = 0 // instr_req_o
reg:   irq_ack_o [1] = 0 // irq_ack_o
reg:   irq_enable_int [1] = 0 // irq_enable_int
reg:   irq_id_o [5] = 00000 // irq_id_o
reg:   is_decoding_o [1] = 0 // is_decoding_o
reg:   jr_stall_o [1] = 0 // jr_stall_o
reg:   jump_done [1] = 0 // jump_done
reg:   jump_done_q [1] = 0 // jump_done_q
reg:   jump_in_dec [1] = 0 // jump_in_dec
reg:   load_stall_o [1] = 0 // load_stall_o
reg:   operand_a_fw_mux_sel_o [2] = 00 // operand_a_fw_mux_sel_o
reg:   operand_b_fw_mux_sel_o [2] = 00 // operand_b_fw_mux_sel_o
reg:   operand_c_fw_mux_sel_o [2] = 00 // operand_c_fw_mux_sel_o
reg:   pc_mux_o [3] = 000 // pc_mux_o
reg:   pc_set_o [1] = 0 // pc_set_o
reg:   trap_addr_mux_o [1] = 0 // trap_addr_mux_o
module: riscv_decoder tb.dut.id_stage_i.decoder_i
net:   tb.dut.id_stage_i.decoder_i.current_priv_lvl_i [2] = 11     // current_priv_lvl_i
net:   tb.dut.id_stage_i.decoder_i.deassert_we_i [1] = 1     // deassert_we_i
net:   tb.dut.id_stage_i.decoder_i.instr_rdata_i [32] = 00000000000000000000000000000000     // instr_rdata_i
net:   tb.dut.id_stage_i.decoder_i.jump_in_dec_o [2] = 00     // jump_in_dec_o
net:   tb.dut.id_stage_i.decoder_i.mult_multicycle_i [1] = 0     // mult_multicycle_i
net:   tb.dut.id_stage_i.decoder_i.regfile_mem_we_o [1] = 0     // regfile_mem_we_o
net:   tb.dut.id_stage_i.decoder_i.regfile_alu_we_o [1] = 0     // regfile_alu_we_o
net:   tb.dut.id_stage_i.decoder_i.jump_in_id_o [2] = 00     // jump_in_id_o
net:   tb.dut.id_stage_i.decoder_i.illegal_c_insn_i [1] = 0     // illegal_c_insn_i
net:   tb.dut.id_stage_i.decoder_i.hwloop_we_o [3] = 000     // hwloop_we_o
net:   tb.dut.id_stage_i.decoder_i.data_req_o [1] = 0     // data_req_o
net:   tb.dut.id_stage_i.decoder_i.data_misaligned_i [1] = 0     // data_misaligned_i
net:   tb.dut.id_stage_i.decoder_i.csr_op_o [2] = 00     // csr_op_o
net:   tb.dut.id_stage_i.decoder_i.apu_en_o [1] = 0     // apu_en_o
reg:   alu_bmask_a_mux_sel_o [1] = 1 // alu_bmask_a_mux_sel_o
reg:   alu_bmask_b_mux_sel_o [1] = 1 // alu_bmask_b_mux_sel_o
reg:   alu_en_o [1] = 1 // alu_en_o
reg:   alu_op_a_mux_sel_o [3] = 000 // alu_op_a_mux_sel_o
reg:   alu_op_b_mux_sel_o [3] = 000 // alu_op_b_mux_sel_o
reg:   alu_op_c_mux_sel_o [2] = 00 // alu_op_c_mux_sel_o
reg:   alu_operator_o [7] = 0000011 // alu_operator_o
reg:   alu_vec_mode_o [2] = 00 // alu_vec_mode_o
reg:   apu_en [1] = 0 // apu_en
reg:   apu_flags_src_o [2] = 00 // apu_flags_src_o
reg:   apu_lat_o [2] = 00 // apu_lat_o
reg:   apu_op_o [6] = 000000 // apu_op_o
reg:   apu_type_o [2] = 00 // apu_type_o
reg:   bmask_a_mux_o [1] = 0 // bmask_a_mux_o
reg:   bmask_b_mux_o [2] = 10 // bmask_b_mux_o
reg:   csr_access_o [1] = 0 // csr_access_o
reg:   csr_illegal [1] = 0 // csr_illegal
reg:   csr_op [2] = 00 // csr_op
reg:   csr_status_o [1] = 0 // csr_status_o
reg:   data_load_event_o [1] = 0 // data_load_event_o
reg:   data_reg_offset_o [2] = 00 // data_reg_offset_o
reg:   data_req [1] = 0 // data_req
reg:   data_sign_extension_o [1] = 0 // data_sign_extension_o
reg:   data_type_o [2] = 00 // data_type_o
reg:   data_we_o [1] = 0 // data_we_o
reg:   ebrk_insn_o [1] = 0 // ebrk_insn_o
reg:   ecall_insn_o [1] = 0 // ecall_insn_o
reg:   fp_rnd_mode_o [3] = 000 // fp_rnd_mode_o
reg:   fpu_op_o [4] = 0000 // fpu_op_o
reg:   hwloop_cnt_mux_sel_o [1] = 0 // hwloop_cnt_mux_sel_o
reg:   hwloop_start_mux_sel_o [1] = 0 // hwloop_start_mux_sel_o
reg:   hwloop_target_mux_sel_o [1] = 0 // hwloop_target_mux_sel_o
reg:   hwloop_we [3] = 000 // hwloop_we
reg:   illegal_insn_o [1] = 1 // illegal_insn_o
reg:   imm_a_mux_sel_o [1] = 1 // imm_a_mux_sel_o
reg:   imm_b_mux_sel_o [4] = 0000 // imm_b_mux_sel_o
reg:   instr_multicycle_o [1] = 0 // instr_multicycle_o
reg:   jump_in_id [2] = 00 // jump_in_id
reg:   jump_target_mux_sel_o [2] = 01 // jump_target_mux_sel_o
reg:   mret_insn_o [1] = 0 // mret_insn_o
reg:   mult_dot_en_o [1] = 0 // mult_dot_en_o
reg:   mult_dot_signed_o [2] = 00 // mult_dot_signed_o
reg:   mult_imm_mux_o [1] = 0 // mult_imm_mux_o
reg:   mult_int_en_o [1] = 0 // mult_int_en_o
reg:   mult_operator_o [3] = 010 // mult_operator_o
reg:   mult_sel_subword_o [1] = 0 // mult_sel_subword_o
reg:   mult_signed_mode_o [2] = 00 // mult_signed_mode_o
reg:   pipe_flush_o [1] = 0 // pipe_flush_o
reg:   prepost_useincr_o [1] = 1 // prepost_useincr_o
reg:   reg_fp_a_o [1] = 0 // reg_fp_a_o
reg:   reg_fp_b_o [1] = 0 // reg_fp_b_o
reg:   reg_fp_c_o [1] = 0 // reg_fp_c_o
reg:   reg_fp_d_o [1] = 0 // reg_fp_d_o
reg:   rega_used_o [1] = 0 // rega_used_o
reg:   regb_used_o [1] = 0 // regb_used_o
reg:   regc_mux_o [2] = 11 // regc_mux_o
reg:   regc_used_o [1] = 0 // regc_used_o
reg:   regfile_alu_waddr_sel_o [1] = 1 // regfile_alu_waddr_sel_o
reg:   regfile_alu_we [1] = 0 // regfile_alu_we
reg:   regfile_mem_we [1] = 0 // regfile_mem_we
reg:   scalar_replication_o [1] = 0 // scalar_replication_o
reg:   uret_insn_o [1] = 0 // uret_insn_o
module: riscv_hwloop_regs tb.dut.id_stage_i.hwloop_regs_i
net:   tb.dut.id_stage_i.hwloop_regs_i.clk [1] = 0     // clk
net:   tb.dut.id_stage_i.hwloop_regs_i.hwlp_cnt_data_i [32] = 00000000000000000000000000000000     // hwlp_cnt_data_i
net:   tb.dut.id_stage_i.hwloop_regs_i.hwlp_counter_o [64] = 0000000000000000000000000000000000000000000000000000000000000000     // hwlp_counter_o
net:   tb.dut.id_stage_i.hwloop_regs_i.hwlp_end_addr_o [64] = 0000000000000000000000000000000000000000000000000000000000000000     // hwlp_end_addr_o
net:   tb.dut.id_stage_i.hwloop_regs_i.hwlp_end_data_i [32] = 00000000000000000000000000000000     // hwlp_end_data_i
net:   tb.dut.id_stage_i.hwloop_regs_i.hwlp_regid_i [1] = 0     // hwlp_regid_i
net:   tb.dut.id_stage_i.hwloop_regs_i.hwlp_start_addr_o [64] = 0000000000000000000000000000000000000000000000000000000000000000     // hwlp_start_addr_o
net:   tb.dut.id_stage_i.hwloop_regs_i.hwlp_start_data_i [32] = 00000000000000000000000000000000     // hwlp_start_data_i
net:   tb.dut.id_stage_i.hwloop_regs_i.hwlp_we_i [3] = 000     // hwlp_we_i
net:   tb.dut.id_stage_i.hwloop_regs_i.rst_n [1] = 1     // rst_n
net:   tb.dut.id_stage_i.hwloop_regs_i.valid_i [1] = 0     // valid_i
net:   tb.dut.id_stage_i.hwloop_regs_i.hwlp_dec_cnt_i [2] = 00     // hwlp_dec_cnt_i
net:   tb.dut.id_stage_i.hwloop_regs_i.hwlp_counter_n [64] = 1111111111111111111111111111111111111111111111111111111111111111     // hwlp_counter_n
reg:   hwlp_counter_q [64] = 0000000000000000000000000000000000000000000000000000000000000000 // hwlp_counter_q
reg:   hwlp_end_q [64] = 0000000000000000000000000000000000000000000000000000000000000000 // hwlp_end_q
reg:   hwlp_start_q [64] = 0000000000000000000000000000000000000000000000000000000000000000 // hwlp_start_q
reg:   i [32] = xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx // i
module: riscv_int_controller tb.dut.id_stage_i.int_controller_i
net:   tb.dut.id_stage_i.int_controller_i.clk [1] = 0     // clk
net:   tb.dut.id_stage_i.int_controller_i.ctrl_ack_i [1] = 0     // ctrl_ack_i
net:   tb.dut.id_stage_i.int_controller_i.ctrl_kill_i [1] = 0     // ctrl_kill_i
net:   tb.dut.id_stage_i.int_controller_i.current_priv_lvl_i [2] = 11     // current_priv_lvl_i
net:   tb.dut.id_stage_i.int_controller_i.irq_i [1] = 0     // irq_i
net:   tb.dut.id_stage_i.int_controller_i.irq_id_ctrl_o [5] = 00000     // irq_id_ctrl_o
net:   tb.dut.id_stage_i.int_controller_i.irq_id_i [5] = 00000     // irq_id_i
net:   tb.dut.id_stage_i.int_controller_i.irq_sec_ctrl_o [1] = 0     // irq_sec_ctrl_o
net:   tb.dut.id_stage_i.int_controller_i.irq_sec_i [1] = 0     // irq_sec_i
net:   tb.dut.id_stage_i.int_controller_i.m_IE_i [1] = 0     // m_IE_i
net:   tb.dut.id_stage_i.int_controller_i.rst_n [1] = 1     // rst_n
net:   tb.dut.id_stage_i.int_controller_i.u_IE_i [1] = 0     // u_IE_i
net:   tb.dut.id_stage_i.int_controller_i.irq_req_ctrl_o [1] = 0     // irq_req_ctrl_o
net:   tb.dut.id_stage_i.int_controller_i.irq_enable_ext [1] = 0     // irq_enable_ext
reg:   exc_ctrl_cs [2] = 00 // exc_ctrl_cs
reg:   irq_id_q [5] = 00000 // irq_id_q
reg:   irq_sec_q [1] = 0 // irq_sec_q
module: riscv_register_file tb.dut.id_stage_i.registers_i
net:   tb.dut.id_stage_i.registers_i.clk [1] = 0     // clk
net:   tb.dut.id_stage_i.registers_i.raddr_a_i [6] = 000000     // raddr_a_i
net:   tb.dut.id_stage_i.registers_i.raddr_b_i [6] = 000000     // raddr_b_i
net:   tb.dut.id_stage_i.registers_i.raddr_c_i [6] = 000000     // raddr_c_i
net:   tb.dut.id_stage_i.registers_i.rst_n [1] = 1     // rst_n
net:   tb.dut.id_stage_i.registers_i.test_en_i [1] = 0     // test_en_i
net:   tb.dut.id_stage_i.registers_i.waddr_a_i [6] = 000000     // waddr_a_i
net:   tb.dut.id_stage_i.registers_i.waddr_b_i [6] = 000000     // waddr_b_i
net:   tb.dut.id_stage_i.registers_i.wdata_a_i [32] = 00000000000000000000000000000000     // wdata_a_i
net:   tb.dut.id_stage_i.registers_i.wdata_b_i [32] = 00000000000000000000000000000000     // wdata_b_i
net:   tb.dut.id_stage_i.registers_i.we_a_i [1] = 0     // we_a_i
net:   tb.dut.id_stage_i.registers_i.we_b_i [1] = 0     // we_b_i
net:   tb.dut.id_stage_i.registers_i.rdata_c_o [32] = 00000000000000000000000000000000     // rdata_c_o
net:   tb.dut.id_stage_i.registers_i.rdata_b_o [32] = 00000000000000000000000000000000     // rdata_b_o
net:   tb.dut.id_stage_i.registers_i.rdata_a_o [32] = 00000000000000000000000000000000     // rdata_a_o
reg:   ii [32] = 00000000000000000000000000100000 // ii
reg:   memmem
reg:   we_a_dec [32] = 00000000000000000000000000000000 // we_a_dec
reg:   we_b_dec [32] = 00000000000000000000000000000000 // we_b_dec
module: riscv_if_stage tb.dut.if_stage_i
net:   tb.dut.if_stage_i.boot_addr_i [24] = 000000000000000000000000     // boot_addr_i
net:   tb.dut.if_stage_i.clear_instr_valid_i [1] = 1     // clear_instr_valid_i
net:   tb.dut.if_stage_i.clk [1] = 0     // clk
net:   tb.dut.if_stage_i.dbg_jump_addr_i [32] = 00000000000000000000000000000000     // dbg_jump_addr_i
net:   tb.dut.if_stage_i.dbg_jump_req_i [1] = 0     // dbg_jump_req_i
net:   tb.dut.if_stage_i.exc_pc_mux_i [2] = 11     // exc_pc_mux_i
net:   tb.dut.if_stage_i.exc_vec_pc_mux_i [5] = 00000     // exc_vec_pc_mux_i
net:   tb.dut.if_stage_i.exception_pc_reg_i [32] = 00000000000000000000000000000000     // exception_pc_reg_i
net:   tb.dut.if_stage_i.halt_if_i [1] = 0     // halt_if_i
net:   tb.dut.if_stage_i.hwlp_cnt_i [64] = 0000000000000000000000000000000000000000000000000000000000000000     // hwlp_cnt_i
net:   tb.dut.if_stage_i.hwlp_end_i [64] = 0000000000000000000000000000000000000000000000000000000000000000     // hwlp_end_i
net:   tb.dut.if_stage_i.hwlp_start_i [64] = 0000000000000000000000000000000000000000000000000000000000000000     // hwlp_start_i
net:   tb.dut.if_stage_i.id_ready_i [1] = 1     // id_ready_i
net:   tb.dut.if_stage_i.if_busy_o [1] = 0     // if_busy_o
net:   tb.dut.if_stage_i.if_ready [1] = 0     // if_ready
net:   tb.dut.if_stage_i.if_valid [1] = 0     // if_valid
net:   tb.dut.if_stage_i.instr_gnt_i [1] = 0     // instr_gnt_i
net:   tb.dut.if_stage_i.instr_rdata_i [32] = 00000000000000000000000000000000     // instr_rdata_i
net:   tb.dut.if_stage_i.instr_rvalid_i [1] = 0     // instr_rvalid_i
net:   tb.dut.if_stage_i.is_hwlp_id_o [1] = 0     // is_hwlp_id_o
net:   tb.dut.if_stage_i.jump_target_ex_i [32] = 00000000000000000000000000000000     // jump_target_ex_i
net:   tb.dut.if_stage_i.jump_target_id_i [32] = 00000000000000000000000000000000     // jump_target_id_i
net:   tb.dut.if_stage_i.m_trap_base_addr_i [24] = 000000000000000000000000     // m_trap_base_addr_i
net:   tb.dut.if_stage_i.pc_if_o [32] = 00000000000000000000000000000000     // pc_if_o
net:   tb.dut.if_stage_i.pc_mux_i [3] = 000     // pc_mux_i
net:   tb.dut.if_stage_i.pc_set_i [1] = 0     // pc_set_i
net:   tb.dut.if_stage_i.perf_imiss_o [1] = 1     // perf_imiss_o
net:   tb.dut.if_stage_i.req_i [1] = 0     // req_i
net:   tb.dut.if_stage_i.rst_n [1] = 1     // rst_n
net:   tb.dut.if_stage_i.trap_addr_mux_i [1] = 0     // trap_addr_mux_i
net:   tb.dut.if_stage_i.u_trap_base_addr_i [24] = xxxxxxxxxxxxxxxxxxxxxxxx     // u_trap_base_addr_i
net:   tb.dut.if_stage_i.prefetch_busy [1] = 0     // prefetch_busy
net:   tb.dut.if_stage_i.instr_req_o [1] = 0     // instr_req_o
net:   tb.dut.if_stage_i.instr_decompressed [32] = 00000000000000010000010000010011     // instr_decompressed
net:   tb.dut.if_stage_i.instr_compressed_int [1] = 1     // instr_compressed_int
net:   tb.dut.if_stage_i.instr_addr_o [32] = 00000000000000000000000000000100     // instr_addr_o
net:   tb.dut.if_stage_i.illegal_c_insn [1] = 1     // illegal_c_insn
net:   tb.dut.if_stage_i.hwlp_target [32] = 00000000000000000000000000000000     // hwlp_target
net:   tb.dut.if_stage_i.hwlp_jump [1] = 0     // hwlp_jump
net:   tb.dut.if_stage_i.hwlp_dec_cnt [2] = 00     // hwlp_dec_cnt
net:   tb.dut.if_stage_i.hwlp_branch [1] = 0     // hwlp_branch
net:   tb.dut.if_stage_i.fetch_valid [1] = 0     // fetch_valid
net:   tb.dut.if_stage_i.fetch_rdata [32] = 00000000000000000000000000000000     // fetch_rdata
net:   tb.dut.if_stage_i.fetch_is_hwlp [1] = 0     // fetch_is_hwlp
net:   tb.dut.if_stage_i.fetch_addr [32] = 00000000000000000000000000000000     // fetch_addr
reg:   branch_req [1] = 0 // branch_req
reg:   exc_pc [32] = 00000000000000000000000000000000 // exc_pc
reg:   fetch_addr_n [32] = 00000000000000000000000010000000 // fetch_addr_n
reg:   fetch_ready [1] = 0 // fetch_ready
reg:   hwlp_dec_cnt_id_o [2] = 00 // hwlp_dec_cnt_id_o
reg:   hwlp_dec_cnt_if [2] = 00 // hwlp_dec_cnt_if
reg:   illegal_c_insn_id_o [1] = 0 // illegal_c_insn_id_o
reg:   instr_rdata_id_o [32] = 00000000000000000000000000000000 // instr_rdata_id_o
reg:   instr_valid_id_o [1] = 0 // instr_valid_id_o
reg:   is_compressed_id_o [1] = 0 // is_compressed_id_o
reg:   is_hwlp_id_q [1] = 0 // is_hwlp_id_q
reg:   offset_fsm_cs [1] = 1 // offset_fsm_cs
reg:   offset_fsm_ns [1] = 1 // offset_fsm_ns
reg:   pc_id_o [32] = 00000000000000000000000000000000 // pc_id_o
reg:   trap_base_addr [24] = 000000000000000000000000 // trap_base_addr
reg:   valid [1] = 0 // valid
son:   tb.dut.if_stage_i.compressed_decoder_i
son:   tb.dut.if_stage_i.hwloop_controller_i
module: riscv_compressed_decoder tb.dut.if_stage_i.compressed_decoder_i
net:   tb.dut.if_stage_i.compressed_decoder_i.is_compressed_o [1] = 1     // is_compressed_o
net:   tb.dut.if_stage_i.compressed_decoder_i.instr_i [32] = 00000000000000000000000000000000     // instr_i
reg:   illegal_instr_o [1] = 1 // illegal_instr_o
reg:   instr_o [32] = 00000000000000010000010000010011 // instr_o
module: riscv_hwloop_controller tb.dut.if_stage_i.hwloop_controller_i
net:   tb.dut.if_stage_i.hwloop_controller_i.current_pc_i [32] = 00000000000000000000000000000000     // current_pc_i
net:   tb.dut.if_stage_i.hwloop_controller_i.hwlp_counter_i [64] = 0000000000000000000000000000000000000000000000000000000000000000     // hwlp_counter_i
net:   tb.dut.if_stage_i.hwloop_controller_i.hwlp_dec_cnt_id_i [2] = 00     // hwlp_dec_cnt_id_i
net:   tb.dut.if_stage_i.hwloop_controller_i.hwlp_end_addr_i [64] = 0000000000000000000000000000000000000000000000000000000000000000     // hwlp_end_addr_i
net:   tb.dut.if_stage_i.hwloop_controller_i.hwlp_start_addr_i [64] = 0000000000000000000000000000000000000000000000000000000000000000     // hwlp_start_addr_i
net:   tb.dut.if_stage_i.hwloop_controller_i.hwlp_jump_o [1] = 0     // hwlp_jump_o
reg:   hwlp_dec_cnt_o [2] = 00 // hwlp_dec_cnt_o
reg:   hwlp_targ_addr_o [32] = 00000000000000000000000000000000 // hwlp_targ_addr_o
reg:   j [32] = 00000000000000000000000000000010 // j
reg:   pc_is_end_addr [2] = 00 // pc_is_end_addr
module: riscv_load_store_unit tb.dut.load_store_unit_i
net:   tb.dut.load_store_unit_i.addr_useincr_ex_i [1] = 0     // addr_useincr_ex_i
net:   tb.dut.load_store_unit_i.busy_o [1] = 0     // busy_o
net:   tb.dut.load_store_unit_i.clk [1] = 0     // clk
net:   tb.dut.load_store_unit_i.data_addr_o [32] = 00000000000000000000000000000000     // data_addr_o
net:   tb.dut.load_store_unit_i.data_be_o [4] = 1111     // data_be_o
net:   tb.dut.load_store_unit_i.data_err_i [1] = 0     // data_err_i
net:   tb.dut.load_store_unit_i.data_gnt_i [1] = 0     // data_gnt_i
net:   tb.dut.load_store_unit_i.data_misaligned_ex_i [1] = 0     // data_misaligned_ex_i
net:   tb.dut.load_store_unit_i.data_rdata_i [32] = 00000000000000000000000000000000     // data_rdata_i
net:   tb.dut.load_store_unit_i.data_reg_offset_ex_i [2] = 00     // data_reg_offset_ex_i
net:   tb.dut.load_store_unit_i.data_req_ex_i [1] = 0     // data_req_ex_i
net:   tb.dut.load_store_unit_i.data_rvalid_i [1] = 0     // data_rvalid_i
net:   tb.dut.load_store_unit_i.data_sign_ext_ex_i [1] = 0     // data_sign_ext_ex_i
net:   tb.dut.load_store_unit_i.data_type_ex_i [2] = 00     // data_type_ex_i
net:   tb.dut.load_store_unit_i.data_wdata_ex_i [32] = 00000000000000000000000000000000     // data_wdata_ex_i
net:   tb.dut.load_store_unit_i.data_wdata_o [32] = 00000000000000000000000000000000     // data_wdata_o
net:   tb.dut.load_store_unit_i.data_we_ex_i [1] = 0     // data_we_ex_i
net:   tb.dut.load_store_unit_i.data_we_o [1] = 0     // data_we_o
net:   tb.dut.load_store_unit_i.ex_valid_i [1] = 0     // ex_valid_i
net:   tb.dut.load_store_unit_i.load_err_o [1] = 0     // load_err_o
net:   tb.dut.load_store_unit_i.misaligned_st [1] = 0     // misaligned_st
net:   tb.dut.load_store_unit_i.operand_a_ex_i [32] = 00000000000000000000000000000000     // operand_a_ex_i
net:   tb.dut.load_store_unit_i.operand_b_ex_i [32] = 00000000000000000000000000000000     // operand_b_ex_i
net:   tb.dut.load_store_unit_i.rst_n [1] = 1     // rst_n
net:   tb.dut.load_store_unit_i.store_err_o [1] = 0     // store_err_o
net:   tb.dut.load_store_unit_i.wdata_offset [2] = 00     // wdata_offset
net:   tb.dut.load_store_unit_i.data_rdata_ex_o [32] = 00000000000000000000000000000000     // data_rdata_ex_o
net:   tb.dut.load_store_unit_i.data_addr_int [32] = 00000000000000000000000000000000     // data_addr_int
reg:   CS [2] = 00 // CS
reg:   NS [2] = 00 // NS
reg:   data_be [4] = 1111 // data_be
reg:   data_misaligned_o [1] = 0 // data_misaligned_o
reg:   data_rdata_ext [32] = 00000000000000000000000000000000 // data_rdata_ext
reg:   data_req_o [1] = 0 // data_req_o
reg:   data_sign_ext_q [1] = 0 // data_sign_ext_q
reg:   data_type_q [2] = 00 // data_type_q
reg:   data_wdata [32] = 00000000000000000000000000000000 // data_wdata
reg:   data_we_q [1] = 0 // data_we_q
reg:   lsu_ready_ex_o [1] = 1 // lsu_ready_ex_o
reg:   lsu_ready_wb_o [1] = 1 // lsu_ready_wb_o
reg:   rdata_b_ext [32] = 00000000000000000000000000000000 // rdata_b_ext
reg:   rdata_h_ext [32] = 00000000000000000000000000000000 // rdata_h_ext
reg:   rdata_offset_q [2] = 00 // rdata_offset_q
reg:   rdata_q [32] = 00000000000000000000000000000000 // rdata_q
reg:   rdata_w_ext [32] = 00000000000000000000000000000000 // rdata_w_ext
