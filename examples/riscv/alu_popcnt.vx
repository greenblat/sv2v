module alu_popcnt(
    input [31:0] in_i
    ,output [5:0] result_o
);
wire [1:0] [4:0] cnt_l4;
wire [7:0] [2:0] cnt_l2;
wire [3:0] [3:0] cnt_l3;
wire [15:0] [1:0] cnt_l1;
genvar p;
genvar m;
genvar l;
genvar n;
assign   result_o = {1'b0, cnt_l4[0]} + {1'b0, cnt_l4[1]};
generate
    for(l=0;l < 16;l=l + 1)begin
assign cnt_l1[l] = ({1'b0, in_i[(2 * l)]} + {1'b0, in_i[((2 * l) + 1)]});
    end

endgenerate
generate
    for(m=0;m < 8;m=m + 1)begin
assign cnt_l2[m] = ({1'b0, cnt_l1[(2 * m)]} + {1'b0, cnt_l1[((2 * m) + 1)]});
    end

endgenerate
generate
    for(n=0;n < 4;n=n + 1)begin
assign cnt_l3[n] = ({1'b0, cnt_l2[(2 * n)]} + {1'b0, cnt_l2[((2 * n) + 1)]});
    end

endgenerate
generate
    for(p=0;p < 2;p=p + 1)begin
assign cnt_l4[p] = ({1'b0, cnt_l3[(2 * p)]} + {1'b0, cnt_l3[((2 * p) + 1)]});
    end

endgenerate
endmodule

